/**
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package org.xtext.example.mydsl1.javaDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl1.javaDsl.ArrayCreationExpression;
import org.xtext.example.mydsl1.javaDsl.ArrayExpression;
import org.xtext.example.mydsl1.javaDsl.JavaDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Array Creation Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl1.javaDsl.impl.ArrayCreationExpressionImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.javaDsl.impl.ArrayCreationExpressionImpl#getDimensions <em>Dimensions</em>}</li>
 *   <li>{@link org.xtext.example.mydsl1.javaDsl.impl.ArrayCreationExpressionImpl#getLayers <em>Layers</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ArrayCreationExpressionImpl extends MinimalEObjectImpl.Container implements ArrayCreationExpression
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getDimensions() <em>Dimensions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDimensions()
   * @generated
   * @ordered
   */
  protected EList<ArrayExpression> dimensions;

  /**
   * The cached value of the '{@link #getLayers() <em>Layers</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLayers()
   * @generated
   * @ordered
   */
  protected EList<String> layers;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ArrayCreationExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JavaDslPackage.Literals.ARRAY_CREATION_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JavaDslPackage.ARRAY_CREATION_EXPRESSION__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ArrayExpression> getDimensions()
  {
    if (dimensions == null)
    {
      dimensions = new EObjectContainmentEList<ArrayExpression>(ArrayExpression.class, this, JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS);
    }
    return dimensions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getLayers()
  {
    if (layers == null)
    {
      layers = new EDataTypeEList<String>(String.class, this, JavaDslPackage.ARRAY_CREATION_EXPRESSION__LAYERS);
    }
    return layers;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS:
        return ((InternalEList<?>)getDimensions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__TYPE:
        return getType();
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS:
        return getDimensions();
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__LAYERS:
        return getLayers();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__TYPE:
        setType((String)newValue);
        return;
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS:
        getDimensions().clear();
        getDimensions().addAll((Collection<? extends ArrayExpression>)newValue);
        return;
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__LAYERS:
        getLayers().clear();
        getLayers().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS:
        getDimensions().clear();
        return;
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__LAYERS:
        getLayers().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__DIMENSIONS:
        return dimensions != null && !dimensions.isEmpty();
      case JavaDslPackage.ARRAY_CREATION_EXPRESSION__LAYERS:
        return layers != null && !layers.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", layers: ");
    result.append(layers);
    result.append(')');
    return result.toString();
  }

} //ArrayCreationExpressionImpl
