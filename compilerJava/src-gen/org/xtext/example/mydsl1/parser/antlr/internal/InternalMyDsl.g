/*
 * generated by Xtext 2.13.0-SNAPSHOT
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Head";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHead
entryRuleHead returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHeadRule()); }
	iv_ruleHead=ruleHead
	{ $current=$iv_ruleHead.current; }
	EOF;

// Rule Head
ruleHead returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(RULE_PACKAGE)=>
		(
			{
				newCompositeNode(grammarAccess.getHeadAccess().getProgramCompilationUnitParserRuleCall_0());
			}
			lv_program_0_0=ruleCompilationUnit
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getHeadRule());
				}
				set(
					$current,
					"program",
					lv_program_0_0,
					"org.xtext.example.mydsl1.MyDsl.CompilationUnit");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompilationUnitRule()); }
	iv_ruleCompilationUnit=ruleCompilationUnit
	{ $current=$iv_ruleCompilationUnit.current; }
	EOF;

// Rule CompilationUnit
ruleCompilationUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(RULE_PACKAGE)=>
			(
				{
					newCompositeNode(grammarAccess.getCompilationUnitAccess().getPackagePackageStatementParserRuleCall_0_0());
				}
				lv_package_0_0=rulePackageStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
					}
					set(
						$current,
						"package",
						lv_package_0_0,
						"org.xtext.example.mydsl1.MyDsl.PackageStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(RULE_IMPORT)=>
			(
				{
					newCompositeNode(grammarAccess.getCompilationUnitAccess().getImportsImportStatementParserRuleCall_1_0());
				}
				lv_imports_1_0=ruleImportStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
					}
					add(
						$current,
						"imports",
						lv_imports_1_0,
						"org.xtext.example.mydsl1.MyDsl.ImportStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsTypeDeclarationParserRuleCall_2_0());
				}
				lv_typeDeclarations_2_0=ruleTypeDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCompilationUnitRule());
					}
					add(
						$current,
						"typeDeclarations",
						lv_typeDeclarations_2_0,
						"org.xtext.example.mydsl1.MyDsl.TypeDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePackageStatement
entryRulePackageStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPackageStatementRule()); }
	iv_rulePackageStatement=rulePackageStatement
	{ $current=$iv_rulePackageStatement.current; }
	EOF;

// Rule PackageStatement
rulePackageStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(RULE_PACKAGE)=>
			this_PACKAGE_0=RULE_PACKAGE
			{
				newLeafNode(this_PACKAGE_0, grammarAccess.getPackageStatementAccess().getPACKAGETerminalRuleCall_0());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPackageStatementAccess().getNamePackageNameParserRuleCall_1_0());
				}
				lv_name_1_0=rulePackageName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPackageStatementRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.mydsl1.MyDsl.PackageName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getPackageStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleImportStatement
entryRuleImportStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportStatementRule()); }
	iv_ruleImportStatement=ruleImportStatement
	{ $current=$iv_ruleImportStatement.current; }
	EOF;

// Rule ImportStatement
ruleImportStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(RULE_IMPORT)=>
			this_IMPORT_0=RULE_IMPORT
			{
				newLeafNode(this_IMPORT_0, grammarAccess.getImportStatementAccess().getIMPORTTerminalRuleCall_0());
			}
		)
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImportStatementAccess().getPackagePackageNameParserRuleCall_1_0_0_0());
						}
						lv_package_1_0=rulePackageName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportStatementRule());
							}
							set(
								$current,
								"package",
								lv_package_1_0,
								"org.xtext.example.mydsl1.MyDsl.PackageName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_2='.*'
				{
					newLeafNode(otherlv_2, grammarAccess.getImportStatementAccess().getFullStopAsteriskKeyword_1_0_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getImportStatementAccess().getObjectTypeNameParserRuleCall_1_1_0());
					}
					lv_object_3_0=ruleTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportStatementRule());
						}
						set(
							$current,
							"object",
							lv_object_3_0,
							"org.xtext.example.mydsl1.MyDsl.TypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getImportStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDeclarationRule()); }
	iv_ruleTypeDeclaration=ruleTypeDeclaration
	{ $current=$iv_ruleTypeDeclaration.current; }
	EOF;

// Rule TypeDeclaration
ruleTypeDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_doc_0_0=RULE_DOC_COMMENT
				{
					newLeafNode(lv_doc_0_0, grammarAccess.getTypeDeclarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"doc",
						lv_doc_0_0,
						"org.xtext.example.mydsl1.MyDsl.DOC_COMMENT");
				}
			)
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclarationAccess().getNameClassDeclarationParserRuleCall_1_0_0());
					}
					lv_name_1_0=ruleClassDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.example.mydsl1.MyDsl.ClassDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDeclarationAccess().getNameInterfaceDeclarationParserRuleCall_1_1_0());
					}
					lv_name_2_0=ruleInterfaceDeclaration
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
						}
						set(
							$current,
							"name",
							lv_name_2_0,
							"org.xtext.example.mydsl1.MyDsl.InterfaceDeclaration");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	iv_ruleClassDeclaration=ruleClassDeclaration
	{ $current=$iv_ruleClassDeclaration.current; }
	EOF;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getModifiersClassModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleClassModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.ClassModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_CLASS_1=RULE_CLASS
		{
			newLeafNode(this_CLASS_1, grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1());
		}
		(
			(
				lv_className_2_0=RULE_ID
				{
					newLeafNode(lv_className_2_0, grammarAccess.getClassDeclarationAccess().getClassNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"className",
						lv_className_2_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)
		(
			this_EXTENDS_3=RULE_EXTENDS
			{
				newLeafNode(this_EXTENDS_3, grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getClassDeclarationAccess().getExtendClassTypeParserRuleCall_3_1_0());
					}
					lv_extend_4_0=ruleClassType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
						}
						set(
							$current,
							"extend",
							lv_extend_4_0,
							"org.xtext.example.mydsl1.MyDsl.ClassType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getImplementsInterfacesParserRuleCall_4_0());
				}
				lv_implements_5_0=ruleInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					set(
						$current,
						"implements",
						lv_implements_5_0,
						"org.xtext.example.mydsl1.MyDsl.Interfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getClassDeclarationAccess().getBodyClassBodyParserRuleCall_5_0());
				}
				lv_body_6_0=ruleClassBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
					}
					set(
						$current,
						"body",
						lv_body_6_0,
						"org.xtext.example.mydsl1.MyDsl.ClassBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClassModifier
entryRuleClassModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassModifierRule()); }
	iv_ruleClassModifier=ruleClassModifier
	{ $current=$iv_ruleClassModifier.current.getText(); }
	EOF;

// Rule ClassModifier
ruleClassModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getClassModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_ABSTRACT_1=RULE_ABSTRACT
		{
			$current.merge(this_ABSTRACT_1);
		}
		{
			newLeafNode(this_ABSTRACT_1, grammarAccess.getClassModifierAccess().getABSTRACTTerminalRuleCall_1());
		}
		    |
		this_FINAL_2=RULE_FINAL
		{
			$current.merge(this_FINAL_2);
		}
		{
			newLeafNode(this_FINAL_2, grammarAccess.getClassModifierAccess().getFINALTerminalRuleCall_2());
		}
		    |
		this_PRIVATE_3=RULE_PRIVATE
		{
			$current.merge(this_PRIVATE_3);
		}
		{
			newLeafNode(this_PRIVATE_3, grammarAccess.getClassModifierAccess().getPRIVATETerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleInterfaces
entryRuleInterfaces returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfacesRule()); }
	iv_ruleInterfaces=ruleInterfaces
	{ $current=$iv_ruleInterfaces.current; }
	EOF;

// Rule Interfaces
ruleInterfaces returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_IMPLEMENTS
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getInterfacesAccess().getKeywordIMPLEMENTSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfacesRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"org.xtext.example.mydsl1.MyDsl.IMPLEMENTS");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0());
				}
				lv_interfaces_1_0=ruleInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfacesRule());
					}
					add(
						$current,
						"interfaces",
						lv_interfaces_1_0,
						"org.xtext.example.mydsl1.MyDsl.InterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getInterfacesAccess().getCommaKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInterfacesAccess().getInterfacesIntegralTypeParserRuleCall_2_1_0());
					}
					lv_interfaces_3_0=ruleIntegralType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInterfacesRule());
						}
						add(
							$current,
							"interfaces",
							lv_interfaces_3_0,
							"org.xtext.example.mydsl1.MyDsl.IntegralType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleClassBody
entryRuleClassBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassBodyRule()); }
	iv_ruleClassBody=ruleClassBody
	{ $current=$iv_ruleClassBody.current; }
	EOF;

// Rule ClassBody
ruleClassBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassBodyAccess().getDeclarationsClassBodyDeclarationParserRuleCall_1_0());
				}
				lv_declarations_1_0=ruleClassBodyDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassBodyRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_1_0,
						"org.xtext.example.mydsl1.MyDsl.ClassBodyDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleClassBodyDeclaration
entryRuleClassBodyDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassBodyDeclarationRule()); }
	iv_ruleClassBodyDeclaration=ruleClassBodyDeclaration
	{ $current=$iv_ruleClassBodyDeclaration.current; }
	EOF;

// Rule ClassBodyDeclaration
ruleClassBodyDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassBodyDeclarationAccess().getMemberClassMemberDeclarationParserRuleCall_0_0());
				}
				lv_member_0_0=ruleClassMemberDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassBodyDeclarationRule());
					}
					set(
						$current,
						"member",
						lv_member_0_0,
						"org.xtext.example.mydsl1.MyDsl.ClassMemberDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getClassBodyDeclarationAccess().getStaticInitializerParserRuleCall_1());
		}
		this_StaticInitializer_1=ruleStaticInitializer
		{
			$current = $this_StaticInitializer_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getClassBodyDeclarationAccess().getConstructorDeclarationParserRuleCall_2());
		}
		this_ConstructorDeclaration_2=ruleConstructorDeclaration
		{
			$current = $this_ConstructorDeclaration_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleClassMemberDeclaration
entryRuleClassMemberDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassMemberDeclarationRule()); }
	iv_ruleClassMemberDeclaration=ruleClassMemberDeclaration
	{ $current=$iv_ruleClassMemberDeclaration.current; }
	EOF;

// Rule ClassMemberDeclaration
ruleClassMemberDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getFieldFieldDeclarationParserRuleCall_0_0());
				}
				lv_field_0_0=ruleFieldDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
					}
					set(
						$current,
						"field",
						lv_field_0_0,
						"org.xtext.example.mydsl1.MyDsl.FieldDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getClassMemberDeclarationAccess().getMethodMethodDeclarationParserRuleCall_1_0());
				}
				lv_method_1_0=ruleMethodDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassMemberDeclarationRule());
					}
					set(
						$current,
						"method",
						lv_method_1_0,
						"org.xtext.example.mydsl1.MyDsl.MethodDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStaticInitializer
entryRuleStaticInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStaticInitializerRule()); }
	iv_ruleStaticInitializer=ruleStaticInitializer
	{ $current=$iv_ruleStaticInitializer.current; }
	EOF;

// Rule StaticInitializer
ruleStaticInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STATIC_0=RULE_STATIC
		{
			newLeafNode(this_STATIC_0, grammarAccess.getStaticInitializerAccess().getSTATICTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStaticInitializerAccess().getCodeBlockParserRuleCall_1_0());
				}
				lv_code_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStaticInitializerRule());
					}
					set(
						$current,
						"code",
						lv_code_1_0,
						"org.xtext.example.mydsl1.MyDsl.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstructorDeclaration
entryRuleConstructorDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorDeclarationRule()); }
	iv_ruleConstructorDeclaration=ruleConstructorDeclaration
	{ $current=$iv_ruleConstructorDeclaration.current; }
	EOF;

// Rule ConstructorDeclaration
ruleConstructorDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getModifiersConstructorModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleConstructorModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.ConstructorModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getHeaderConstructorDeclaratorParserRuleCall_1_0());
				}
				lv_header_1_0=ruleConstructorDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
					}
					set(
						$current,
						"header",
						lv_header_1_0,
						"org.xtext.example.mydsl1.MyDsl.ConstructorDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getThrowsExceptionsParserRuleCall_2_0());
				}
				lv_throws_2_0=ruleExceptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
					}
					set(
						$current,
						"throws",
						lv_throws_2_0,
						"org.xtext.example.mydsl1.MyDsl.Exceptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorDeclarationAccess().getBodyConstructorBodyParserRuleCall_3_0());
				}
				lv_body_3_0=ruleConstructorBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorDeclarationRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"org.xtext.example.mydsl1.MyDsl.ConstructorBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstructorModifier
entryRuleConstructorModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstructorModifierRule()); }
	iv_ruleConstructorModifier=ruleConstructorModifier
	{ $current=$iv_ruleConstructorModifier.current.getText(); }
	EOF;

// Rule ConstructorModifier
ruleConstructorModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getConstructorModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_PROTECTED_1=RULE_PROTECTED
		{
			$current.merge(this_PROTECTED_1);
		}
		{
			newLeafNode(this_PROTECTED_1, grammarAccess.getConstructorModifierAccess().getPROTECTEDTerminalRuleCall_1());
		}
		    |
		this_PRIVATE_2=RULE_PRIVATE
		{
			$current.merge(this_PRIVATE_2);
		}
		{
			newLeafNode(this_PRIVATE_2, grammarAccess.getConstructorModifierAccess().getPRIVATETerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleConstructorDeclarator
entryRuleConstructorDeclarator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorDeclaratorRule()); }
	iv_ruleConstructorDeclarator=ruleConstructorDeclarator
	{ $current=$iv_ruleConstructorDeclarator.current; }
	EOF;

// Rule ConstructorDeclarator
ruleConstructorDeclarator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getNameSimpleTypeNameParserRuleCall_0_0());
				}
				lv_name_0_0=ruleSimpleTypeName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorDeclaratorRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl1.MyDsl.SimpleTypeName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0());
					}
					lv_params_2_0=ruleFormalParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConstructorDeclaratorRule());
						}
						add(
							$current,
							"params",
							lv_params_2_0,
							"org.xtext.example.mydsl1.MyDsl.FormalParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getConstructorDeclaratorAccess().getCommaKeyword_2_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0());
						}
						lv_params_4_0=ruleFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstructorDeclaratorRule());
							}
							add(
								$current,
								"params",
								lv_params_4_0,
								"org.xtext.example.mydsl1.MyDsl.FormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleFormalParameter
entryRuleFormalParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormalParameterRule()); }
	iv_ruleFormalParameter=ruleFormalParameter
	{ $current=$iv_ruleFormalParameter.current; }
	EOF;

// Rule FormalParameter
ruleFormalParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl1.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFormalParameterAccess().getVariableVariableDeclaratorIdParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariableDeclaratorId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormalParameterRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.xtext.example.mydsl1.MyDsl.VariableDeclaratorId");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExceptions
entryRuleExceptions returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExceptionsRule()); }
	iv_ruleExceptions=ruleExceptions
	{ $current=$iv_ruleExceptions.current; }
	EOF;

// Rule Exceptions
ruleExceptions returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_THROWS_0=RULE_THROWS
		{
			newLeafNode(this_THROWS_0, grammarAccess.getExceptionsAccess().getTHROWSTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_1_0());
				}
				lv_exceptions_1_0=ruleClassType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExceptionsRule());
					}
					add(
						$current,
						"exceptions",
						lv_exceptions_1_0,
						"org.xtext.example.mydsl1.MyDsl.ClassType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getExceptionsAccess().getCommaKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_2_1_0());
					}
					lv_exceptions_3_0=ruleClassType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExceptionsRule());
						}
						add(
							$current,
							"exceptions",
							lv_exceptions_3_0,
							"org.xtext.example.mydsl1.MyDsl.ClassType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConstructorBody
entryRuleConstructorBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorBodyRule()); }
	iv_ruleConstructorBody=ruleConstructorBody
	{ $current=$iv_ruleConstructorBody.current; }
	EOF;

// Rule ConstructorBody
ruleConstructorBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstructorBodyAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorBodyAccess().getInvocationExplicitConstructorInvocationParserRuleCall_1_0());
				}
				lv_invocation_1_0=ruleExplicitConstructorInvocation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorBodyRule());
					}
					set(
						$current,
						"invocation",
						lv_invocation_1_0,
						"org.xtext.example.mydsl1.MyDsl.ExplicitConstructorInvocation");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorBodyAccess().getDeclarationsBlockStatementParserRuleCall_2_0());
				}
				lv_declarations_2_0=ruleBlockStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorBodyRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_2_0,
						"org.xtext.example.mydsl1.MyDsl.BlockStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstructorBodyAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleExplicitConstructorInvocation
entryRuleExplicitConstructorInvocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExplicitConstructorInvocationRule()); }
	iv_ruleExplicitConstructorInvocation=ruleExplicitConstructorInvocation
	{ $current=$iv_ruleExplicitConstructorInvocation.current; }
	EOF;

// Rule ExplicitConstructorInvocation
ruleExplicitConstructorInvocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_keyword_0_0=RULE_THIS
					{
						newLeafNode(lv_keyword_0_0, grammarAccess.getExplicitConstructorInvocationAccess().getKeywordTHISTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitConstructorInvocationRule());
						}
						setWithLastConsumed(
							$current,
							"keyword",
							lv_keyword_0_0,
							"org.xtext.example.mydsl1.MyDsl.THIS");
					}
				)
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0());
					}
					lv_args_2_0=ruleArgumentList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExplicitConstructorInvocationRule());
						}
						set(
							$current,
							"args",
							lv_args_2_0,
							"org.xtext.example.mydsl1.MyDsl.ArgumentList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			(
				(
					lv_keyword_4_0=RULE_SUPER
					{
						newLeafNode(lv_keyword_4_0, grammarAccess.getExplicitConstructorInvocationAccess().getKeywordSUPERTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExplicitConstructorInvocationRule());
						}
						setWithLastConsumed(
							$current,
							"keyword",
							lv_keyword_4_0,
							"org.xtext.example.mydsl1.MyDsl.SUPER");
					}
				)
			)
			otherlv_5='('
			{
				newLeafNode(otherlv_5, grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_1_2_0());
					}
					lv_args_6_0=ruleArgumentList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExplicitConstructorInvocationRule());
						}
						set(
							$current,
							"args",
							lv_args_6_0,
							"org.xtext.example.mydsl1.MyDsl.ArgumentList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_7=')'
			{
				newLeafNode(otherlv_7, grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldDeclarationRule()); }
	iv_ruleFieldDeclaration=ruleFieldDeclaration
	{ $current=$iv_ruleFieldDeclaration.current; }
	EOF;

// Rule FieldDeclaration
ruleFieldDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclarationAccess().getModifiersFieldModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleFieldModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.FieldModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclarationAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl1.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_0());
				}
				lv_variables_2_0=ruleVariableDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
					}
					add(
						$current,
						"variables",
						lv_variables_2_0,
						"org.xtext.example.mydsl1.MyDsl.VariableDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFieldDeclarationAccess().getCommaKeyword_3_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_3_1_0());
					}
					lv_variables_4_0=ruleVariableDeclarator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldDeclarationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_4_0,
							"org.xtext.example.mydsl1.MyDsl.VariableDeclarator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleFieldModifier
entryRuleFieldModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFieldModifierRule()); }
	iv_ruleFieldModifier=ruleFieldModifier
	{ $current=$iv_ruleFieldModifier.current.getText(); }
	EOF;

// Rule FieldModifier
ruleFieldModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getFieldModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_PROTECTED_1=RULE_PROTECTED
		{
			$current.merge(this_PROTECTED_1);
		}
		{
			newLeafNode(this_PROTECTED_1, grammarAccess.getFieldModifierAccess().getPROTECTEDTerminalRuleCall_1());
		}
		    |
		this_PRIVATE_2=RULE_PRIVATE
		{
			$current.merge(this_PRIVATE_2);
		}
		{
			newLeafNode(this_PRIVATE_2, grammarAccess.getFieldModifierAccess().getPRIVATETerminalRuleCall_2());
		}
		    |
		this_STATIC_3=RULE_STATIC
		{
			$current.merge(this_STATIC_3);
		}
		{
			newLeafNode(this_STATIC_3, grammarAccess.getFieldModifierAccess().getSTATICTerminalRuleCall_3());
		}
		    |
		this_FINAL_4=RULE_FINAL
		{
			$current.merge(this_FINAL_4);
		}
		{
			newLeafNode(this_FINAL_4, grammarAccess.getFieldModifierAccess().getFINALTerminalRuleCall_4());
		}
		    |
		this_TRANSIENT_5=RULE_TRANSIENT
		{
			$current.merge(this_TRANSIENT_5);
		}
		{
			newLeafNode(this_TRANSIENT_5, grammarAccess.getFieldModifierAccess().getTRANSIENTTerminalRuleCall_5());
		}
		    |
		this_VOLATILE_6=RULE_VOLATILE
		{
			$current.merge(this_VOLATILE_6);
		}
		{
			newLeafNode(this_VOLATILE_6, grammarAccess.getFieldModifierAccess().getVOLATILETerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclaratorRule()); }
	iv_ruleVariableDeclarator=ruleVariableDeclarator
	{ $current=$iv_ruleVariableDeclarator.current; }
	EOF;

// Rule VariableDeclarator
ruleVariableDeclarator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDeclaratorAccess().getNameVariableDeclaratorIdParserRuleCall_0_0());
				}
				lv_name_0_0=ruleVariableDeclaratorId
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDeclaratorRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl1.MyDsl.VariableDeclaratorId");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDeclaratorAccess().getValueVariableInitializerParserRuleCall_1_1_0());
					}
					lv_value_2_0=ruleVariableInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDeclaratorRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"org.xtext.example.mydsl1.MyDsl.VariableInitializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleVariableDeclaratorId
entryRuleVariableDeclaratorId returns [String current=null]:
	{ newCompositeNode(grammarAccess.getVariableDeclaratorIdRule()); }
	iv_ruleVariableDeclaratorId=ruleVariableDeclaratorId
	{ $current=$iv_ruleVariableDeclaratorId.current.getText(); }
	EOF;

// Rule VariableDeclaratorId
ruleVariableDeclaratorId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getVariableDeclaratorIdAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='[]'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getVariableDeclaratorIdAccess().getLeftSquareBracketRightSquareBracketKeyword_1());
			}
		)*
	)
;

// Entry rule entryRuleVariableInitializer
entryRuleVariableInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableInitializerRule()); }
	iv_ruleVariableInitializer=ruleVariableInitializer
	{ $current=$iv_ruleVariableInitializer.current; }
	EOF;

// Rule VariableInitializer
ruleVariableInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableInitializerAccess().getExpExpressionParserRuleCall_0_0());
				}
				lv_exp_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableInitializerRule());
					}
					set(
						$current,
						"exp",
						lv_exp_0_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1());
		}
		this_ArrayInitializer_1=ruleArrayInitializer
		{
			$current = $this_ArrayInitializer_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclarationRule()); }
	iv_ruleMethodDeclaration=ruleMethodDeclaration
	{ $current=$iv_ruleMethodDeclaration.current; }
	EOF;

// Rule MethodDeclaration
ruleMethodDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getSignatureMethodHeaderParserRuleCall_0_0());
				}
				lv_signature_0_0=ruleMethodHeader
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
					}
					set(
						$current,
						"signature",
						lv_signature_0_0,
						"org.xtext.example.mydsl1.MyDsl.MethodHeader");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getBodyBlockParserRuleCall_1_0_0());
					}
					lv_body_1_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
						}
						set(
							$current,
							"body",
							lv_body_1_0,
							"org.xtext.example.mydsl1.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			otherlv_2=';'
			{
				newLeafNode(otherlv_2, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_1_1());
			}
		)
	)
;

// Entry rule entryRuleMethodHeader
entryRuleMethodHeader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodHeaderRule()); }
	iv_ruleMethodHeader=ruleMethodHeader
	{ $current=$iv_ruleMethodHeader.current; }
	EOF;

// Rule MethodHeader
ruleMethodHeader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodHeaderAccess().getModifiersMethodModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleMethodModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.MethodModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodHeaderAccess().getReturnTypeResultTypeParserRuleCall_1_0());
				}
				lv_returnType_1_0=ruleResultType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_1_0,
						"org.xtext.example.mydsl1.MyDsl.ResultType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodHeaderAccess().getHeaderMethodDeclaratorParserRuleCall_2_0());
				}
				lv_header_2_0=ruleMethodDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
					}
					set(
						$current,
						"header",
						lv_header_2_0,
						"org.xtext.example.mydsl1.MyDsl.MethodDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMethodHeaderAccess().getThrowsExceptionsParserRuleCall_3_0());
				}
				lv_throws_3_0=ruleExceptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
					}
					set(
						$current,
						"throws",
						lv_throws_3_0,
						"org.xtext.example.mydsl1.MyDsl.Exceptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleResultType
entryRuleResultType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultTypeRule()); }
	iv_ruleResultType=ruleResultType
	{ $current=$iv_ruleResultType.current; }
	EOF;

// Rule ResultType
ruleResultType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getResultTypeAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResultTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl1.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		this_VOID_1=RULE_VOID
		{
			newLeafNode(this_VOID_1, grammarAccess.getResultTypeAccess().getVOIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleMethodModifier
entryRuleMethodModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodModifierRule()); }
	iv_ruleMethodModifier=ruleMethodModifier
	{ $current=$iv_ruleMethodModifier.current.getText(); }
	EOF;

// Rule MethodModifier
ruleMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getMethodModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_PROTECTED_1=RULE_PROTECTED
		{
			$current.merge(this_PROTECTED_1);
		}
		{
			newLeafNode(this_PROTECTED_1, grammarAccess.getMethodModifierAccess().getPROTECTEDTerminalRuleCall_1());
		}
		    |
		this_PRIVATE_2=RULE_PRIVATE
		{
			$current.merge(this_PRIVATE_2);
		}
		{
			newLeafNode(this_PRIVATE_2, grammarAccess.getMethodModifierAccess().getPRIVATETerminalRuleCall_2());
		}
		    |
		this_STATIC_3=RULE_STATIC
		{
			$current.merge(this_STATIC_3);
		}
		{
			newLeafNode(this_STATIC_3, grammarAccess.getMethodModifierAccess().getSTATICTerminalRuleCall_3());
		}
		    |
		this_ABSTRACT_4=RULE_ABSTRACT
		{
			$current.merge(this_ABSTRACT_4);
		}
		{
			newLeafNode(this_ABSTRACT_4, grammarAccess.getMethodModifierAccess().getABSTRACTTerminalRuleCall_4());
		}
		    |
		this_FINAL_5=RULE_FINAL
		{
			$current.merge(this_FINAL_5);
		}
		{
			newLeafNode(this_FINAL_5, grammarAccess.getMethodModifierAccess().getFINALTerminalRuleCall_5());
		}
		    |
		this_SYNCHRONIZED_6=RULE_SYNCHRONIZED
		{
			$current.merge(this_SYNCHRONIZED_6);
		}
		{
			newLeafNode(this_SYNCHRONIZED_6, grammarAccess.getMethodModifierAccess().getSYNCHRONIZEDTerminalRuleCall_6());
		}
		    |
		this_NATIVE_7=RULE_NATIVE
		{
			$current.merge(this_NATIVE_7);
		}
		{
			newLeafNode(this_NATIVE_7, grammarAccess.getMethodModifierAccess().getNATIVETerminalRuleCall_7());
		}
	)
;

// Entry rule entryRuleMethodDeclarator
entryRuleMethodDeclarator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodDeclaratorRule()); }
	iv_ruleMethodDeclarator=ruleMethodDeclarator
	{ $current=$iv_ruleMethodDeclarator.current; }
	EOF;

// Rule MethodDeclarator
ruleMethodDeclarator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMethodDeclaratorAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodDeclaratorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMethodDeclaratorAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0());
					}
					lv_params_2_0=ruleFormalParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodDeclaratorRule());
						}
						add(
							$current,
							"params",
							lv_params_2_0,
							"org.xtext.example.mydsl1.MyDsl.FormalParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getMethodDeclaratorAccess().getCommaKeyword_2_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0());
						}
						lv_params_4_0=ruleFormalParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodDeclaratorRule());
							}
							add(
								$current,
								"params",
								lv_params_4_0,
								"org.xtext.example.mydsl1.MyDsl.FormalParameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMethodDeclaratorAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceDeclarationRule()); }
	iv_ruleInterfaceDeclaration=ruleInterfaceDeclaration
	{ $current=$iv_ruleInterfaceDeclaration.current; }
	EOF;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getModifiersInterfaceModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleInterfaceModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.InterfaceModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_INTERFACE_1=RULE_INTERFACE
		{
			newLeafNode(this_INTERFACE_1, grammarAccess.getInterfaceDeclarationAccess().getINTERFACETerminalRuleCall_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInterfaceDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getExtendsExtendsInterfacesParserRuleCall_3_0());
				}
				lv_extends_3_0=ruleExtendsInterfaces
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					set(
						$current,
						"extends",
						lv_extends_3_0,
						"org.xtext.example.mydsl1.MyDsl.ExtendsInterfaces");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceDeclarationAccess().getBodyInterfaceBodyParserRuleCall_4_0());
				}
				lv_body_4_0=ruleInterfaceBody
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceDeclarationRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.xtext.example.mydsl1.MyDsl.InterfaceBody");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInterfaceModifier
entryRuleInterfaceModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceModifierRule()); }
	iv_ruleInterfaceModifier=ruleInterfaceModifier
	{ $current=$iv_ruleInterfaceModifier.current.getText(); }
	EOF;

// Rule InterfaceModifier
ruleInterfaceModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getInterfaceModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_ABSTRACT_1=RULE_ABSTRACT
		{
			$current.merge(this_ABSTRACT_1);
		}
		{
			newLeafNode(this_ABSTRACT_1, grammarAccess.getInterfaceModifierAccess().getABSTRACTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleExtendsInterfaces
entryRuleExtendsInterfaces returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendsInterfacesRule()); }
	iv_ruleExtendsInterfaces=ruleExtendsInterfaces
	{ $current=$iv_ruleExtendsInterfaces.current; }
	EOF;

// Rule ExtendsInterfaces
ruleExtendsInterfaces returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_keyword_0_0=RULE_EXTENDS
				{
					newLeafNode(lv_keyword_0_0, grammarAccess.getExtendsInterfacesAccess().getKeywordEXTENDSTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExtendsInterfacesRule());
					}
					setWithLastConsumed(
						$current,
						"keyword",
						lv_keyword_0_0,
						"org.xtext.example.mydsl1.MyDsl.EXTENDS");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0());
				}
				lv_interfaces_1_0=ruleInterfaceType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsInterfacesRule());
					}
					add(
						$current,
						"interfaces",
						lv_interfaces_1_0,
						"org.xtext.example.mydsl1.MyDsl.InterfaceType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getExtendsInterfacesAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_2_1_0());
					}
					lv_interfaces_3_0=ruleInterfaceType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExtendsInterfacesRule());
						}
						add(
							$current,
							"interfaces",
							lv_interfaces_3_0,
							"org.xtext.example.mydsl1.MyDsl.InterfaceType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInterfaceBody
entryRuleInterfaceBody returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceBodyRule()); }
	iv_ruleInterfaceBody=ruleInterfaceBody
	{ $current=$iv_ruleInterfaceBody.current; }
	EOF;

// Rule InterfaceBody
ruleInterfaceBody returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInterfaceBodyAccess().getDeclarationsInterfaceMemberDeclarationParserRuleCall_1_0());
				}
				lv_declarations_1_0=ruleInterfaceMemberDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInterfaceBodyRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_1_0,
						"org.xtext.example.mydsl1.MyDsl.InterfaceMemberDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleInterfaceMemberDeclaration
entryRuleInterfaceMemberDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceMemberDeclarationRule()); }
	iv_ruleInterfaceMemberDeclaration=ruleInterfaceMemberDeclaration
	{ $current=$iv_ruleInterfaceMemberDeclaration.current; }
	EOF;

// Rule InterfaceMemberDeclaration
ruleInterfaceMemberDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0());
		}
		this_ConstantDeclaration_0=ruleConstantDeclaration
		{
			$current = $this_ConstantDeclaration_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInterfaceMemberDeclarationAccess().getAbstractMethodDeclarationParserRuleCall_1());
		}
		this_AbstractMethodDeclaration_1=ruleAbstractMethodDeclaration
		{
			$current = $this_AbstractMethodDeclaration_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantDeclarationRule()); }
	iv_ruleConstantDeclaration=ruleConstantDeclaration
	{ $current=$iv_ruleConstantDeclaration.current; }
	EOF;

// Rule ConstantDeclaration
ruleConstantDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantDeclarationAccess().getModifiersConstantModifiersParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleConstantModifiers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.ConstantModifiers");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantDeclarationAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl1.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstantDeclarationAccess().getConstantVariableDeclaratorParserRuleCall_2_0());
				}
				lv_constant_2_0=ruleVariableDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstantDeclarationRule());
					}
					set(
						$current,
						"constant",
						lv_constant_2_0,
						"org.xtext.example.mydsl1.MyDsl.VariableDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleConstantModifiers
entryRuleConstantModifiers returns [String current=null]:
	{ newCompositeNode(grammarAccess.getConstantModifiersRule()); }
	iv_ruleConstantModifiers=ruleConstantModifiers
	{ $current=$iv_ruleConstantModifiers.current.getText(); }
	EOF;

// Rule ConstantModifiers
ruleConstantModifiers returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getConstantModifiersAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_STATIC_1=RULE_STATIC
		{
			$current.merge(this_STATIC_1);
		}
		{
			newLeafNode(this_STATIC_1, grammarAccess.getConstantModifiersAccess().getSTATICTerminalRuleCall_1());
		}
		    |
		this_FINAL_2=RULE_FINAL
		{
			$current.merge(this_FINAL_2);
		}
		{
			newLeafNode(this_FINAL_2, grammarAccess.getConstantModifiersAccess().getFINALTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleAbstractMethodDeclaration
entryRuleAbstractMethodDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractMethodDeclarationRule()); }
	iv_ruleAbstractMethodDeclaration=ruleAbstractMethodDeclaration
	{ $current=$iv_ruleAbstractMethodDeclaration.current; }
	EOF;

// Rule AbstractMethodDeclaration
ruleAbstractMethodDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAbstractMethodModifierParserRuleCall_0_0());
				}
				lv_modifiers_0_0=ruleAbstractMethodModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractMethodDeclarationRule());
					}
					add(
						$current,
						"modifiers",
						lv_modifiers_0_0,
						"org.xtext.example.mydsl1.MyDsl.AbstractMethodModifier");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeResultTypeParserRuleCall_1_0());
				}
				lv_returnType_1_0=ruleResultType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractMethodDeclarationRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_1_0,
						"org.xtext.example.mydsl1.MyDsl.ResultType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderMethodDeclaratorParserRuleCall_2_0());
				}
				lv_header_2_0=ruleMethodDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractMethodDeclarationRule());
					}
					set(
						$current,
						"header",
						lv_header_2_0,
						"org.xtext.example.mydsl1.MyDsl.MethodDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsExceptionsParserRuleCall_3_0());
				}
				lv_throws_3_0=ruleExceptions
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbstractMethodDeclarationRule());
					}
					set(
						$current,
						"throws",
						lv_throws_3_0,
						"org.xtext.example.mydsl1.MyDsl.Exceptions");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getAbstractMethodDeclarationAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleAbstractMethodModifier
entryRuleAbstractMethodModifier returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAbstractMethodModifierRule()); }
	iv_ruleAbstractMethodModifier=ruleAbstractMethodModifier
	{ $current=$iv_ruleAbstractMethodModifier.current.getText(); }
	EOF;

// Rule AbstractMethodModifier
ruleAbstractMethodModifier returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PUBLIC_0=RULE_PUBLIC
		{
			$current.merge(this_PUBLIC_0);
		}
		{
			newLeafNode(this_PUBLIC_0, grammarAccess.getAbstractMethodModifierAccess().getPUBLICTerminalRuleCall_0());
		}
		    |
		this_ABSTRACT_1=RULE_ABSTRACT
		{
			$current.merge(this_ABSTRACT_1);
		}
		{
			newLeafNode(this_ABSTRACT_1, grammarAccess.getAbstractMethodModifierAccess().getABSTRACTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayInitializerRule()); }
	iv_ruleArrayInitializer=ruleArrayInitializer
	{ $current=$iv_ruleArrayInitializer.current; }
	EOF;

// Rule ArrayInitializer
ruleArrayInitializer returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_0_0());
					}
					lv_values_1_0=ruleVariableInitializer
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
						}
						add(
							$current,
							"values",
							lv_values_1_0,
							"org.xtext.example.mydsl1.MyDsl.VariableInitializer");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_2=','
					{
						newLeafNode(otherlv_2, grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_1_1_0());
						}
						lv_values_3_0=ruleVariableInitializer
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayInitializerRule());
							}
							add(
								$current,
								"values",
								lv_values_3_0,
								"org.xtext.example.mydsl1.MyDsl.VariableInitializer");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getArrayInitializerAccess().getCommaKeyword_2());
			}
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getNamePrimitiveTypeParserRuleCall_0_0_0());
					}
					lv_name_0_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"name",
							lv_name_0_0,
							"org.xtext.example.mydsl1.MyDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeAccess().getNameReferenceTypeParserRuleCall_0_1_0());
					}
					lv_name_1_0=ruleReferenceType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeRule());
						}
						set(
							$current,
							"name",
							lv_name_1_0,
							"org.xtext.example.mydsl1.MyDsl.ReferenceType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			{
				newCompositeNode(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_1());
			}
			ruleArrayType
			{
				afterParserOrEnumRuleCall();
			}
		)*
	)
;

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	iv_rulePrimitiveType=rulePrimitiveType
	{ $current=$iv_rulePrimitiveType.current.getText(); }
	EOF;

// Rule PrimitiveType
rulePrimitiveType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0());
		}
		this_NumericType_0=ruleNumericType
		{
			$current.merge(this_NumericType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_BOOLEAN_1=RULE_BOOLEAN
		{
			$current.merge(this_BOOLEAN_1);
		}
		{
			newLeafNode(this_BOOLEAN_1, grammarAccess.getPrimitiveTypeAccess().getBOOLEANTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleNumericType
entryRuleNumericType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNumericTypeRule()); }
	iv_ruleNumericType=ruleNumericType
	{ $current=$iv_ruleNumericType.current.getText(); }
	EOF;

// Rule NumericType
ruleNumericType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0());
		}
		this_IntegralType_0=ruleIntegralType
		{
			$current.merge(this_IntegralType_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNumericTypeAccess().getFloatingTypeParserRuleCall_1());
		}
		this_FloatingType_1=ruleFloatingType
		{
			$current.merge(this_FloatingType_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntegralType
entryRuleIntegralType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegralTypeRule()); }
	iv_ruleIntegralType=ruleIntegralType
	{ $current=$iv_ruleIntegralType.current.getText(); }
	EOF;

// Rule IntegralType
ruleIntegralType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BYTE_0=RULE_BYTE
		{
			$current.merge(this_BYTE_0);
		}
		{
			newLeafNode(this_BYTE_0, grammarAccess.getIntegralTypeAccess().getBYTETerminalRuleCall_0());
		}
		    |
		this_SHORT_1=RULE_SHORT
		{
			$current.merge(this_SHORT_1);
		}
		{
			newLeafNode(this_SHORT_1, grammarAccess.getIntegralTypeAccess().getSHORTTerminalRuleCall_1());
		}
		    |
		this_INT_2=RULE_INT
		{
			$current.merge(this_INT_2);
		}
		{
			newLeafNode(this_INT_2, grammarAccess.getIntegralTypeAccess().getINTTerminalRuleCall_2());
		}
		    |
		this_LONG_3=RULE_LONG
		{
			$current.merge(this_LONG_3);
		}
		{
			newLeafNode(this_LONG_3, grammarAccess.getIntegralTypeAccess().getLONGTerminalRuleCall_3());
		}
		    |
		this_CHAR_4=RULE_CHAR
		{
			$current.merge(this_CHAR_4);
		}
		{
			newLeafNode(this_CHAR_4, grammarAccess.getIntegralTypeAccess().getCHARTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleFloatingType
entryRuleFloatingType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatingTypeRule()); }
	iv_ruleFloatingType=ruleFloatingType
	{ $current=$iv_ruleFloatingType.current.getText(); }
	EOF;

// Rule FloatingType
ruleFloatingType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FLOAT_0=RULE_FLOAT
		{
			$current.merge(this_FLOAT_0);
		}
		{
			newLeafNode(this_FLOAT_0, grammarAccess.getFloatingTypeAccess().getFLOATTerminalRuleCall_0());
		}
		    |
		this_DOUBLE_1=RULE_DOUBLE
		{
			$current.merge(this_DOUBLE_1);
		}
		{
			newLeafNode(this_DOUBLE_1, grammarAccess.getFloatingTypeAccess().getDOUBLETerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleReferenceType
entryRuleReferenceType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getReferenceTypeRule()); }
	iv_ruleReferenceType=ruleReferenceType
	{ $current=$iv_ruleReferenceType.current.getText(); }
	EOF;

// Rule ReferenceType
ruleReferenceType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getReferenceTypeAccess().getTypeNameParserRuleCall());
	}
	this_TypeName_0=ruleTypeName
	{
		$current.merge(this_TypeName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleClassType
entryRuleClassType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getClassTypeRule()); }
	iv_ruleClassType=ruleClassType
	{ $current=$iv_ruleClassType.current.getText(); }
	EOF;

// Rule ClassType
ruleClassType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getClassTypeAccess().getTypeNameParserRuleCall());
	}
	this_TypeName_0=ruleTypeName
	{
		$current.merge(this_TypeName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getInterfaceTypeRule()); }
	iv_ruleInterfaceType=ruleInterfaceType
	{ $current=$iv_ruleInterfaceType.current.getText(); }
	EOF;

// Rule InterfaceType
ruleInterfaceType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getInterfaceTypeAccess().getTypeNameParserRuleCall());
	}
	this_TypeName_0=ruleTypeName
	{
		$current.merge(this_TypeName_0);
	}
	{
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleArrayType
entryRuleArrayType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getArrayTypeRule()); }
	iv_ruleArrayType=ruleArrayType
	{ $current=$iv_ruleArrayType.current.getText(); }
	EOF;

// Rule ArrayType
ruleArrayType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='[]'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getArrayTypeAccess().getLeftSquareBracketRightSquareBracketKeyword());
	}
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockAccess().getDeclarationsBlockStatementParserRuleCall_1_0());
				}
				lv_declarations_1_0=ruleBlockStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_1_0,
						"org.xtext.example.mydsl1.MyDsl.BlockStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_2='}'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	iv_ruleBlockStatement=ruleBlockStatement
	{ $current=$iv_ruleBlockStatement.current; }
	EOF;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationParserRuleCall_0_0());
			}
			this_LocalVariableDeclaration_0=ruleLocalVariableDeclaration
			{
				$current = $this_LocalVariableDeclaration_0.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_1=';'
			{
				newLeafNode(otherlv_1, grammarAccess.getBlockStatementAccess().getSemicolonKeyword_0_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_1());
		}
		this_Statement_2=ruleStatement
		{
			$current = $this_Statement_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLocalVariableDeclarationRule()); }
	iv_ruleLocalVariableDeclaration=ruleLocalVariableDeclaration
	{ $current=$iv_ruleLocalVariableDeclaration.current; }
	EOF;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0());
				}
				lv_type_0_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
					}
					set(
						$current,
						"type",
						lv_type_0_0,
						"org.xtext.example.mydsl1.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_1_0());
				}
				lv_variables_1_0=ruleVariableDeclarator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
					}
					add(
						$current,
						"variables",
						lv_variables_1_0,
						"org.xtext.example.mydsl1.MyDsl.VariableDeclarator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_2_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_1_0());
					}
					lv_variables_3_0=ruleVariableDeclarator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLocalVariableDeclarationRule());
						}
						add(
							$current,
							"variables",
							lv_variables_3_0,
							"org.xtext.example.mydsl1.MyDsl.VariableDeclarator");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_0());
		}
		ruleEmptyStatement
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLabeledStatementParserRuleCall_1());
		}
		this_LabeledStatement_1=ruleLabeledStatement
		{
			$current = $this_LabeledStatement_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2());
		}
		this_IfStatement_2=ruleIfStatement
		{
			$current = $this_IfStatement_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3());
		}
		this_WhileStatement_3=ruleWhileStatement
		{
			$current = $this_WhileStatement_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4());
		}
		this_ForStatement_4=ruleForStatement
		{
			$current = $this_ForStatement_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_5());
		}
		this_Block_5=ruleBlock
		{
			$current = $this_Block_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			{
				newCompositeNode(grammarAccess.getStatementAccess().getStatementExpressionParserRuleCall_6_0());
			}
			this_StatementExpression_6=ruleStatementExpression
			{
				$current = $this_StatementExpression_6.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_7=';'
			{
				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_6_1());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7());
		}
		this_SwitchStatement_8=ruleSwitchStatement
		{
			$current = $this_SwitchStatement_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8());
		}
		this_DoStatement_9=ruleDoStatement
		{
			$current = $this_DoStatement_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_9());
		}
		this_BreakStatement_10=ruleBreakStatement
		{
			$current = $this_BreakStatement_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_10());
		}
		this_ContinueStatement_11=ruleContinueStatement
		{
			$current = $this_ContinueStatement_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11());
		}
		this_ReturnStatement_12=ruleReturnStatement
		{
			$current = $this_ReturnStatement_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getSynchronizedStatementParserRuleCall_12());
		}
		this_SynchronizedStatement_13=ruleSynchronizedStatement
		{
			$current = $this_SynchronizedStatement_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getThrowsStatementParserRuleCall_13());
		}
		this_ThrowsStatement_14=ruleThrowsStatement
		{
			$current = $this_ThrowsStatement_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_14());
		}
		this_TryStatement_15=ruleTryStatement
		{
			$current = $this_TryStatement_15.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEmptyStatementRule()); }
	iv_ruleEmptyStatement=ruleEmptyStatement
	{ $current=$iv_ruleEmptyStatement.current.getText(); }
	EOF;

// Rule EmptyStatement
ruleEmptyStatement returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=';'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword());
	}
;

// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabeledStatementRule()); }
	iv_ruleLabeledStatement=ruleLabeledStatement
	{ $current=$iv_ruleLabeledStatement.current; }
	EOF;

// Rule LabeledStatement
ruleLabeledStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_label_0_0=RULE_ID
				{
					newLeafNode(lv_label_0_0, grammarAccess.getLabeledStatementAccess().getLabelIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLabeledStatementRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_0_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabeledStatementAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabeledStatementAccess().getStatementStatementParserRuleCall_2_0());
				}
				lv_statement_2_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabeledStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_2_0,
						"org.xtext.example.mydsl1.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStatementExpression
entryRuleStatementExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementExpressionRule()); }
	iv_ruleStatementExpression=ruleStatementExpression
	{ $current=$iv_ruleStatementExpression.current; }
	EOF;

// Rule StatementExpression
ruleStatementExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleAssignment)=>
			{
				newCompositeNode(grammarAccess.getStatementExpressionAccess().getAssignmentParserRuleCall_0());
			}
			this_Assignment_0=ruleAssignment
			{
				$current = $this_Assignment_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getStatementExpressionAccess().getPreIncrementExpressionParserRuleCall_1());
		}
		this_PreIncrementExpression_1=rulePreIncrementExpression
		{
			$current = $this_PreIncrementExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementExpressionAccess().getPreDecrementExpressionParserRuleCall_2());
		}
		this_PreDecrementExpression_2=rulePreDecrementExpression
		{
			$current = $this_PreDecrementExpression_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(rulePostfixExpression)=>
			{
				newCompositeNode(grammarAccess.getStatementExpressionAccess().getPostfixExpressionParserRuleCall_3());
			}
			this_PostfixExpression_3=rulePostfixExpression
			{
				$current = $this_PostfixExpression_3.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleMethodInvocation)=>
			{
				newCompositeNode(grammarAccess.getStatementExpressionAccess().getMethodInvocationParserRuleCall_4());
			}
			this_MethodInvocation_4=ruleMethodInvocation
			{
				$current = $this_MethodInvocation_4.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleClassInstanceCreationExpression)=>
			{
				newCompositeNode(grammarAccess.getStatementExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_5());
			}
			this_ClassInstanceCreationExpression_5=ruleClassInstanceCreationExpression
			{
				$current = $this_ClassInstanceCreationExpression_5.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	iv_ruleIfStatement=ruleIfStatement
	{ $current=$iv_ruleIfStatement.current; }
	EOF;

// Rule IfStatement
ruleIfStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_IF_0=RULE_IF
		{
			newLeafNode(this_IF_0, grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"condition",
						true,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0());
				}
				lv_then_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfStatementRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"org.xtext.example.mydsl1.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(RULE_ELSE)=>
				this_ELSE_5=RULE_ELSE
				{
					newLeafNode(this_ELSE_5, grammarAccess.getIfStatementAccess().getELSETerminalRuleCall_5_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0());
					}
					lv_else_6_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfStatementRule());
						}
						set(
							$current,
							"else",
							lv_else_6_0,
							"org.xtext.example.mydsl1.MyDsl.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSwitchStatementRule()); }
	iv_ruleSwitchStatement=ruleSwitchStatement
	{ $current=$iv_ruleSwitchStatement.current; }
	EOF;

// Rule SwitchStatement
ruleSwitchStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SWITCH_0=RULE_SWITCH
		{
			newLeafNode(this_SWITCH_0, grammarAccess.getSwitchStatementAccess().getSWITCHTerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				this_CASE_5=RULE_CASE
				{
					newLeafNode(this_CASE_5, grammarAccess.getSwitchStatementAccess().getCASETerminalRuleCall_5_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSwitchStatementAccess().getConstantsConstantExpressionParserRuleCall_5_0_1_0());
						}
						lv_constants_6_0=ruleConstantExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
							}
							add(
								$current,
								"constants",
								lv_constants_6_0,
								"org.xtext.example.mydsl1.MyDsl.ConstantExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=':'
				{
					newLeafNode(otherlv_7, grammarAccess.getSwitchStatementAccess().getColonKeyword_5_0_2());
				}
			)
			    |
			(
				this_DEFAULT_8=RULE_DEFAULT
				{
					newLeafNode(this_DEFAULT_8, grammarAccess.getSwitchStatementAccess().getDEFAULTTerminalRuleCall_5_1_0());
				}
				otherlv_9=':'
				{
					newLeafNode(otherlv_9, grammarAccess.getSwitchStatementAccess().getColonKeyword_5_1_1());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getSwitchStatementAccess().getStatementsBlockStatementParserRuleCall_5_2_0());
					}
					lv_statements_10_0=ruleBlockStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
						}
						add(
							$current,
							"statements",
							lv_statements_10_0,
							"org.xtext.example.mydsl1.MyDsl.BlockStatement");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	iv_ruleWhileStatement=ruleWhileStatement
	{ $current=$iv_ruleWhileStatement.current; }
	EOF;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_WHILE_0=RULE_WHILE
		{
			newLeafNode(this_WHILE_0, grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"condition",
						true,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0());
				}
				lv_statement_4_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_4_0,
						"org.xtext.example.mydsl1.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	iv_ruleDoStatement=ruleDoStatement
	{ $current=$iv_ruleDoStatement.current; }
	EOF;

// Rule DoStatement
ruleDoStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_DO_0=RULE_DO
		{
			newLeafNode(this_DO_0, grammarAccess.getDoStatementAccess().getDOTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0());
				}
				lv_statement_1_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_1_0,
						"org.xtext.example.mydsl1.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_WHILE_2=RULE_WHILE
		{
			newLeafNode(this_WHILE_2, grammarAccess.getDoStatementAccess().getWHILETerminalRuleCall_2());
		}
		otherlv_3='('
		{
			newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoStatementRule());
					}
					set(
						$current,
						"condition",
						true,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getDoStatementAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	iv_ruleForStatement=ruleForStatement
	{ $current=$iv_ruleForStatement.current; }
	EOF;

// Rule ForStatement
ruleForStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_FOR_0=RULE_FOR
		{
			newLeafNode(this_FOR_0, grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getInitExprForInitParserRuleCall_2_0());
				}
				lv_initExpr_2_0=ruleForInit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"initExpr",
						lv_initExpr_2_0,
						"org.xtext.example.mydsl1.MyDsl.ForInit");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getSemicolonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getConditionExpressionParserRuleCall_4_0());
				}
				lv_condition_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"condition",
						true,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getSemicolonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getUpdateExprForUpdateParserRuleCall_6_0());
				}
				lv_updateExpr_6_0=ruleForUpdate
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"updateExpr",
						lv_updateExpr_6_0,
						"org.xtext.example.mydsl1.MyDsl.ForUpdate");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_8_0());
				}
				lv_statement_8_0=ruleStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForStatementRule());
					}
					set(
						$current,
						"statement",
						lv_statement_8_0,
						"org.xtext.example.mydsl1.MyDsl.Statement");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForInit
entryRuleForInit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForInitRule()); }
	iv_ruleForInit=ruleForInit
	{ $current=$iv_ruleForInit.current; }
	EOF;

// Rule ForInit
ruleForInit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_0_0());
					}
					lv_expressions_0_0=ruleStatementExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForInitRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_0_0,
							"org.xtext.example.mydsl1.MyDsl.StatementExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					(',')=>
					otherlv_1=','
					{
						newLeafNode(otherlv_1, grammarAccess.getForInitAccess().getCommaKeyword_0_1_0());
					}
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_1_1_0());
						}
						lv_expressions_2_0=ruleStatementExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForInitRule());
							}
							add(
								$current,
								"expressions",
								lv_expressions_2_0,
								"org.xtext.example.mydsl1.MyDsl.StatementExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getForInitAccess().getLocalVariableLocalVariableDeclarationParserRuleCall_1_0());
				}
				lv_localVariable_3_0=ruleLocalVariableDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForInitRule());
					}
					set(
						$current,
						"localVariable",
						lv_localVariable_3_0,
						"org.xtext.example.mydsl1.MyDsl.LocalVariableDeclaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForUpdate
entryRuleForUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForUpdateRule()); }
	iv_ruleForUpdate=ruleForUpdate
	{ $current=$iv_ruleForUpdate.current; }
	EOF;

// Rule ForUpdate
ruleForUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_0_0());
				}
				lv_expressions_0_0=ruleStatementExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForUpdateRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_0_0,
						"org.xtext.example.mydsl1.MyDsl.StatementExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getForUpdateAccess().getCommaKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_1_1_0());
					}
					lv_expressions_2_0=ruleStatementExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForUpdateRule());
						}
						add(
							$current,
							"expressions",
							lv_expressions_2_0,
							"org.xtext.example.mydsl1.MyDsl.StatementExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleBreakStatement
entryRuleBreakStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBreakStatementRule()); }
	iv_ruleBreakStatement=ruleBreakStatement
	{ $current=$iv_ruleBreakStatement.current; }
	EOF;

// Rule BreakStatement
ruleBreakStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BREAK_0=RULE_BREAK
		{
			newLeafNode(this_BREAK_0, grammarAccess.getBreakStatementAccess().getBREAKTerminalRuleCall_0());
		}
		(
			(
				lv_reference_1_0=RULE_ID
				{
					newLeafNode(lv_reference_1_0, grammarAccess.getBreakStatementAccess().getReferenceIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBreakStatementRule());
					}
					setWithLastConsumed(
						$current,
						"reference",
						lv_reference_1_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)?
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleContinueStatement
entryRuleContinueStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinueStatementRule()); }
	iv_ruleContinueStatement=ruleContinueStatement
	{ $current=$iv_ruleContinueStatement.current; }
	EOF;

// Rule ContinueStatement
ruleContinueStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_CONTINUE_0=RULE_CONTINUE
		{
			newLeafNode(this_CONTINUE_0, grammarAccess.getContinueStatementAccess().getCONTINUETerminalRuleCall_0());
		}
		(
			(
				lv_reference_1_0=RULE_ID
				{
					newLeafNode(lv_reference_1_0, grammarAccess.getContinueStatementAccess().getReferenceIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinueStatementRule());
					}
					setWithLastConsumed(
						$current,
						"reference",
						lv_reference_1_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)?
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	iv_ruleReturnStatement=ruleReturnStatement
	{ $current=$iv_ruleReturnStatement.current; }
	EOF;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_RETURN_0=RULE_RETURN
		{
			newLeafNode(this_RETURN_0, grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleThrowsStatement
entryRuleThrowsStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getThrowsStatementRule()); }
	iv_ruleThrowsStatement=ruleThrowsStatement
	{ $current=$iv_ruleThrowsStatement.current; }
	EOF;

// Rule ThrowsStatement
ruleThrowsStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_THROW_0=RULE_THROW
		{
			newLeafNode(this_THROW_0, grammarAccess.getThrowsStatementAccess().getTHROWTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getThrowsStatementAccess().getExpressionExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getThrowsStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_1_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getThrowsStatementAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleSynchronizedStatement
entryRuleSynchronizedStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSynchronizedStatementRule()); }
	iv_ruleSynchronizedStatement=ruleSynchronizedStatement
	{ $current=$iv_ruleSynchronizedStatement.current; }
	EOF;

// Rule SynchronizedStatement
ruleSynchronizedStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_SYNCHRONIZED_0=RULE_SYNCHRONIZED
		{
			newLeafNode(this_SYNCHRONIZED_0, grammarAccess.getSynchronizedStatementAccess().getSYNCHRONIZEDTerminalRuleCall_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSynchronizedStatementAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSynchronizedStatementAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSynchronizedStatementRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getSynchronizedStatementAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSynchronizedStatementAccess().getBodyBlockParserRuleCall_4_0());
				}
				lv_body_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSynchronizedStatementRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"org.xtext.example.mydsl1.MyDsl.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTryStatement
entryRuleTryStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTryStatementRule()); }
	iv_ruleTryStatement=ruleTryStatement
	{ $current=$iv_ruleTryStatement.current; }
	EOF;

// Rule TryStatement
ruleTryStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TRY_0=RULE_TRY
		{
			newLeafNode(this_TRY_0, grammarAccess.getTryStatementAccess().getTRYTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTryStatementAccess().getTryBodyBlockParserRuleCall_1_0());
				}
				lv_tryBody_1_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTryStatementRule());
					}
					set(
						$current,
						"tryBody",
						lv_tryBody_1_0,
						"org.xtext.example.mydsl1.MyDsl.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(RULE_CATCH)=>
				this_CATCH_2=RULE_CATCH
				{
					newLeafNode(this_CATCH_2, grammarAccess.getTryStatementAccess().getCATCHTerminalRuleCall_2_0());
				}
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTryStatementAccess().getParamsFormalParameterParserRuleCall_2_2_0());
					}
					lv_params_4_0=ruleFormalParameter
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTryStatementRule());
						}
						add(
							$current,
							"params",
							lv_params_4_0,
							"org.xtext.example.mydsl1.MyDsl.FormalParameter");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTryStatementAccess().getCatchesBodyBlockParserRuleCall_2_4_0());
					}
					lv_catchesBody_6_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTryStatementRule());
						}
						add(
							$current,
							"catchesBody",
							lv_catchesBody_6_0,
							"org.xtext.example.mydsl1.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		(
			(
				(RULE_FINALLY)=>
				this_FINALLY_7=RULE_FINALLY
				{
					newLeafNode(this_FINALLY_7, grammarAccess.getTryStatementAccess().getFINALLYTerminalRuleCall_3_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getTryStatementAccess().getFinallyBodyBlockParserRuleCall_3_1_0());
					}
					lv_finallyBody_8_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTryStatementRule());
						}
						set(
							$current,
							"finallyBody",
							lv_finallyBody_8_0,
							"org.xtext.example.mydsl1.MyDsl.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstantExpressionRule()); }
	iv_ruleConstantExpression=ruleConstantExpression
	{ $current=$iv_ruleConstantExpression.current; }
	EOF;

// Rule ConstantExpression
ruleConstantExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getConstantExpressionAccess().getExpressionParserRuleCall());
	}
	this_Expression_0=ruleExpression
	{
		$current = $this_Expression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall());
	}
	this_AssignmentExpression_0=ruleAssignmentExpression
	{
		$current = $this_AssignmentExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	iv_ruleAssignmentExpression=ruleAssignmentExpression
	{ $current=$iv_ruleAssignmentExpression.current; }
	EOF;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleConditionalExpression)=>
			{
				newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_0());
			}
			this_ConditionalExpression_0=ruleConditionalExpression
			{
				$current = $this_ConditionalExpression_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getAssignmentParserRuleCall_1());
		}
		this_Assignment_1=ruleAssignment
		{
			$current = $this_Assignment_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAssignment
entryRuleAssignment returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentRule()); }
	iv_ruleAssignment=ruleAssignment
	{ $current=$iv_ruleAssignment.current; }
	EOF;

// Rule Assignment
ruleAssignment returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getObjectLeftHandSideParserRuleCall_0_0());
				}
				lv_object_0_0=ruleLeftHandSide
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"object",
						lv_object_0_0,
						"org.xtext.example.mydsl1.MyDsl.LeftHandSide");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignmentOperatorParserRuleCall_1_0());
				}
				lv_operator_1_0=ruleAssignmentOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"operator",
						lv_operator_1_0,
						"org.xtext.example.mydsl1.MyDsl.AssignmentOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAssignmentAccess().getValueAssignmentExpressionParserRuleCall_2_0());
				}
				lv_value_2_0=ruleAssignmentExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAssignmentRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.mydsl1.MyDsl.AssignmentExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleLeftHandSide
entryRuleLeftHandSide returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLeftHandSideRule()); }
	iv_ruleLeftHandSide=ruleLeftHandSide
	{ $current=$iv_ruleLeftHandSide.current; }
	EOF;

// Rule LeftHandSide
ruleLeftHandSide returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(ruleExpressionName)=>
			{
				newCompositeNode(grammarAccess.getLeftHandSideAccess().getExpressionNameParserRuleCall_0());
			}
			ruleExpressionName
			{
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleFieldAccess)=>
			{
				newCompositeNode(grammarAccess.getLeftHandSideAccess().getFieldAccessParserRuleCall_1());
			}
			this_FieldAccess_1=ruleFieldAccess
			{
				$current = $this_FieldAccess_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(ruleArrayAccess)=>
			{
				newCompositeNode(grammarAccess.getLeftHandSideAccess().getArrayAccessParserRuleCall_2());
			}
			this_ArrayAccess_2=ruleArrayAccess
			{
				$current = $this_ArrayAccess_2.current;
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAssignmentOperatorRule()); }
	iv_ruleAssignmentOperator=ruleAssignmentOperator
	{ $current=$iv_ruleAssignmentOperator.current.getText(); }
	EOF;

// Rule AssignmentOperator
ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0());
		}
		    |
		kw='*='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1());
		}
		    |
		kw='/='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2());
		}
		    |
		kw='%='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3());
		}
		    |
		kw='+='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4());
		}
		    |
		kw='-='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5());
		}
		    |
		kw='<<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6());
		}
		    |
		kw='>>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7());
		}
		    |
		kw='>>>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_8());
		}
		    |
		kw='&='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_9());
		}
		    |
		kw='^='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_10());
		}
		    |
		kw='|='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_11());
		}
	)
;

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	iv_ruleConditionalExpression=ruleConditionalExpression
	{ $current=$iv_ruleConditionalExpression.current; }
	EOF;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionConditionalOrExpressionParserRuleCall_0_0());
				}
				lv_condition_0_0=ruleConditionalOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_0_0,
						"org.xtext.example.mydsl1.MyDsl.ConditionalOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				('?')=>
				otherlv_1='?'
				{
					newLeafNode(otherlv_1, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getThenExpressionParserRuleCall_1_1_0());
					}
					lv_then_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						set(
							$current,
							"then",
							lv_then_2_0,
							"org.xtext.example.mydsl1.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalExpressionAccess().getElseConditionalExpressionParserRuleCall_1_3_0());
					}
					lv_else_4_0=ruleConditionalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
						}
						set(
							$current,
							"else",
							lv_else_4_0,
							"org.xtext.example.mydsl1.MyDsl.ConditionalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	iv_ruleConditionalOrExpression=ruleConditionalOrExpression
	{ $current=$iv_ruleConditionalOrExpression.current; }
	EOF;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleConditionalAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.ConditionalAndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'||'
				)
				)=>
				(
					lv_operators_1_0='||'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getConditionalOrExpressionAccess().getOperatorsVerticalLineVerticalLineKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalOrExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "||");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleConditionalAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.ConditionalAndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	iv_ruleConditionalAndExpression=ruleConditionalAndExpression
	{ $current=$iv_ruleConditionalAndExpression.current; }
	EOF;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleInclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.InclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'&&'
				)
				)=>
				(
					lv_operators_1_0='&&'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getConditionalAndExpressionAccess().getOperatorsAmpersandAmpersandKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionalAndExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "&&");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleInclusiveOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.InclusiveOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression
	{ $current=$iv_ruleInclusiveOrExpression.current; }
	EOF;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleExclusiveOrExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.ExclusiveOrExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'|'
				)
				)=>
				(
					lv_operators_1_0='|'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getInclusiveOrExpressionAccess().getOperatorsVerticalLineKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getInclusiveOrExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "|");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleExclusiveOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.ExclusiveOrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression
	{ $current=$iv_ruleExclusiveOrExpression.current; }
	EOF;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleAndExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.AndExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'^'
				)
				)=>
				(
					lv_operators_1_0='^'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getExclusiveOrExpressionAccess().getOperatorsCircumflexAccentKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExclusiveOrExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "^");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleAndExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.AndExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleEqualityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.EqualityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					'&'
				)
				)=>
				(
					lv_operators_1_0='&'
					{
						newLeafNode(lv_operators_1_0, grammarAccess.getAndExpressionAccess().getOperatorsAmpersandKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAndExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_1_0, "&");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleRelationalExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.RelationalExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					(
						'=='
						    |
						'!='
					)
				)
				)=>
				(
					(
						lv_operators_1_1='=='
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getEqualityExpressionAccess().getOperatorsEqualsSignEqualsSignKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='!='
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getEqualityExpressionAccess().getOperatorsExclamationMarkEqualsSignKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualityExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleShiftExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.ShiftExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					(
						(
							(
								'<'
								    |
								'>'
								    |
								'<='
								    |
								'>='
							)
						)
					)
					(
						(
							ruleShiftExpression
						)
					)
				)
				)=>
				(
					(
						(
							(
								lv_operators_1_1='<'
								{
									newLeafNode(lv_operators_1_1, grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignKeyword_1_0_0_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getRelationalExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_1, null);
								}
								    |
								lv_operators_1_2='>'
								{
									newLeafNode(lv_operators_1_2, grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignKeyword_1_0_0_0_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getRelationalExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_2, null);
								}
								    |
								lv_operators_1_3='<='
								{
									newLeafNode(lv_operators_1_3, grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignEqualsSignKeyword_1_0_0_0_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getRelationalExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_3, null);
								}
								    |
								lv_operators_1_4='>='
								{
									newLeafNode(lv_operators_1_4, grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignEqualsSignKeyword_1_0_0_0_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getRelationalExpressionRule());
									}
									addWithLastConsumed($current, "operators", lv_operators_1_4, null);
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_1_0_0_1_0());
							}
							lv_operands_2_0=ruleShiftExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
								}
								add(
									$current,
									"operands",
									lv_operands_2_0,
									"org.xtext.example.mydsl1.MyDsl.ShiftExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				((
					(
						(
							RULE_INSTANCEOF
						)
					)
					(
						(
							ruleReferenceType
						)
					)
				)
				)=>
				(
					(
						(
							lv_operators_3_0=RULE_INSTANCEOF
							{
								newLeafNode(lv_operators_3_0, grammarAccess.getRelationalExpressionAccess().getOperatorsINSTANCEOFTerminalRuleCall_1_1_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getRelationalExpressionRule());
								}
								addWithLastConsumed(
									$current,
									"operators",
									lv_operators_3_0,
									"org.xtext.example.mydsl1.MyDsl.INSTANCEOF");
							}
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getRelationalExpressionAccess().getClassesReferenceTypeParserRuleCall_1_1_0_1_0());
							}
							lv_classes_4_0=ruleReferenceType
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
								}
								add(
									$current,
									"classes",
									lv_classes_4_0,
									"org.xtext.example.mydsl1.MyDsl.ReferenceType");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	iv_ruleShiftExpression=ruleShiftExpression
	{ $current=$iv_ruleShiftExpression.current; }
	EOF;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleAdditiveExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.AdditiveExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					(
						'<<'
						    |
						'>>'
						    |
						'>>>'
					)
				)
				)=>
				(
					(
						lv_operators_1_1='<<'
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getShiftExpressionAccess().getOperatorsLessThanSignLessThanSignKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getShiftExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='>>'
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getShiftExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
						    |
						lv_operators_1_3='>>>'
						{
							newLeafNode(lv_operators_1_3, grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getShiftExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleAdditiveExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.AdditiveExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleMultiplicativeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.MultiplicativeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					(
						'+'
						    |
						'-'
					)
				)
				)=>
				(
					(
						lv_operators_1_1='+'
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getAdditiveExpressionAccess().getOperatorsPlusSignKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='-'
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getAdditiveExpressionAccess().getOperatorsHyphenMinusKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_0_0());
				}
				lv_operands_0_0=ruleNoArrayExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
					}
					add(
						$current,
						"operands",
						lv_operands_0_0,
						"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				((
					(
						'*'
						    |
						'/'
						    |
						'%'
					)
				)
				)=>
				(
					(
						lv_operators_1_1='*'
						{
							newLeafNode(lv_operators_1_1, grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAsteriskKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_1, null);
						}
						    |
						lv_operators_1_2='/'
						{
							newLeafNode(lv_operators_1_2, grammarAccess.getMultiplicativeExpressionAccess().getOperatorsSolidusKeyword_1_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_2, null);
						}
						    |
						lv_operators_1_3='%'
						{
							newLeafNode(lv_operators_1_3, grammarAccess.getMultiplicativeExpressionAccess().getOperatorsPercentSignKeyword_1_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
							}
							addWithLastConsumed($current, "operators", lv_operators_1_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_1_1_0());
					}
					lv_operands_2_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						add(
							$current,
							"operands",
							lv_operands_2_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCastExpression
entryRuleCastExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCastExpressionRule()); }
	iv_ruleCastExpression=ruleCastExpression
	{ $current=$iv_ruleCastExpression.current; }
	EOF;

// Rule CastExpression
ruleCastExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				('(')=>
				otherlv_0='('
				{
					newLeafNode(otherlv_0, grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getTypePrimitiveTypeParserRuleCall_0_1_0());
					}
					lv_type_1_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl1.MyDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionParserRuleCall_0_3_0());
					}
					lv_operand_3_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"operand",
							lv_operand_3_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				('(')=>
				otherlv_4='('
				{
					newLeafNode(otherlv_4, grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getTypeReferenceTypeParserRuleCall_1_1_0());
					}
					lv_type_5_0=ruleReferenceType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"org.xtext.example.mydsl1.MyDsl.ReferenceType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionWithoutMinusParserRuleCall_1_3_0());
					}
					lv_operand_7_0=ruleNoArrayExpressionWithoutMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCastExpressionRule());
						}
						set(
							$current,
							"operand",
							lv_operand_7_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpressionWithoutMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNoArrayExpression
entryRuleNoArrayExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoArrayExpressionRule()); }
	iv_ruleNoArrayExpression=ruleNoArrayExpression
	{ $current=$iv_ruleNoArrayExpression.current; }
	EOF;

// Rule NoArrayExpression
ruleNoArrayExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNoArrayExpressionAccess().getPreIncrementExpressionParserRuleCall_0());
		}
		this_PreIncrementExpression_0=rulePreIncrementExpression
		{
			$current = $this_PreIncrementExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNoArrayExpressionAccess().getPreDecrementExpressionParserRuleCall_1());
		}
		this_PreDecrementExpression_1=rulePreDecrementExpression
		{
			$current = $this_PreDecrementExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				(
					lv_operator_2_0='+'
					{
						newLeafNode(lv_operator_2_0, grammarAccess.getNoArrayExpressionAccess().getOperatorPlusSignKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNoArrayExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_2_0, "+");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0());
					}
					lv_operand_3_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoArrayExpressionRule());
						}
						set(
							$current,
							"operand",
							lv_operand_3_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_operator_4_0='-'
					{
						newLeafNode(lv_operator_4_0, grammarAccess.getNoArrayExpressionAccess().getOperatorHyphenMinusKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNoArrayExpressionRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_4_0, "-");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_3_1_0());
					}
					lv_operand_5_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoArrayExpressionRule());
						}
						set(
							$current,
							"operand",
							lv_operand_5_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getNoArrayExpressionAccess().getNoArrayExpressionWithoutMinusParserRuleCall_4());
		}
		this_NoArrayExpressionWithoutMinus_6=ruleNoArrayExpressionWithoutMinus
		{
			$current = $this_NoArrayExpressionWithoutMinus_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePreDecrementExpression
entryRulePreDecrementExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreDecrementExpressionRule()); }
	iv_rulePreDecrementExpression=rulePreDecrementExpression
	{ $current=$iv_rulePreDecrementExpression.current; }
	EOF;

// Rule PreDecrementExpression
rulePreDecrementExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_operator_0_0='--'
				{
					newLeafNode(lv_operator_0_0, grammarAccess.getPreDecrementExpressionAccess().getOperatorHyphenMinusHyphenMinusKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreDecrementExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_0_0, "--");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPreDecrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleNoArrayExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreDecrementExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePreIncrementExpression
entryRulePreIncrementExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPreIncrementExpressionRule()); }
	iv_rulePreIncrementExpression=rulePreIncrementExpression
	{ $current=$iv_rulePreIncrementExpression.current; }
	EOF;

// Rule PreIncrementExpression
rulePreIncrementExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_operator_0_0='++'
				{
					newLeafNode(lv_operator_0_0, grammarAccess.getPreIncrementExpressionAccess().getOperatorPlusSignPlusSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPreIncrementExpressionRule());
					}
					setWithLastConsumed($current, "operator", lv_operator_0_0, "++");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPreIncrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0());
				}
				lv_operand_1_0=ruleNoArrayExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPreIncrementExpressionRule());
					}
					set(
						$current,
						"operand",
						lv_operand_1_0,
						"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNoArrayExpressionWithoutMinus
entryRuleNoArrayExpressionWithoutMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNoArrayExpressionWithoutMinusRule()); }
	iv_ruleNoArrayExpressionWithoutMinus=ruleNoArrayExpressionWithoutMinus
	{ $current=$iv_ruleNoArrayExpressionWithoutMinus.current; }
	EOF;

// Rule NoArrayExpressionWithoutMinus
ruleNoArrayExpressionWithoutMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(rulePostfixExpression)=>
			{
				newCompositeNode(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getPostfixExpressionParserRuleCall_0());
			}
			this_PostfixExpression_0=rulePostfixExpression
			{
				$current = $this_PostfixExpression_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		(
			(
				(
					lv_operator_1_0='~'
					{
						newLeafNode(lv_operator_1_0, grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorTildeKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNoArrayExpressionWithoutMinusRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_1_0, "~");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_1_1_0());
					}
					lv_operand_2_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoArrayExpressionWithoutMinusRule());
						}
						set(
							$current,
							"operand",
							lv_operand_2_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_operator_3_0='!'
					{
						newLeafNode(lv_operator_3_0, grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorExclamationMarkKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNoArrayExpressionWithoutMinusRule());
						}
						setWithLastConsumed($current, "operator", lv_operator_3_0, "!");
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0());
					}
					lv_operand_4_0=ruleNoArrayExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNoArrayExpressionWithoutMinusRule());
						}
						set(
							$current,
							"operand",
							lv_operand_4_0,
							"org.xtext.example.mydsl1.MyDsl.NoArrayExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getCastExpressionParserRuleCall_3());
		}
		this_CastExpression_5=ruleCastExpression
		{
			$current = $this_CastExpression_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	iv_rulePostfixExpression=rulePostfixExpression
	{ $current=$iv_rulePostfixExpression.current; }
	EOF;

// Rule PostfixExpression
rulePostfixExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					rulePrimary
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getPostfixExpressionAccess().getObjectPrimaryParserRuleCall_0_0_0());
					}
					lv_object_0_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
						}
						set(
							$current,
							"object",
							lv_object_0_0,
							"org.xtext.example.mydsl1.MyDsl.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPostfixExpressionAccess().getReferenceExpressionNameParserRuleCall_0_1_0());
					}
					lv_reference_1_0=ruleExpressionName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
						}
						set(
							$current,
							"reference",
							lv_reference_1_0,
							"org.xtext.example.mydsl1.MyDsl.ExpressionName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				(
					lv_operators_2_1='--'
					{
						newLeafNode(lv_operators_2_1, grammarAccess.getPostfixExpressionAccess().getOperatorsHyphenMinusHyphenMinusKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPostfixExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_2_1, null);
					}
					    |
					lv_operators_2_2='++'
					{
						newLeafNode(lv_operators_2_2, grammarAccess.getPostfixExpressionAccess().getOperatorsPlusSignPlusSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPostfixExpressionRule());
						}
						addWithLastConsumed($current, "operators", lv_operators_2_2, null);
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMethodInvocation
entryRuleMethodInvocation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodInvocationRule()); }
	iv_ruleMethodInvocation=ruleMethodInvocation
	{ $current=$iv_ruleMethodInvocation.current; }
	EOF;

// Rule MethodInvocation
ruleMethodInvocation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodInvocationAccess().getMethodMethodNameParserRuleCall_0_0_0());
					}
					lv_method_0_0=ruleMethodName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodInvocationRule());
						}
						set(
							$current,
							"method",
							lv_method_0_0,
							"org.xtext.example.mydsl1.MyDsl.MethodName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0());
					}
					lv_args_2_0=ruleArgumentList
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodInvocationRule());
						}
						set(
							$current,
							"args",
							lv_args_2_0,
							"org.xtext.example.mydsl1.MyDsl.ArgumentList");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_3=')'
			{
				newLeafNode(otherlv_3, grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_0_3());
			}
		)
		    |
		(
			((
				(
					(
						rulePrimary
					)
				)
				'.'
				(
					(
						RULE_ID
					)
				)
				'('
				(
					(
						ruleArgumentList
					)
				)?
				')'
			)
			)=>
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodInvocationAccess().getObjectPrimaryParserRuleCall_1_0_0_0());
						}
						lv_object_4_0=rulePrimary
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodInvocationRule());
							}
							set(
								$current,
								"object",
								lv_object_4_0,
								"org.xtext.example.mydsl1.MyDsl.Primary");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5='.'
				{
					newLeafNode(otherlv_5, grammarAccess.getMethodInvocationAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						lv_method_6_0=RULE_ID
						{
							newLeafNode(lv_method_6_0, grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodInvocationRule());
							}
							setWithLastConsumed(
								$current,
								"method",
								lv_method_6_0,
								"org.xtext.example.mydsl1.MyDsl.ID");
						}
					)
				)
				otherlv_7='('
				{
					newLeafNode(otherlv_7, grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_1_0_4_0());
						}
						lv_args_8_0=ruleArgumentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodInvocationRule());
							}
							set(
								$current,
								"args",
								lv_args_8_0,
								"org.xtext.example.mydsl1.MyDsl.ArgumentList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_9=')'
				{
					newLeafNode(otherlv_9, grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_1_0_5());
				}
			)
		)
		    |
		(
			((
				(
					(
						RULE_SUPER
					)
				)
				'.'
				(
					(
						RULE_ID
					)
				)
				'('
				(
					(
						ruleArgumentList
					)
				)?
				')'
			)
			)=>
			(
				(
					(
						lv_keyword_10_0=RULE_SUPER
						{
							newLeafNode(lv_keyword_10_0, grammarAccess.getMethodInvocationAccess().getKeywordSUPERTerminalRuleCall_2_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodInvocationRule());
							}
							setWithLastConsumed(
								$current,
								"keyword",
								lv_keyword_10_0,
								"org.xtext.example.mydsl1.MyDsl.SUPER");
						}
					)
				)
				otherlv_11='.'
				{
					newLeafNode(otherlv_11, grammarAccess.getMethodInvocationAccess().getFullStopKeyword_2_0_1());
				}
				(
					(
						lv_method_12_0=RULE_ID
						{
							newLeafNode(lv_method_12_0, grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_2_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMethodInvocationRule());
							}
							setWithLastConsumed(
								$current,
								"method",
								lv_method_12_0,
								"org.xtext.example.mydsl1.MyDsl.ID");
						}
					)
				)
				otherlv_13='('
				{
					newLeafNode(otherlv_13, grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_2_0_3());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_2_0_4_0());
						}
						lv_args_14_0=ruleArgumentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMethodInvocationRule());
							}
							set(
								$current,
								"args",
								lv_args_14_0,
								"org.xtext.example.mydsl1.MyDsl.ArgumentList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_15=')'
				{
					newLeafNode(otherlv_15, grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_2_0_5());
				}
			)
		)
	)
;

// Entry rule entryRuleFieldAccess
entryRuleFieldAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldAccessRule()); }
	iv_ruleFieldAccess=ruleFieldAccess
	{ $current=$iv_ruleFieldAccess.current; }
	EOF;

// Rule FieldAccess
ruleFieldAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFieldAccessAccess().getObjectPrimaryParserRuleCall_0_0_0());
					}
					lv_object_0_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFieldAccessRule());
						}
						set(
							$current,
							"object",
							lv_object_0_0,
							"org.xtext.example.mydsl1.MyDsl.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getFieldAccessAccess().getFullStopKeyword_0_1());
			}
			(
				(
					lv_field_2_0=RULE_ID
					{
						newLeafNode(lv_field_2_0, grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldAccessRule());
						}
						setWithLastConsumed(
							$current,
							"field",
							lv_field_2_0,
							"org.xtext.example.mydsl1.MyDsl.ID");
					}
				)
			)
		)
		    |
		(
			((
				(
					(
						RULE_SUPER
					)
				)
				'.'
				(
					(
						RULE_ID
					)
				)
			)
			)=>
			(
				(
					(
						lv_keyword_3_0=RULE_SUPER
						{
							newLeafNode(lv_keyword_3_0, grammarAccess.getFieldAccessAccess().getKeywordSUPERTerminalRuleCall_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFieldAccessRule());
							}
							setWithLastConsumed(
								$current,
								"keyword",
								lv_keyword_3_0,
								"org.xtext.example.mydsl1.MyDsl.SUPER");
						}
					)
				)
				otherlv_4='.'
				{
					newLeafNode(otherlv_4, grammarAccess.getFieldAccessAccess().getFullStopKeyword_1_0_1());
				}
				(
					(
						lv_field_5_0=RULE_ID
						{
							newLeafNode(lv_field_5_0, grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_1_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFieldAccessRule());
							}
							setWithLastConsumed(
								$current,
								"field",
								lv_field_5_0,
								"org.xtext.example.mydsl1.MyDsl.ID");
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(rulePrimaryNoNewArray)=>
			{
				newCompositeNode(grammarAccess.getPrimaryAccess().getPrimaryNoNewArrayParserRuleCall_0());
			}
			this_PrimaryNoNewArray_0=rulePrimaryNoNewArray
			{
				$current = $this_PrimaryNoNewArray_0.current;
				afterParserOrEnumRuleCall();
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getPrimaryNewArrayParserRuleCall_1());
		}
		this_PrimaryNewArray_1=rulePrimaryNewArray
		{
			$current = $this_PrimaryNewArray_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrimaryNoNewArray
entryRulePrimaryNoNewArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryNoNewArrayRule()); }
	iv_rulePrimaryNoNewArray=rulePrimaryNoNewArray
	{ $current=$iv_rulePrimaryNoNewArray.current; }
	EOF;

// Rule PrimaryNoNewArray
rulePrimaryNoNewArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralLiteralParserRuleCall_0_0_0());
					}
					lv_literal_0_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
						}
						set(
							$current,
							"literal",
							lv_literal_0_0,
							"org.xtext.example.mydsl1.MyDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_keyword_1_0=RULE_THIS
					{
						newLeafNode(lv_keyword_1_0, grammarAccess.getPrimaryNoNewArrayAccess().getKeywordTHISTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryNoNewArrayRule());
						}
						setWithLastConsumed(
							$current,
							"keyword",
							lv_keyword_1_0,
							"org.xtext.example.mydsl1.MyDsl.THIS");
					}
				)
			)
			    |
			(
				otherlv_2='('
				{
					newLeafNode(otherlv_2, grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_2_0());
				}
				{
					newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getExpressionParserRuleCall_0_2_1());
				}
				this_Expression_3=ruleExpression
				{
					$current = $this_Expression_3.current;
					afterParserOrEnumRuleCall();
				}
				otherlv_4=')'
				{
					newLeafNode(otherlv_4, grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_2_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getClassClassInstanceCreationExpressionParserRuleCall_0_3_0());
					}
					lv_class_5_0=ruleClassInstanceCreationExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
						}
						set(
							$current,
							"class",
							lv_class_5_0,
							"org.xtext.example.mydsl1.MyDsl.ClassInstanceCreationExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_keyword_6_0=RULE_SUPER
					{
						newLeafNode(lv_keyword_6_0, grammarAccess.getPrimaryNoNewArrayAccess().getKeywordSUPERTerminalRuleCall_0_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryNoNewArrayRule());
						}
						setWithLastConsumed(
							$current,
							"keyword",
							lv_keyword_6_0,
							"org.xtext.example.mydsl1.MyDsl.SUPER");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getMethodMethodNameParserRuleCall_0_5_0_0());
						}
						lv_method_7_0=ruleMethodName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
							}
							set(
								$current,
								"method",
								lv_method_7_0,
								"org.xtext.example.mydsl1.MyDsl.MethodName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='('
				{
					newLeafNode(otherlv_8, grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_5_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_0_5_2_0());
						}
						lv_args_9_0=ruleArgumentList
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
							}
							add(
								$current,
								"args",
								lv_args_9_0,
								"org.xtext.example.mydsl1.MyDsl.ArgumentList");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				otherlv_10=')'
				{
					newLeafNode(otherlv_10, grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_5_3());
				}
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceExpressionNameParserRuleCall_0_6_0_0());
						}
						lv_reference_11_0=ruleExpressionName
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
							}
							set(
								$current,
								"reference",
								lv_reference_11_0,
								"org.xtext.example.mydsl1.MyDsl.ExpressionName");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_0_6_1_0());
						}
						lv_dimensions_12_0=ruleArrayExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
							}
							add(
								$current,
								"dimensions",
								lv_dimensions_12_0,
								"org.xtext.example.mydsl1.MyDsl.ArrayExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		(
			((
				(
					'.'
					(
						(
							RULE_ID
						)
					)
					(
						'('
						(
							(
								ruleArgumentList
							)
						)?
						')'
					)?
				)
				    |
				(
					(
						ruleArrayExpression
					)
				)
			)
			)=>
			(
				(
					otherlv_13='.'
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimaryNoNewArrayAccess().getFullStopKeyword_1_0_0_0());
					}
					(
						(
							lv_fields_14_0=RULE_ID
							{
								newLeafNode(lv_fields_14_0, grammarAccess.getPrimaryNoNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPrimaryNoNewArrayRule());
								}
								addWithLastConsumed(
									$current,
									"fields",
									lv_fields_14_0,
									"org.xtext.example.mydsl1.MyDsl.ID");
							}
						)
					)
					(
						otherlv_15='('
						{
							newLeafNode(otherlv_15, grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0());
								}
								lv_args_16_0=ruleArgumentList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
									}
									add(
										$current,
										"args",
										lv_args_16_0,
										"org.xtext.example.mydsl1.MyDsl.ArgumentList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
						otherlv_17=')'
						{
							newLeafNode(otherlv_17, grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2());
						}
					)?
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0());
						}
						lv_dimensions_18_0=ruleArrayExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNoNewArrayRule());
							}
							add(
								$current,
								"dimensions",
								lv_dimensions_18_0,
								"org.xtext.example.mydsl1.MyDsl.ArrayExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryNewArray
entryRulePrimaryNewArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryNewArrayRule()); }
	iv_rulePrimaryNewArray=rulePrimaryNewArray
	{ $current=$iv_rulePrimaryNewArray.current; }
	EOF;

// Rule PrimaryNewArray
rulePrimaryNewArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryNewArrayAccess().getArrayArrayCreationExpressionParserRuleCall_0_0());
				}
				lv_array_0_0=ruleArrayCreationExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryNewArrayRule());
					}
					set(
						$current,
						"array",
						lv_array_0_0,
						"org.xtext.example.mydsl1.MyDsl.ArrayCreationExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			((
				(
					'.'
					(
						(
							RULE_ID
						)
					)
					(
						'('
						(
							(
								ruleArgumentList
							)
						)?
						')'
					)?
				)
				    |
				(
					(
						ruleArrayExpression
					)
				)
			)
			)=>
			(
				(
					otherlv_1='.'
					{
						newLeafNode(otherlv_1, grammarAccess.getPrimaryNewArrayAccess().getFullStopKeyword_1_0_0_0());
					}
					(
						(
							lv_fields_2_0=RULE_ID
							{
								newLeafNode(lv_fields_2_0, grammarAccess.getPrimaryNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPrimaryNewArrayRule());
								}
								addWithLastConsumed(
									$current,
									"fields",
									lv_fields_2_0,
									"org.xtext.example.mydsl1.MyDsl.ID");
							}
						)
					)
					(
						otherlv_3='('
						{
							newLeafNode(otherlv_3, grammarAccess.getPrimaryNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getPrimaryNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0());
								}
								lv_args_4_0=ruleArgumentList
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getPrimaryNewArrayRule());
									}
									add(
										$current,
										"args",
										lv_args_4_0,
										"org.xtext.example.mydsl1.MyDsl.ArgumentList");
									afterParserOrEnumRuleCall();
								}
							)
						)?
						otherlv_5=')'
						{
							newLeafNode(otherlv_5, grammarAccess.getPrimaryNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2());
						}
					)?
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimaryNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0());
						}
						lv_dimensions_6_0=ruleArrayExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimaryNewArrayRule());
							}
							add(
								$current,
								"dimensions",
								lv_dimensions_6_0,
								"org.xtext.example.mydsl1.MyDsl.ArrayExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleClassInstanceCreationExpression
entryRuleClassInstanceCreationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassInstanceCreationExpressionRule()); }
	iv_ruleClassInstanceCreationExpression=ruleClassInstanceCreationExpression
	{ $current=$iv_ruleClassInstanceCreationExpression.current; }
	EOF;

// Rule ClassInstanceCreationExpression
ruleClassInstanceCreationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_NEW_0=RULE_NEW
		{
			newLeafNode(this_NEW_0, grammarAccess.getClassInstanceCreationExpressionAccess().getNEWTerminalRuleCall_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeClassTypeParserRuleCall_1_0());
				}
				lv_type_1_0=ruleClassType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassInstanceCreationExpressionRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"org.xtext.example.mydsl1.MyDsl.ClassType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getClassInstanceCreationExpressionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsArgumentListParserRuleCall_3_0());
				}
				lv_args_3_0=ruleArgumentList
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClassInstanceCreationExpressionRule());
					}
					set(
						$current,
						"args",
						lv_args_3_0,
						"org.xtext.example.mydsl1.MyDsl.ArgumentList");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getClassInstanceCreationExpressionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleArgumentList
entryRuleArgumentList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentListRule()); }
	iv_ruleArgumentList=ruleArgumentList
	{ $current=$iv_ruleArgumentList.current; }
	EOF;

// Rule ArgumentList
ruleArgumentList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_0_0());
				}
				lv_declarations_0_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgumentListRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_0_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(',')=>
				otherlv_1=','
				{
					newLeafNode(otherlv_1, grammarAccess.getArgumentListAccess().getCommaKeyword_1_0());
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_1_1_0());
					}
					lv_declarations_2_0=ruleExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgumentListRule());
						}
						add(
							$current,
							"declarations",
							lv_declarations_2_0,
							"org.xtext.example.mydsl1.MyDsl.Expression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleArrayCreationExpression
entryRuleArrayCreationExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayCreationExpressionRule()); }
	iv_ruleArrayCreationExpression=ruleArrayCreationExpression
	{ $current=$iv_ruleArrayCreationExpression.current; }
	EOF;

// Rule ArrayCreationExpression
ruleArrayCreationExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_NEW_0=RULE_NEW
		{
			newLeafNode(this_NEW_0, grammarAccess.getArrayCreationExpressionAccess().getNEWTerminalRuleCall_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayCreationExpressionAccess().getTypePrimitiveTypeParserRuleCall_1_0_0());
					}
					lv_type_1_0=rulePrimitiveType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayCreationExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_1_0,
							"org.xtext.example.mydsl1.MyDsl.PrimitiveType");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayCreationExpressionAccess().getTypeTypeNameParserRuleCall_1_1_0());
					}
					lv_type_2_0=ruleTypeName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayCreationExpressionRule());
						}
						set(
							$current,
							"type",
							lv_type_2_0,
							"org.xtext.example.mydsl1.MyDsl.TypeName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			((
				ruleArrayExpression
			)
			)=>
			(
				{
					newCompositeNode(grammarAccess.getArrayCreationExpressionAccess().getDimensionsArrayExpressionParserRuleCall_2_0());
				}
				lv_dimensions_3_0=ruleArrayExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayCreationExpressionRule());
					}
					add(
						$current,
						"dimensions",
						lv_dimensions_3_0,
						"org.xtext.example.mydsl1.MyDsl.ArrayExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayCreationExpressionAccess().getLayersArrayTypeParserRuleCall_3_0());
				}
				lv_layers_4_0=ruleArrayType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayCreationExpressionRule());
					}
					add(
						$current,
						"layers",
						lv_layers_4_0,
						"org.xtext.example.mydsl1.MyDsl.ArrayType");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleArrayExpression
entryRuleArrayExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayExpressionRule()); }
	iv_ruleArrayExpression=ruleArrayExpression
	{ $current=$iv_ruleArrayExpression.current; }
	EOF;

// Rule ArrayExpression
ruleArrayExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayExpressionAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayExpressionAccess().getIndexExpressionParserRuleCall_1_0());
				}
				lv_index_1_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayExpressionRule());
					}
					set(
						$current,
						"index",
						lv_index_1_0,
						"org.xtext.example.mydsl1.MyDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayExpressionAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleArrayAccess
entryRuleArrayAccess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayAccessRule()); }
	iv_ruleArrayAccess=ruleArrayAccess
	{ $current=$iv_ruleArrayAccess.current; }
	EOF;

// Rule ArrayAccess
ruleArrayAccess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				((
					ruleExpressionName
				)
				)=>
				(
					{
						newCompositeNode(grammarAccess.getArrayAccessAccess().getReferenceExpressionNameParserRuleCall_0_0_0());
					}
					lv_reference_0_0=ruleExpressionName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayAccessRule());
						}
						set(
							$current,
							"reference",
							lv_reference_0_0,
							"org.xtext.example.mydsl1.MyDsl.ExpressionName");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccessAccess().getArrayPrimaryNoNewArrayParserRuleCall_0_1_0());
					}
					lv_array_1_0=rulePrimaryNoNewArray
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayAccessRule());
						}
						set(
							$current,
							"array",
							lv_array_1_0,
							"org.xtext.example.mydsl1.MyDsl.PrimaryNoNewArray");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayAccessAccess().getFieldArrayExpressionParserRuleCall_1_0());
				}
				lv_field_2_0=ruleArrayExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayAccessRule());
					}
					set(
						$current,
						"field",
						lv_field_2_0,
						"org.xtext.example.mydsl1.MyDsl.ArrayExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePackageName
entryRulePackageName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPackageNameRule()); }
	iv_rulePackageName=rulePackageName
	{ $current=$iv_rulePackageName.current.getText(); }
	EOF;

// Rule PackageName
rulePackageName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getPackageNameAccess().getFullStopKeyword_1_0());
				}
			)
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleTypeName
entryRuleTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeNameRule()); }
	iv_ruleTypeName=ruleTypeName
	{ $current=$iv_ruleTypeName.current.getText(); }
	EOF;

// Rule TypeName
ruleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getTypeNameAccess().getFullStopKeyword_1_0());
				}
			)
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleSimpleTypeName
entryRuleSimpleTypeName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSimpleTypeNameRule()); }
	iv_ruleSimpleTypeName=ruleSimpleTypeName
	{ $current=$iv_ruleSimpleTypeName.current.getText(); }
	EOF;

// Rule SimpleTypeName
ruleSimpleTypeName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getSimpleTypeNameAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleExpressionName
entryRuleExpressionName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionNameRule()); }
	iv_ruleExpressionName=ruleExpressionName
	{ $current=$iv_ruleExpressionName.current.getText(); }
	EOF;

// Rule ExpressionName
ruleExpressionName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getExpressionNameAccess().getFullStopKeyword_1_0());
				}
			)
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleMethodName
entryRuleMethodName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMethodNameRule()); }
	iv_ruleMethodName=ruleMethodName
	{ $current=$iv_ruleMethodName.current.getText(); }
	EOF;

// Rule MethodName
ruleMethodName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_0());
		}
		(
			(
				('.')=>
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getMethodNameAccess().getFullStopKeyword_1_0());
				}
			)
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current.getText(); }
	EOF;

// Rule Literal
ruleLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0());
		}
		this_IntegerLiteral_0=ruleIntegerLiteral
		{
			$current.merge(this_IntegerLiteral_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFloatingLiteralParserRuleCall_1());
		}
		this_FloatingLiteral_1=ruleFloatingLiteral
		{
			$current.merge(this_FloatingLiteral_1);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2());
		}
		this_BooleanLiteral_2=ruleBooleanLiteral
		{
			$current.merge(this_BooleanLiteral_2);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		this_CHARACTER_LITERAL_3=RULE_CHARACTER_LITERAL
		{
			$current.merge(this_CHARACTER_LITERAL_3);
		}
		{
			newLeafNode(this_CHARACTER_LITERAL_3, grammarAccess.getLiteralAccess().getCHARACTER_LITERALTerminalRuleCall_3());
		}
		    |
		this_STRING_LITERAL_4=RULE_STRING_LITERAL
		{
			$current.merge(this_STRING_LITERAL_4);
		}
		{
			newLeafNode(this_STRING_LITERAL_4, grammarAccess.getLiteralAccess().getSTRING_LITERALTerminalRuleCall_4());
		}
		    |
		this_NULL_5=RULE_NULL
		{
			$current.merge(this_NULL_5);
		}
		{
			newLeafNode(this_NULL_5, grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getIntegerLiteralRule()); }
	iv_ruleIntegerLiteral=ruleIntegerLiteral
	{ $current=$iv_ruleIntegerLiteral.current.getText(); }
	EOF;

// Rule IntegerLiteral
ruleIntegerLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			this_DECIMAL_NUMERAL_0=RULE_DECIMAL_NUMERAL
			{
				$current.merge(this_DECIMAL_NUMERAL_0);
			}
			{
				newLeafNode(this_DECIMAL_NUMERAL_0, grammarAccess.getIntegerLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0());
			}
			    |
			this_HEX_NUMERAL_1=RULE_HEX_NUMERAL
			{
				$current.merge(this_HEX_NUMERAL_1);
			}
			{
				newLeafNode(this_HEX_NUMERAL_1, grammarAccess.getIntegerLiteralAccess().getHEX_NUMERALTerminalRuleCall_0_1());
			}
			    |
			this_OCTAL_NUMERAL_2=RULE_OCTAL_NUMERAL
			{
				$current.merge(this_OCTAL_NUMERAL_2);
			}
			{
				newLeafNode(this_OCTAL_NUMERAL_2, grammarAccess.getIntegerLiteralAccess().getOCTAL_NUMERALTerminalRuleCall_0_2());
			}
		)
		(
			kw='l'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerLiteralAccess().getLKeyword_1_0());
			}
			    |
			kw='L'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getIntegerLiteralAccess().getLKeyword_1_1());
			}
		)?
	)
;

// Entry rule entryRuleFloatingLiteral
entryRuleFloatingLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFloatingLiteralRule()); }
	iv_ruleFloatingLiteral=ruleFloatingLiteral
	{ $current=$iv_ruleFloatingLiteral.current.getText(); }
	EOF;

// Rule FloatingLiteral
ruleFloatingLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				this_DECIMAL_NUMERAL_0=RULE_DECIMAL_NUMERAL
				{
					$current.merge(this_DECIMAL_NUMERAL_0);
				}
				{
					newLeafNode(this_DECIMAL_NUMERAL_0, grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_0());
				}
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_0_1());
				}
				(
					this_DECIMAL_NUMERAL_2=RULE_DECIMAL_NUMERAL
					{
						$current.merge(this_DECIMAL_NUMERAL_2);
					}
					{
						newLeafNode(this_DECIMAL_NUMERAL_2, grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_2());
					}
				)*
			)
			    |
			(
				kw='.'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_1_0());
				}
				this_DECIMAL_NUMERAL_4=RULE_DECIMAL_NUMERAL
				{
					$current.merge(this_DECIMAL_NUMERAL_4);
				}
				{
					newLeafNode(this_DECIMAL_NUMERAL_4, grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_1_1());
				}
			)
			    |
			this_DECIMAL_NUMERAL_5=RULE_DECIMAL_NUMERAL
			{
				$current.merge(this_DECIMAL_NUMERAL_5);
			}
			{
				newLeafNode(this_DECIMAL_NUMERAL_5, grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_2());
			}
		)
		this_FLOAT_PART_COMPLEMENT_6=RULE_FLOAT_PART_COMPLEMENT
		{
			$current.merge(this_FLOAT_PART_COMPLEMENT_6);
		}
		{
			newLeafNode(this_FLOAT_PART_COMPLEMENT_6, grammarAccess.getFloatingLiteralAccess().getFLOAT_PART_COMPLEMENTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	iv_ruleBooleanLiteral=ruleBooleanLiteral
	{ $current=$iv_ruleBooleanLiteral.current.getText(); }
	EOF;

// Rule BooleanLiteral
ruleBooleanLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_TRUE_0=RULE_TRUE
		{
			$current.merge(this_TRUE_0);
		}
		{
			newLeafNode(this_TRUE_0, grammarAccess.getBooleanLiteralAccess().getTRUETerminalRuleCall_0());
		}
		    |
		this_FALSE_1=RULE_FALSE
		{
			$current.merge(this_FALSE_1);
		}
		{
			newLeafNode(this_FALSE_1, grammarAccess.getBooleanLiteralAccess().getFALSETerminalRuleCall_1());
		}
	)
;

RULE_DOC_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ABSTRACT : 'abstract';

RULE_AMPERSAND : 'ampersand';

RULE_BOOLEAN : 'boolean';

RULE_BREAK : 'break';

RULE_BYTE : 'byte';

RULE_CASE : 'case';

RULE_CATCH : 'catch';

RULE_CHAR : 'char';

RULE_CLASS : 'class';

RULE_CONST : 'const';

RULE_CONTINUE : 'continue';

RULE_DEFAULT : 'default';

RULE_DO : 'do';

RULE_DOUBLE : 'double';

RULE_ELSE : 'else';

RULE_EXTENDS : 'extends';

RULE_FALSE : 'false';

RULE_FINAL : 'final';

RULE_FINALLY : 'finally';

RULE_FLOAT : 'float';

RULE_FOR : 'for';

RULE_GOTO : 'goto';

RULE_IF : 'if';

RULE_IMPLEMENTS : 'implements';

RULE_IMPORT : 'import';

RULE_INSTANCEOF : 'instanceof';

RULE_INT : 'int';

RULE_INTERFACE : 'interface';

RULE_LONG : 'long';

RULE_NATIVE : 'native';

RULE_NEW : 'new';

RULE_NULL : 'null';

RULE_PACKAGE : 'package';

RULE_PRIVATE : 'private';

RULE_PROTECTED : 'protected';

RULE_PUBLIC : 'public';

RULE_RETURN : 'return';

RULE_SHORT : 'short';

RULE_STATIC : 'static';

RULE_SUPER : 'super';

RULE_SWITCH : 'switch';

RULE_SYNCHRONIZED : 'synchronized';

RULE_THIS : 'this';

RULE_THREADSAFE : 'threadsafe';

RULE_THROW : 'throw';

RULE_THROWS : 'throws';

RULE_TRANSIENT : 'transient';

RULE_TRY : 'try';

RULE_TRUE : 'true';

RULE_VOID : 'void';

RULE_VOLATILE : 'volatile';

RULE_WHILE : 'while';

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;

RULE_DECIMAL_NUMERAL : ('0'|RULE_NON_ZERO_DIGIT RULE_DIGIT*);

fragment RULE_DIGIT : ('0'|RULE_NON_ZERO_DIGIT);

fragment RULE_NON_ZERO_DIGIT : '1'..'9';

RULE_HEX_NUMERAL : ('0x'|'0X') RULE_HEX_DIGIT+;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_OCTAL_NUMERAL : '0' RULE_OCTAL_DIGIT+;

fragment RULE_OCTAL_DIGIT : '0'..'7';

RULE_FLOAT_PART_COMPLEMENT : RULE_EXPONENT_PART? RULE_FLOAT_TYPE_SUFFIX?;

fragment RULE_EXPONENT_PART : RULE_EXPONENT_INDICATOR RULE_SIGNED_INTEGER;

fragment RULE_EXPONENT_INDICATOR : ('e'|'E');

fragment RULE_SIGNED_INTEGER : ('+'|'-') RULE_DIGIT+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

RULE_CHARACTER_LITERAL : ('\'' .|~(('\\'|'\'')) '\'');

RULE_STRING_LITERAL : '"' ('\\' .|~(('\\'|'"')))* '"';
