/*
 * generated by Xtext 2.13.0-SNAPSHOT
 */
package org.xtext.example.mydsl1.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl1.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Inject
	private MyDslGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getImportStatementAccess().getAlternatives_1(), "rule__ImportStatement__Alternatives_1");
					put(grammarAccess.getTypeDeclarationAccess().getAlternatives_1(), "rule__TypeDeclaration__Alternatives_1");
					put(grammarAccess.getClassModifierAccess().getAlternatives(), "rule__ClassModifier__Alternatives");
					put(grammarAccess.getClassBodyDeclarationAccess().getAlternatives(), "rule__ClassBodyDeclaration__Alternatives");
					put(grammarAccess.getClassMemberDeclarationAccess().getAlternatives(), "rule__ClassMemberDeclaration__Alternatives");
					put(grammarAccess.getConstructorModifierAccess().getAlternatives(), "rule__ConstructorModifier__Alternatives");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getAlternatives(), "rule__ExplicitConstructorInvocation__Alternatives");
					put(grammarAccess.getFieldModifierAccess().getAlternatives(), "rule__FieldModifier__Alternatives");
					put(grammarAccess.getVariableInitializerAccess().getAlternatives(), "rule__VariableInitializer__Alternatives");
					put(grammarAccess.getMethodDeclarationAccess().getAlternatives_1(), "rule__MethodDeclaration__Alternatives_1");
					put(grammarAccess.getResultTypeAccess().getAlternatives(), "rule__ResultType__Alternatives");
					put(grammarAccess.getMethodModifierAccess().getAlternatives(), "rule__MethodModifier__Alternatives");
					put(grammarAccess.getInterfaceModifierAccess().getAlternatives(), "rule__InterfaceModifier__Alternatives");
					put(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives(), "rule__InterfaceMemberDeclaration__Alternatives");
					put(grammarAccess.getConstantModifiersAccess().getAlternatives(), "rule__ConstantModifiers__Alternatives");
					put(grammarAccess.getAbstractMethodModifierAccess().getAlternatives(), "rule__AbstractMethodModifier__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives_0(), "rule__Type__Alternatives_0");
					put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
					put(grammarAccess.getNumericTypeAccess().getAlternatives(), "rule__NumericType__Alternatives");
					put(grammarAccess.getIntegralTypeAccess().getAlternatives(), "rule__IntegralType__Alternatives");
					put(grammarAccess.getFloatingTypeAccess().getAlternatives(), "rule__FloatingType__Alternatives");
					put(grammarAccess.getBlockStatementAccess().getAlternatives(), "rule__BlockStatement__Alternatives");
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getStatementExpressionAccess().getAlternatives(), "rule__StatementExpression__Alternatives");
					put(grammarAccess.getSwitchStatementAccess().getAlternatives_5(), "rule__SwitchStatement__Alternatives_5");
					put(grammarAccess.getForInitAccess().getAlternatives(), "rule__ForInit__Alternatives");
					put(grammarAccess.getAssignmentExpressionAccess().getAlternatives(), "rule__AssignmentExpression__Alternatives");
					put(grammarAccess.getLeftHandSideAccess().getAlternatives(), "rule__LeftHandSide__Alternatives");
					put(grammarAccess.getAssignmentOperatorAccess().getAlternatives(), "rule__AssignmentOperator__Alternatives");
					put(grammarAccess.getEqualityExpressionAccess().getOperatorsAlternatives_1_0_0(), "rule__EqualityExpression__OperatorsAlternatives_1_0_0");
					put(grammarAccess.getRelationalExpressionAccess().getAlternatives_1(), "rule__RelationalExpression__Alternatives_1");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorsAlternatives_1_0_0_0_0(), "rule__RelationalExpression__OperatorsAlternatives_1_0_0_0_0");
					put(grammarAccess.getShiftExpressionAccess().getOperatorsAlternatives_1_0_0(), "rule__ShiftExpression__OperatorsAlternatives_1_0_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorsAlternatives_1_0_0(), "rule__AdditiveExpression__OperatorsAlternatives_1_0_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAlternatives_1_0_0(), "rule__MultiplicativeExpression__OperatorsAlternatives_1_0_0");
					put(grammarAccess.getCastExpressionAccess().getAlternatives(), "rule__CastExpression__Alternatives");
					put(grammarAccess.getNoArrayExpressionAccess().getAlternatives(), "rule__NoArrayExpression__Alternatives");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getAlternatives(), "rule__NoArrayExpressionWithoutMinus__Alternatives");
					put(grammarAccess.getPostfixExpressionAccess().getAlternatives_0(), "rule__PostfixExpression__Alternatives_0");
					put(grammarAccess.getPostfixExpressionAccess().getOperatorsAlternatives_1_0(), "rule__PostfixExpression__OperatorsAlternatives_1_0");
					put(grammarAccess.getMethodInvocationAccess().getAlternatives(), "rule__MethodInvocation__Alternatives");
					put(grammarAccess.getFieldAccessAccess().getAlternatives(), "rule__FieldAccess__Alternatives");
					put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_0(), "rule__PrimaryNoNewArray__Alternatives_0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_1_0(), "rule__PrimaryNoNewArray__Alternatives_1_0");
					put(grammarAccess.getPrimaryNewArrayAccess().getAlternatives_1_0(), "rule__PrimaryNewArray__Alternatives_1_0");
					put(grammarAccess.getArrayCreationExpressionAccess().getAlternatives_1(), "rule__ArrayCreationExpression__Alternatives_1");
					put(grammarAccess.getArrayAccessAccess().getAlternatives_0(), "rule__ArrayAccess__Alternatives_0");
					put(grammarAccess.getLiteralAccess().getAlternatives(), "rule__Literal__Alternatives");
					put(grammarAccess.getIntegerLiteralAccess().getAlternatives_0(), "rule__IntegerLiteral__Alternatives_0");
					put(grammarAccess.getIntegerLiteralAccess().getAlternatives_1(), "rule__IntegerLiteral__Alternatives_1");
					put(grammarAccess.getFloatingLiteralAccess().getAlternatives_0(), "rule__FloatingLiteral__Alternatives_0");
					put(grammarAccess.getBooleanLiteralAccess().getAlternatives(), "rule__BooleanLiteral__Alternatives");
					put(grammarAccess.getCompilationUnitAccess().getGroup(), "rule__CompilationUnit__Group__0");
					put(grammarAccess.getPackageStatementAccess().getGroup(), "rule__PackageStatement__Group__0");
					put(grammarAccess.getImportStatementAccess().getGroup(), "rule__ImportStatement__Group__0");
					put(grammarAccess.getImportStatementAccess().getGroup_1_0(), "rule__ImportStatement__Group_1_0__0");
					put(grammarAccess.getTypeDeclarationAccess().getGroup(), "rule__TypeDeclaration__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup(), "rule__ClassDeclaration__Group__0");
					put(grammarAccess.getClassDeclarationAccess().getGroup_3(), "rule__ClassDeclaration__Group_3__0");
					put(grammarAccess.getInterfacesAccess().getGroup(), "rule__Interfaces__Group__0");
					put(grammarAccess.getInterfacesAccess().getGroup_2(), "rule__Interfaces__Group_2__0");
					put(grammarAccess.getClassBodyAccess().getGroup(), "rule__ClassBody__Group__0");
					put(grammarAccess.getStaticInitializerAccess().getGroup(), "rule__StaticInitializer__Group__0");
					put(grammarAccess.getConstructorDeclarationAccess().getGroup(), "rule__ConstructorDeclaration__Group__0");
					put(grammarAccess.getConstructorDeclaratorAccess().getGroup(), "rule__ConstructorDeclarator__Group__0");
					put(grammarAccess.getConstructorDeclaratorAccess().getGroup_2(), "rule__ConstructorDeclarator__Group_2__0");
					put(grammarAccess.getConstructorDeclaratorAccess().getGroup_2_1(), "rule__ConstructorDeclarator__Group_2_1__0");
					put(grammarAccess.getFormalParameterAccess().getGroup(), "rule__FormalParameter__Group__0");
					put(grammarAccess.getExceptionsAccess().getGroup(), "rule__Exceptions__Group__0");
					put(grammarAccess.getExceptionsAccess().getGroup_2(), "rule__Exceptions__Group_2__0");
					put(grammarAccess.getConstructorBodyAccess().getGroup(), "rule__ConstructorBody__Group__0");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_0(), "rule__ExplicitConstructorInvocation__Group_0__0");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_1(), "rule__ExplicitConstructorInvocation__Group_1__0");
					put(grammarAccess.getFieldDeclarationAccess().getGroup(), "rule__FieldDeclaration__Group__0");
					put(grammarAccess.getFieldDeclarationAccess().getGroup_3(), "rule__FieldDeclaration__Group_3__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup(), "rule__VariableDeclarator__Group__0");
					put(grammarAccess.getVariableDeclaratorAccess().getGroup_1(), "rule__VariableDeclarator__Group_1__0");
					put(grammarAccess.getVariableDeclaratorIdAccess().getGroup(), "rule__VariableDeclaratorId__Group__0");
					put(grammarAccess.getMethodDeclarationAccess().getGroup(), "rule__MethodDeclaration__Group__0");
					put(grammarAccess.getMethodHeaderAccess().getGroup(), "rule__MethodHeader__Group__0");
					put(grammarAccess.getMethodDeclaratorAccess().getGroup(), "rule__MethodDeclarator__Group__0");
					put(grammarAccess.getMethodDeclaratorAccess().getGroup_2(), "rule__MethodDeclarator__Group_2__0");
					put(grammarAccess.getMethodDeclaratorAccess().getGroup_2_1(), "rule__MethodDeclarator__Group_2_1__0");
					put(grammarAccess.getInterfaceDeclarationAccess().getGroup(), "rule__InterfaceDeclaration__Group__0");
					put(grammarAccess.getExtendsInterfacesAccess().getGroup(), "rule__ExtendsInterfaces__Group__0");
					put(grammarAccess.getExtendsInterfacesAccess().getGroup_2(), "rule__ExtendsInterfaces__Group_2__0");
					put(grammarAccess.getInterfaceBodyAccess().getGroup(), "rule__InterfaceBody__Group__0");
					put(grammarAccess.getConstantDeclarationAccess().getGroup(), "rule__ConstantDeclaration__Group__0");
					put(grammarAccess.getAbstractMethodDeclarationAccess().getGroup(), "rule__AbstractMethodDeclaration__Group__0");
					put(grammarAccess.getArrayInitializerAccess().getGroup(), "rule__ArrayInitializer__Group__0");
					put(grammarAccess.getArrayInitializerAccess().getGroup_1(), "rule__ArrayInitializer__Group_1__0");
					put(grammarAccess.getArrayInitializerAccess().getGroup_1_1(), "rule__ArrayInitializer__Group_1_1__0");
					put(grammarAccess.getTypeAccess().getGroup(), "rule__Type__Group__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getBlockStatementAccess().getGroup_0(), "rule__BlockStatement__Group_0__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup(), "rule__LocalVariableDeclaration__Group__0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getGroup_2(), "rule__LocalVariableDeclaration__Group_2__0");
					put(grammarAccess.getStatementAccess().getGroup_6(), "rule__Statement__Group_6__0");
					put(grammarAccess.getLabeledStatementAccess().getGroup(), "rule__LabeledStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup(), "rule__IfStatement__Group__0");
					put(grammarAccess.getIfStatementAccess().getGroup_5(), "rule__IfStatement__Group_5__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup(), "rule__SwitchStatement__Group__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup_5_0(), "rule__SwitchStatement__Group_5_0__0");
					put(grammarAccess.getSwitchStatementAccess().getGroup_5_1(), "rule__SwitchStatement__Group_5_1__0");
					put(grammarAccess.getWhileStatementAccess().getGroup(), "rule__WhileStatement__Group__0");
					put(grammarAccess.getDoStatementAccess().getGroup(), "rule__DoStatement__Group__0");
					put(grammarAccess.getForStatementAccess().getGroup(), "rule__ForStatement__Group__0");
					put(grammarAccess.getForInitAccess().getGroup_0(), "rule__ForInit__Group_0__0");
					put(grammarAccess.getForInitAccess().getGroup_0_1(), "rule__ForInit__Group_0_1__0");
					put(grammarAccess.getForUpdateAccess().getGroup(), "rule__ForUpdate__Group__0");
					put(grammarAccess.getForUpdateAccess().getGroup_1(), "rule__ForUpdate__Group_1__0");
					put(grammarAccess.getBreakStatementAccess().getGroup(), "rule__BreakStatement__Group__0");
					put(grammarAccess.getContinueStatementAccess().getGroup(), "rule__ContinueStatement__Group__0");
					put(grammarAccess.getReturnStatementAccess().getGroup(), "rule__ReturnStatement__Group__0");
					put(grammarAccess.getThrowsStatementAccess().getGroup(), "rule__ThrowsStatement__Group__0");
					put(grammarAccess.getSynchronizedStatementAccess().getGroup(), "rule__SynchronizedStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup(), "rule__TryStatement__Group__0");
					put(grammarAccess.getTryStatementAccess().getGroup_2(), "rule__TryStatement__Group_2__0");
					put(grammarAccess.getTryStatementAccess().getGroup_3(), "rule__TryStatement__Group_3__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup(), "rule__ConditionalExpression__Group__0");
					put(grammarAccess.getConditionalExpressionAccess().getGroup_1(), "rule__ConditionalExpression__Group_1__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup(), "rule__ConditionalOrExpression__Group__0");
					put(grammarAccess.getConditionalOrExpressionAccess().getGroup_1(), "rule__ConditionalOrExpression__Group_1__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup(), "rule__ConditionalAndExpression__Group__0");
					put(grammarAccess.getConditionalAndExpressionAccess().getGroup_1(), "rule__ConditionalAndExpression__Group_1__0");
					put(grammarAccess.getInclusiveOrExpressionAccess().getGroup(), "rule__InclusiveOrExpression__Group__0");
					put(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1(), "rule__InclusiveOrExpression__Group_1__0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getGroup(), "rule__ExclusiveOrExpression__Group__0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1(), "rule__ExclusiveOrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup(), "rule__EqualityExpression__Group__0");
					put(grammarAccess.getEqualityExpressionAccess().getGroup_1(), "rule__EqualityExpression__Group_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup(), "rule__RelationalExpression__Group__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0(), "rule__RelationalExpression__Group_1_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0(), "rule__RelationalExpression__Group_1_0_0__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_1(), "rule__RelationalExpression__Group_1_1__0");
					put(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0(), "rule__RelationalExpression__Group_1_1_0__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup(), "rule__ShiftExpression__Group__0");
					put(grammarAccess.getShiftExpressionAccess().getGroup_1(), "rule__ShiftExpression__Group_1__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup(), "rule__AdditiveExpression__Group__0");
					put(grammarAccess.getAdditiveExpressionAccess().getGroup_1(), "rule__AdditiveExpression__Group_1__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup(), "rule__MultiplicativeExpression__Group__0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1(), "rule__MultiplicativeExpression__Group_1__0");
					put(grammarAccess.getCastExpressionAccess().getGroup_0(), "rule__CastExpression__Group_0__0");
					put(grammarAccess.getCastExpressionAccess().getGroup_1(), "rule__CastExpression__Group_1__0");
					put(grammarAccess.getNoArrayExpressionAccess().getGroup_2(), "rule__NoArrayExpression__Group_2__0");
					put(grammarAccess.getNoArrayExpressionAccess().getGroup_3(), "rule__NoArrayExpression__Group_3__0");
					put(grammarAccess.getPreDecrementExpressionAccess().getGroup(), "rule__PreDecrementExpression__Group__0");
					put(grammarAccess.getPreIncrementExpressionAccess().getGroup(), "rule__PreIncrementExpression__Group__0");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_1(), "rule__NoArrayExpressionWithoutMinus__Group_1__0");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_2(), "rule__NoArrayExpressionWithoutMinus__Group_2__0");
					put(grammarAccess.getPostfixExpressionAccess().getGroup(), "rule__PostfixExpression__Group__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_0(), "rule__MethodInvocation__Group_0__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_1(), "rule__MethodInvocation__Group_1__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_1_0(), "rule__MethodInvocation__Group_1_0__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_2(), "rule__MethodInvocation__Group_2__0");
					put(grammarAccess.getMethodInvocationAccess().getGroup_2_0(), "rule__MethodInvocation__Group_2_0__0");
					put(grammarAccess.getFieldAccessAccess().getGroup_0(), "rule__FieldAccess__Group_0__0");
					put(grammarAccess.getFieldAccessAccess().getGroup_1(), "rule__FieldAccess__Group_1__0");
					put(grammarAccess.getFieldAccessAccess().getGroup_1_0(), "rule__FieldAccess__Group_1_0__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup(), "rule__PrimaryNoNewArray__Group__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_2(), "rule__PrimaryNoNewArray__Group_0_2__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_5(), "rule__PrimaryNoNewArray__Group_0_5__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_6(), "rule__PrimaryNoNewArray__Group_0_6__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1(), "rule__PrimaryNoNewArray__Group_1__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0(), "rule__PrimaryNoNewArray__Group_1_0_0__0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0_2(), "rule__PrimaryNoNewArray__Group_1_0_0_2__0");
					put(grammarAccess.getPrimaryNewArrayAccess().getGroup(), "rule__PrimaryNewArray__Group__0");
					put(grammarAccess.getPrimaryNewArrayAccess().getGroup_1(), "rule__PrimaryNewArray__Group_1__0");
					put(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0(), "rule__PrimaryNewArray__Group_1_0_0__0");
					put(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0_2(), "rule__PrimaryNewArray__Group_1_0_0_2__0");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup(), "rule__ClassInstanceCreationExpression__Group__0");
					put(grammarAccess.getArgumentListAccess().getGroup(), "rule__ArgumentList__Group__0");
					put(grammarAccess.getArgumentListAccess().getGroup_1(), "rule__ArgumentList__Group_1__0");
					put(grammarAccess.getArrayCreationExpressionAccess().getGroup(), "rule__ArrayCreationExpression__Group__0");
					put(grammarAccess.getArrayExpressionAccess().getGroup(), "rule__ArrayExpression__Group__0");
					put(grammarAccess.getArrayAccessAccess().getGroup(), "rule__ArrayAccess__Group__0");
					put(grammarAccess.getPackageNameAccess().getGroup(), "rule__PackageName__Group__0");
					put(grammarAccess.getPackageNameAccess().getGroup_1(), "rule__PackageName__Group_1__0");
					put(grammarAccess.getTypeNameAccess().getGroup(), "rule__TypeName__Group__0");
					put(grammarAccess.getTypeNameAccess().getGroup_1(), "rule__TypeName__Group_1__0");
					put(grammarAccess.getExpressionNameAccess().getGroup(), "rule__ExpressionName__Group__0");
					put(grammarAccess.getExpressionNameAccess().getGroup_1(), "rule__ExpressionName__Group_1__0");
					put(grammarAccess.getMethodNameAccess().getGroup(), "rule__MethodName__Group__0");
					put(grammarAccess.getMethodNameAccess().getGroup_1(), "rule__MethodName__Group_1__0");
					put(grammarAccess.getAmbiguousNameAccess().getGroup(), "rule__AmbiguousName__Group__0");
					put(grammarAccess.getAmbiguousNameAccess().getGroup_1(), "rule__AmbiguousName__Group_1__0");
					put(grammarAccess.getIntegerLiteralAccess().getGroup(), "rule__IntegerLiteral__Group__0");
					put(grammarAccess.getFloatingLiteralAccess().getGroup(), "rule__FloatingLiteral__Group__0");
					put(grammarAccess.getFloatingLiteralAccess().getGroup_0_0(), "rule__FloatingLiteral__Group_0_0__0");
					put(grammarAccess.getFloatingLiteralAccess().getGroup_0_1(), "rule__FloatingLiteral__Group_0_1__0");
					put(grammarAccess.getHeadAccess().getProgramAssignment(), "rule__Head__ProgramAssignment");
					put(grammarAccess.getCompilationUnitAccess().getPackageAssignment_0(), "rule__CompilationUnit__PackageAssignment_0");
					put(grammarAccess.getCompilationUnitAccess().getImportsAssignment_1(), "rule__CompilationUnit__ImportsAssignment_1");
					put(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsAssignment_2(), "rule__CompilationUnit__TypeDeclarationsAssignment_2");
					put(grammarAccess.getPackageStatementAccess().getNameAssignment_1(), "rule__PackageStatement__NameAssignment_1");
					put(grammarAccess.getImportStatementAccess().getPackageAssignment_1_0_0(), "rule__ImportStatement__PackageAssignment_1_0_0");
					put(grammarAccess.getImportStatementAccess().getObjectAssignment_1_1(), "rule__ImportStatement__ObjectAssignment_1_1");
					put(grammarAccess.getTypeDeclarationAccess().getDocAssignment_0(), "rule__TypeDeclaration__DocAssignment_0");
					put(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_0(), "rule__TypeDeclaration__NameAssignment_1_0");
					put(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_1(), "rule__TypeDeclaration__NameAssignment_1_1");
					put(grammarAccess.getClassDeclarationAccess().getModifiersAssignment_0(), "rule__ClassDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_2(), "rule__ClassDeclaration__ClassNameAssignment_2");
					put(grammarAccess.getClassDeclarationAccess().getExtendAssignment_3_1(), "rule__ClassDeclaration__ExtendAssignment_3_1");
					put(grammarAccess.getClassDeclarationAccess().getImplementsAssignment_4(), "rule__ClassDeclaration__ImplementsAssignment_4");
					put(grammarAccess.getClassDeclarationAccess().getBodyAssignment_5(), "rule__ClassDeclaration__BodyAssignment_5");
					put(grammarAccess.getInterfacesAccess().getKeywordAssignment_0(), "rule__Interfaces__KeywordAssignment_0");
					put(grammarAccess.getInterfacesAccess().getInterfacesAssignment_1(), "rule__Interfaces__InterfacesAssignment_1");
					put(grammarAccess.getInterfacesAccess().getInterfacesAssignment_2_1(), "rule__Interfaces__InterfacesAssignment_2_1");
					put(grammarAccess.getClassBodyAccess().getDeclarationsAssignment_1(), "rule__ClassBody__DeclarationsAssignment_1");
					put(grammarAccess.getClassBodyDeclarationAccess().getMemberAssignment_0(), "rule__ClassBodyDeclaration__MemberAssignment_0");
					put(grammarAccess.getClassMemberDeclarationAccess().getFieldAssignment_0(), "rule__ClassMemberDeclaration__FieldAssignment_0");
					put(grammarAccess.getClassMemberDeclarationAccess().getMethodAssignment_1(), "rule__ClassMemberDeclaration__MethodAssignment_1");
					put(grammarAccess.getStaticInitializerAccess().getCodeAssignment_1(), "rule__StaticInitializer__CodeAssignment_1");
					put(grammarAccess.getConstructorDeclarationAccess().getModifiersAssignment_0(), "rule__ConstructorDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getConstructorDeclarationAccess().getHeaderAssignment_1(), "rule__ConstructorDeclaration__HeaderAssignment_1");
					put(grammarAccess.getConstructorDeclarationAccess().getThrowsAssignment_2(), "rule__ConstructorDeclaration__ThrowsAssignment_2");
					put(grammarAccess.getConstructorDeclarationAccess().getBodyAssignment_3(), "rule__ConstructorDeclaration__BodyAssignment_3");
					put(grammarAccess.getConstructorDeclaratorAccess().getNameAssignment_0(), "rule__ConstructorDeclarator__NameAssignment_0");
					put(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_0(), "rule__ConstructorDeclarator__ParamsAssignment_2_0");
					put(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_1_1(), "rule__ConstructorDeclarator__ParamsAssignment_2_1_1");
					put(grammarAccess.getFormalParameterAccess().getTypeAssignment_0(), "rule__FormalParameter__TypeAssignment_0");
					put(grammarAccess.getFormalParameterAccess().getVariableAssignment_1(), "rule__FormalParameter__VariableAssignment_1");
					put(grammarAccess.getExceptionsAccess().getExceptionsAssignment_1(), "rule__Exceptions__ExceptionsAssignment_1");
					put(grammarAccess.getExceptionsAccess().getExceptionsAssignment_2_1(), "rule__Exceptions__ExceptionsAssignment_2_1");
					put(grammarAccess.getConstructorBodyAccess().getInvocationAssignment_1(), "rule__ConstructorBody__InvocationAssignment_1");
					put(grammarAccess.getConstructorBodyAccess().getDeclarationsAssignment_2(), "rule__ConstructorBody__DeclarationsAssignment_2");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_0_0(), "rule__ExplicitConstructorInvocation__KeywordAssignment_0_0");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_0_2(), "rule__ExplicitConstructorInvocation__ArgsAssignment_0_2");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_1_0(), "rule__ExplicitConstructorInvocation__KeywordAssignment_1_0");
					put(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_1_2(), "rule__ExplicitConstructorInvocation__ArgsAssignment_1_2");
					put(grammarAccess.getFieldDeclarationAccess().getModifiersAssignment_0(), "rule__FieldDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_1(), "rule__FieldDeclaration__TypeAssignment_1");
					put(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_2(), "rule__FieldDeclaration__VariablesAssignment_2");
					put(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_3_1(), "rule__FieldDeclaration__VariablesAssignment_3_1");
					put(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0(), "rule__VariableDeclarator__NameAssignment_0");
					put(grammarAccess.getVariableDeclaratorAccess().getValueAssignment_1_1(), "rule__VariableDeclarator__ValueAssignment_1_1");
					put(grammarAccess.getVariableInitializerAccess().getExpAssignment_0(), "rule__VariableInitializer__ExpAssignment_0");
					put(grammarAccess.getMethodDeclarationAccess().getSignatureAssignment_0(), "rule__MethodDeclaration__SignatureAssignment_0");
					put(grammarAccess.getMethodDeclarationAccess().getBodyAssignment_1_0(), "rule__MethodDeclaration__BodyAssignment_1_0");
					put(grammarAccess.getMethodHeaderAccess().getModifiersAssignment_0(), "rule__MethodHeader__ModifiersAssignment_0");
					put(grammarAccess.getMethodHeaderAccess().getReturnTypeAssignment_1(), "rule__MethodHeader__ReturnTypeAssignment_1");
					put(grammarAccess.getMethodHeaderAccess().getHeaderAssignment_2(), "rule__MethodHeader__HeaderAssignment_2");
					put(grammarAccess.getMethodHeaderAccess().getThrowsAssignment_3(), "rule__MethodHeader__ThrowsAssignment_3");
					put(grammarAccess.getResultTypeAccess().getTypeAssignment_0(), "rule__ResultType__TypeAssignment_0");
					put(grammarAccess.getMethodDeclaratorAccess().getNameAssignment_0(), "rule__MethodDeclarator__NameAssignment_0");
					put(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_0(), "rule__MethodDeclarator__ParamsAssignment_2_0");
					put(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_1_1(), "rule__MethodDeclarator__ParamsAssignment_2_1_1");
					put(grammarAccess.getInterfaceDeclarationAccess().getModifiersAssignment_0(), "rule__InterfaceDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_2(), "rule__InterfaceDeclaration__NameAssignment_2");
					put(grammarAccess.getInterfaceDeclarationAccess().getExtendsAssignment_3(), "rule__InterfaceDeclaration__ExtendsAssignment_3");
					put(grammarAccess.getInterfaceDeclarationAccess().getBodyAssignment_4(), "rule__InterfaceDeclaration__BodyAssignment_4");
					put(grammarAccess.getExtendsInterfacesAccess().getKeywordAssignment_0(), "rule__ExtendsInterfaces__KeywordAssignment_0");
					put(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_1(), "rule__ExtendsInterfaces__InterfacesAssignment_1");
					put(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_2_1(), "rule__ExtendsInterfaces__InterfacesAssignment_2_1");
					put(grammarAccess.getInterfaceBodyAccess().getDeclarationsAssignment_1(), "rule__InterfaceBody__DeclarationsAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getModifiersAssignment_0(), "rule__ConstantDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1(), "rule__ConstantDeclaration__TypeAssignment_1");
					put(grammarAccess.getConstantDeclarationAccess().getConstantAssignment_2(), "rule__ConstantDeclaration__ConstantAssignment_2");
					put(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAssignment_0(), "rule__AbstractMethodDeclaration__ModifiersAssignment_0");
					put(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeAssignment_1(), "rule__AbstractMethodDeclaration__ReturnTypeAssignment_1");
					put(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderAssignment_2(), "rule__AbstractMethodDeclaration__HeaderAssignment_2");
					put(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsAssignment_3(), "rule__AbstractMethodDeclaration__ThrowsAssignment_3");
					put(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_0(), "rule__ArrayInitializer__ValuesAssignment_1_0");
					put(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_1_1(), "rule__ArrayInitializer__ValuesAssignment_1_1_1");
					put(grammarAccess.getTypeAccess().getNameAssignment_0_0(), "rule__Type__NameAssignment_0_0");
					put(grammarAccess.getTypeAccess().getNameAssignment_0_1(), "rule__Type__NameAssignment_0_1");
					put(grammarAccess.getBlockAccess().getDeclarationsAssignment_1(), "rule__Block__DeclarationsAssignment_1");
					put(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0(), "rule__LocalVariableDeclaration__TypeAssignment_0");
					put(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_1(), "rule__LocalVariableDeclaration__VariablesAssignment_1");
					put(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_2_1(), "rule__LocalVariableDeclaration__VariablesAssignment_2_1");
					put(grammarAccess.getLabeledStatementAccess().getLabelAssignment_0(), "rule__LabeledStatement__LabelAssignment_0");
					put(grammarAccess.getLabeledStatementAccess().getStatementAssignment_2(), "rule__LabeledStatement__StatementAssignment_2");
					put(grammarAccess.getIfStatementAccess().getConditionAssignment_2(), "rule__IfStatement__ConditionAssignment_2");
					put(grammarAccess.getIfStatementAccess().getThenAssignment_4(), "rule__IfStatement__ThenAssignment_4");
					put(grammarAccess.getIfStatementAccess().getElseAssignment_5_1(), "rule__IfStatement__ElseAssignment_5_1");
					put(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2(), "rule__SwitchStatement__ExpressionAssignment_2");
					put(grammarAccess.getSwitchStatementAccess().getConstantsAssignment_5_0_1(), "rule__SwitchStatement__ConstantsAssignment_5_0_1");
					put(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_5_2(), "rule__SwitchStatement__StatementsAssignment_5_2");
					put(grammarAccess.getWhileStatementAccess().getConditionAssignment_2(), "rule__WhileStatement__ConditionAssignment_2");
					put(grammarAccess.getWhileStatementAccess().getStatementAssignment_4(), "rule__WhileStatement__StatementAssignment_4");
					put(grammarAccess.getDoStatementAccess().getStatementAssignment_1(), "rule__DoStatement__StatementAssignment_1");
					put(grammarAccess.getDoStatementAccess().getConditionAssignment_4(), "rule__DoStatement__ConditionAssignment_4");
					put(grammarAccess.getForStatementAccess().getInitExprAssignment_2(), "rule__ForStatement__InitExprAssignment_2");
					put(grammarAccess.getForStatementAccess().getConditionAssignment_4(), "rule__ForStatement__ConditionAssignment_4");
					put(grammarAccess.getForStatementAccess().getUpdateExprAssignment_6(), "rule__ForStatement__UpdateExprAssignment_6");
					put(grammarAccess.getForStatementAccess().getStatementAssignment_8(), "rule__ForStatement__StatementAssignment_8");
					put(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0(), "rule__ForInit__ExpressionsAssignment_0_0");
					put(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1(), "rule__ForInit__ExpressionsAssignment_0_1_1");
					put(grammarAccess.getForInitAccess().getLocalVariableAssignment_1(), "rule__ForInit__LocalVariableAssignment_1");
					put(grammarAccess.getForUpdateAccess().getExpressionsAssignment_0(), "rule__ForUpdate__ExpressionsAssignment_0");
					put(grammarAccess.getForUpdateAccess().getExpressionsAssignment_1_1(), "rule__ForUpdate__ExpressionsAssignment_1_1");
					put(grammarAccess.getBreakStatementAccess().getReferenceAssignment_1(), "rule__BreakStatement__ReferenceAssignment_1");
					put(grammarAccess.getContinueStatementAccess().getReferenceAssignment_1(), "rule__ContinueStatement__ReferenceAssignment_1");
					put(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1(), "rule__ReturnStatement__ExpressionAssignment_1");
					put(grammarAccess.getThrowsStatementAccess().getExpressionAssignment_1(), "rule__ThrowsStatement__ExpressionAssignment_1");
					put(grammarAccess.getSynchronizedStatementAccess().getExpressionAssignment_2(), "rule__SynchronizedStatement__ExpressionAssignment_2");
					put(grammarAccess.getSynchronizedStatementAccess().getBodyAssignment_4(), "rule__SynchronizedStatement__BodyAssignment_4");
					put(grammarAccess.getTryStatementAccess().getTryBodyAssignment_1(), "rule__TryStatement__TryBodyAssignment_1");
					put(grammarAccess.getTryStatementAccess().getParamsAssignment_2_2(), "rule__TryStatement__ParamsAssignment_2_2");
					put(grammarAccess.getTryStatementAccess().getCatchesBodyAssignment_2_4(), "rule__TryStatement__CatchesBodyAssignment_2_4");
					put(grammarAccess.getTryStatementAccess().getFinallyBodyAssignment_3_1(), "rule__TryStatement__FinallyBodyAssignment_3_1");
					put(grammarAccess.getAssignmentAccess().getObjectAssignment_0(), "rule__Assignment__ObjectAssignment_0");
					put(grammarAccess.getAssignmentAccess().getOperatorAssignment_1(), "rule__Assignment__OperatorAssignment_1");
					put(grammarAccess.getAssignmentAccess().getValueAssignment_2(), "rule__Assignment__ValueAssignment_2");
					put(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_0(), "rule__ConditionalExpression__ConditionAssignment_0");
					put(grammarAccess.getConditionalExpressionAccess().getThenAssignment_1_1(), "rule__ConditionalExpression__ThenAssignment_1_1");
					put(grammarAccess.getConditionalExpressionAccess().getElseAssignment_1_3(), "rule__ConditionalExpression__ElseAssignment_1_3");
					put(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_0(), "rule__ConditionalOrExpression__OperandsAssignment_0");
					put(grammarAccess.getConditionalOrExpressionAccess().getOperatorsAssignment_1_0(), "rule__ConditionalOrExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_1_1(), "rule__ConditionalOrExpression__OperandsAssignment_1_1");
					put(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_0(), "rule__ConditionalAndExpression__OperandsAssignment_0");
					put(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAssignment_1_0(), "rule__ConditionalAndExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_1_1(), "rule__ConditionalAndExpression__OperandsAssignment_1_1");
					put(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_0(), "rule__InclusiveOrExpression__OperandsAssignment_0");
					put(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsAssignment_1_0(), "rule__InclusiveOrExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_1_1(), "rule__InclusiveOrExpression__OperandsAssignment_1_1");
					put(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_0(), "rule__ExclusiveOrExpression__OperandsAssignment_0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsAssignment_1_0(), "rule__ExclusiveOrExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_1_1(), "rule__ExclusiveOrExpression__OperandsAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getOperandsAssignment_0(), "rule__AndExpression__OperandsAssignment_0");
					put(grammarAccess.getAndExpressionAccess().getOperatorsAssignment_1_0(), "rule__AndExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getAndExpressionAccess().getOperandsAssignment_1_1(), "rule__AndExpression__OperandsAssignment_1_1");
					put(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_0(), "rule__EqualityExpression__OperandsAssignment_0");
					put(grammarAccess.getEqualityExpressionAccess().getOperatorsAssignment_1_0(), "rule__EqualityExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_1_1(), "rule__EqualityExpression__OperandsAssignment_1_1");
					put(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_0(), "rule__RelationalExpression__OperandsAssignment_0");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_0_0_0(), "rule__RelationalExpression__OperatorsAssignment_1_0_0_0");
					put(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_1_0_0_1(), "rule__RelationalExpression__OperandsAssignment_1_0_0_1");
					put(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_1_0_0(), "rule__RelationalExpression__OperatorsAssignment_1_1_0_0");
					put(grammarAccess.getRelationalExpressionAccess().getClassesAssignment_1_1_0_1(), "rule__RelationalExpression__ClassesAssignment_1_1_0_1");
					put(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_0(), "rule__ShiftExpression__OperandsAssignment_0");
					put(grammarAccess.getShiftExpressionAccess().getOperatorsAssignment_1_0(), "rule__ShiftExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_1_1(), "rule__ShiftExpression__OperandsAssignment_1_1");
					put(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0(), "rule__AdditiveExpression__OperandsAssignment_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0(), "rule__AdditiveExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1(), "rule__AdditiveExpression__OperandsAssignment_1_1");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0(), "rule__MultiplicativeExpression__OperandsAssignment_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0(), "rule__MultiplicativeExpression__OperatorsAssignment_1_0");
					put(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1(), "rule__MultiplicativeExpression__OperandsAssignment_1_1");
					put(grammarAccess.getCastExpressionAccess().getTypeAssignment_0_1(), "rule__CastExpression__TypeAssignment_0_1");
					put(grammarAccess.getCastExpressionAccess().getOperandAssignment_0_3(), "rule__CastExpression__OperandAssignment_0_3");
					put(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1(), "rule__CastExpression__TypeAssignment_1_1");
					put(grammarAccess.getCastExpressionAccess().getOperandAssignment_1_3(), "rule__CastExpression__OperandAssignment_1_3");
					put(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_2_0(), "rule__NoArrayExpression__OperatorAssignment_2_0");
					put(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_2_1(), "rule__NoArrayExpression__OperandAssignment_2_1");
					put(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_3_0(), "rule__NoArrayExpression__OperatorAssignment_3_0");
					put(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_3_1(), "rule__NoArrayExpression__OperandAssignment_3_1");
					put(grammarAccess.getPreDecrementExpressionAccess().getOperatorAssignment_0(), "rule__PreDecrementExpression__OperatorAssignment_0");
					put(grammarAccess.getPreDecrementExpressionAccess().getOperandAssignment_1(), "rule__PreDecrementExpression__OperandAssignment_1");
					put(grammarAccess.getPreIncrementExpressionAccess().getOperatorAssignment_0(), "rule__PreIncrementExpression__OperatorAssignment_0");
					put(grammarAccess.getPreIncrementExpressionAccess().getOperandAssignment_1(), "rule__PreIncrementExpression__OperandAssignment_1");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_1_0(), "rule__NoArrayExpressionWithoutMinus__OperatorAssignment_1_0");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_1_1(), "rule__NoArrayExpressionWithoutMinus__OperandAssignment_1_1");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_2_0(), "rule__NoArrayExpressionWithoutMinus__OperatorAssignment_2_0");
					put(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_2_1(), "rule__NoArrayExpressionWithoutMinus__OperandAssignment_2_1");
					put(grammarAccess.getPostfixExpressionAccess().getObjectAssignment_0_0(), "rule__PostfixExpression__ObjectAssignment_0_0");
					put(grammarAccess.getPostfixExpressionAccess().getReferenceAssignment_0_1(), "rule__PostfixExpression__ReferenceAssignment_0_1");
					put(grammarAccess.getPostfixExpressionAccess().getOperatorsAssignment_1(), "rule__PostfixExpression__OperatorsAssignment_1");
					put(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0_0(), "rule__MethodInvocation__MethodAssignment_0_0");
					put(grammarAccess.getMethodInvocationAccess().getArgsAssignment_0_2(), "rule__MethodInvocation__ArgsAssignment_0_2");
					put(grammarAccess.getMethodInvocationAccess().getObjectAssignment_1_0_0(), "rule__MethodInvocation__ObjectAssignment_1_0_0");
					put(grammarAccess.getMethodInvocationAccess().getMethodAssignment_1_0_2(), "rule__MethodInvocation__MethodAssignment_1_0_2");
					put(grammarAccess.getMethodInvocationAccess().getArgsAssignment_1_0_4(), "rule__MethodInvocation__ArgsAssignment_1_0_4");
					put(grammarAccess.getMethodInvocationAccess().getKeywordAssignment_2_0_0(), "rule__MethodInvocation__KeywordAssignment_2_0_0");
					put(grammarAccess.getMethodInvocationAccess().getMethodAssignment_2_0_2(), "rule__MethodInvocation__MethodAssignment_2_0_2");
					put(grammarAccess.getMethodInvocationAccess().getArgsAssignment_2_0_4(), "rule__MethodInvocation__ArgsAssignment_2_0_4");
					put(grammarAccess.getFieldAccessAccess().getObjectAssignment_0_0(), "rule__FieldAccess__ObjectAssignment_0_0");
					put(grammarAccess.getFieldAccessAccess().getFieldAssignment_0_2(), "rule__FieldAccess__FieldAssignment_0_2");
					put(grammarAccess.getFieldAccessAccess().getKeywordAssignment_1_0_0(), "rule__FieldAccess__KeywordAssignment_1_0_0");
					put(grammarAccess.getFieldAccessAccess().getFieldAssignment_1_0_2(), "rule__FieldAccess__FieldAssignment_1_0_2");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralAssignment_0_0(), "rule__PrimaryNoNewArray__LiteralAssignment_0_0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_1(), "rule__PrimaryNoNewArray__KeywordAssignment_0_1");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getClassAssignment_0_3(), "rule__PrimaryNoNewArray__ClassAssignment_0_3");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_4(), "rule__PrimaryNoNewArray__KeywordAssignment_0_4");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getMethodAssignment_0_5_0(), "rule__PrimaryNoNewArray__MethodAssignment_0_5_0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_0_5_2(), "rule__PrimaryNoNewArray__ArgsAssignment_0_5_2");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceAssignment_0_6_0(), "rule__PrimaryNoNewArray__ReferenceAssignment_0_6_0");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_0_6_1(), "rule__PrimaryNoNewArray__DimensionsAssignment_0_6_1");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getFieldsAssignment_1_0_0_1(), "rule__PrimaryNoNewArray__FieldsAssignment_1_0_0_1");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_1_0_0_2_1(), "rule__PrimaryNoNewArray__ArgsAssignment_1_0_0_2_1");
					put(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_1_0_1(), "rule__PrimaryNoNewArray__DimensionsAssignment_1_0_1");
					put(grammarAccess.getPrimaryNewArrayAccess().getArrayAssignment_0(), "rule__PrimaryNewArray__ArrayAssignment_0");
					put(grammarAccess.getPrimaryNewArrayAccess().getFieldsAssignment_1_0_0_1(), "rule__PrimaryNewArray__FieldsAssignment_1_0_0_1");
					put(grammarAccess.getPrimaryNewArrayAccess().getArgsAssignment_1_0_0_2_1(), "rule__PrimaryNewArray__ArgsAssignment_1_0_0_2_1");
					put(grammarAccess.getPrimaryNewArrayAccess().getDimensionsAssignment_1_0_1(), "rule__PrimaryNewArray__DimensionsAssignment_1_0_1");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1(), "rule__ClassInstanceCreationExpression__TypeAssignment_1");
					put(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsAssignment_3(), "rule__ClassInstanceCreationExpression__ArgsAssignment_3");
					put(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_0(), "rule__ArgumentList__DeclarationsAssignment_0");
					put(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_1_1(), "rule__ArgumentList__DeclarationsAssignment_1_1");
					put(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_0(), "rule__ArrayCreationExpression__TypeAssignment_1_0");
					put(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_1(), "rule__ArrayCreationExpression__TypeAssignment_1_1");
					put(grammarAccess.getArrayCreationExpressionAccess().getDimensionsAssignment_2(), "rule__ArrayCreationExpression__DimensionsAssignment_2");
					put(grammarAccess.getArrayCreationExpressionAccess().getLayersAssignment_3(), "rule__ArrayCreationExpression__LayersAssignment_3");
					put(grammarAccess.getArrayExpressionAccess().getIndexAssignment_1(), "rule__ArrayExpression__IndexAssignment_1");
					put(grammarAccess.getArrayAccessAccess().getReferenceAssignment_0_0(), "rule__ArrayAccess__ReferenceAssignment_0_0");
					put(grammarAccess.getArrayAccessAccess().getArrayAssignment_0_1(), "rule__ArrayAccess__ArrayAssignment_0_1");
					put(grammarAccess.getArrayAccessAccess().getFieldAssignment_1(), "rule__ArrayAccess__FieldAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_DOC_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
