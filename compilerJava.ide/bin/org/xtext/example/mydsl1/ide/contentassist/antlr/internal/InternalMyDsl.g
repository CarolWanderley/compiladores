/*
 * generated by Xtext 2.13.0-SNAPSHOT
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHead
entryRuleHead
:
{ before(grammarAccess.getHeadRule()); }
	 ruleHead
{ after(grammarAccess.getHeadRule()); } 
	 EOF 
;

// Rule Head
ruleHead 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeadAccess().getProgramAssignment()); }
		(rule__Head__ProgramAssignment)
		{ after(grammarAccess.getHeadAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompilationUnit
entryRuleCompilationUnit
:
{ before(grammarAccess.getCompilationUnitRule()); }
	 ruleCompilationUnit
{ after(grammarAccess.getCompilationUnitRule()); } 
	 EOF 
;

// Rule CompilationUnit
ruleCompilationUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompilationUnitAccess().getGroup()); }
		(rule__CompilationUnit__Group__0)
		{ after(grammarAccess.getCompilationUnitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageStatement
entryRulePackageStatement
:
{ before(grammarAccess.getPackageStatementRule()); }
	 rulePackageStatement
{ after(grammarAccess.getPackageStatementRule()); } 
	 EOF 
;

// Rule PackageStatement
rulePackageStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageStatementAccess().getGroup()); }
		(rule__PackageStatement__Group__0)
		{ after(grammarAccess.getPackageStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportStatement
entryRuleImportStatement
:
{ before(grammarAccess.getImportStatementRule()); }
	 ruleImportStatement
{ after(grammarAccess.getImportStatementRule()); } 
	 EOF 
;

// Rule ImportStatement
ruleImportStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportStatementAccess().getGroup()); }
		(rule__ImportStatement__Group__0)
		{ after(grammarAccess.getImportStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDeclaration
entryRuleTypeDeclaration
:
{ before(grammarAccess.getTypeDeclarationRule()); }
	 ruleTypeDeclaration
{ after(grammarAccess.getTypeDeclarationRule()); } 
	 EOF 
;

// Rule TypeDeclaration
ruleTypeDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getGroup()); }
		(rule__TypeDeclaration__Group__0)
		{ after(grammarAccess.getTypeDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
		(rule__ClassDeclaration__Group__0)
		{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassModifier
entryRuleClassModifier
:
{ before(grammarAccess.getClassModifierRule()); }
	 ruleClassModifier
{ after(grammarAccess.getClassModifierRule()); } 
	 EOF 
;

// Rule ClassModifier
ruleClassModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassModifierAccess().getAlternatives()); }
		(rule__ClassModifier__Alternatives)
		{ after(grammarAccess.getClassModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaces
entryRuleInterfaces
:
{ before(grammarAccess.getInterfacesRule()); }
	 ruleInterfaces
{ after(grammarAccess.getInterfacesRule()); } 
	 EOF 
;

// Rule Interfaces
ruleInterfaces 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfacesAccess().getGroup()); }
		(rule__Interfaces__Group__0)
		{ after(grammarAccess.getInterfacesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassBody
entryRuleClassBody
:
{ before(grammarAccess.getClassBodyRule()); }
	 ruleClassBody
{ after(grammarAccess.getClassBodyRule()); } 
	 EOF 
;

// Rule ClassBody
ruleClassBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassBodyAccess().getGroup()); }
		(rule__ClassBody__Group__0)
		{ after(grammarAccess.getClassBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassBodyDeclaration
entryRuleClassBodyDeclaration
:
{ before(grammarAccess.getClassBodyDeclarationRule()); }
	 ruleClassBodyDeclaration
{ after(grammarAccess.getClassBodyDeclarationRule()); } 
	 EOF 
;

// Rule ClassBodyDeclaration
ruleClassBodyDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassBodyDeclarationAccess().getAlternatives()); }
		(rule__ClassBodyDeclaration__Alternatives)
		{ after(grammarAccess.getClassBodyDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassMemberDeclaration
entryRuleClassMemberDeclaration
:
{ before(grammarAccess.getClassMemberDeclarationRule()); }
	 ruleClassMemberDeclaration
{ after(grammarAccess.getClassMemberDeclarationRule()); } 
	 EOF 
;

// Rule ClassMemberDeclaration
ruleClassMemberDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassMemberDeclarationAccess().getAlternatives()); }
		(rule__ClassMemberDeclaration__Alternatives)
		{ after(grammarAccess.getClassMemberDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStaticInitializer
entryRuleStaticInitializer
:
{ before(grammarAccess.getStaticInitializerRule()); }
	 ruleStaticInitializer
{ after(grammarAccess.getStaticInitializerRule()); } 
	 EOF 
;

// Rule StaticInitializer
ruleStaticInitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStaticInitializerAccess().getGroup()); }
		(rule__StaticInitializer__Group__0)
		{ after(grammarAccess.getStaticInitializerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorDeclaration
entryRuleConstructorDeclaration
:
{ before(grammarAccess.getConstructorDeclarationRule()); }
	 ruleConstructorDeclaration
{ after(grammarAccess.getConstructorDeclarationRule()); } 
	 EOF 
;

// Rule ConstructorDeclaration
ruleConstructorDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
		(rule__ConstructorDeclaration__Group__0)
		{ after(grammarAccess.getConstructorDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorModifier
entryRuleConstructorModifier
:
{ before(grammarAccess.getConstructorModifierRule()); }
	 ruleConstructorModifier
{ after(grammarAccess.getConstructorModifierRule()); } 
	 EOF 
;

// Rule ConstructorModifier
ruleConstructorModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorModifierAccess().getAlternatives()); }
		(rule__ConstructorModifier__Alternatives)
		{ after(grammarAccess.getConstructorModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorDeclarator
entryRuleConstructorDeclarator
:
{ before(grammarAccess.getConstructorDeclaratorRule()); }
	 ruleConstructorDeclarator
{ after(grammarAccess.getConstructorDeclaratorRule()); } 
	 EOF 
;

// Rule ConstructorDeclarator
ruleConstructorDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorDeclaratorAccess().getGroup()); }
		(rule__ConstructorDeclarator__Group__0)
		{ after(grammarAccess.getConstructorDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormalParameter
entryRuleFormalParameter
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormalParameterAccess().getGroup()); }
		(rule__FormalParameter__Group__0)
		{ after(grammarAccess.getFormalParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExceptions
entryRuleExceptions
:
{ before(grammarAccess.getExceptionsRule()); }
	 ruleExceptions
{ after(grammarAccess.getExceptionsRule()); } 
	 EOF 
;

// Rule Exceptions
ruleExceptions 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExceptionsAccess().getGroup()); }
		(rule__Exceptions__Group__0)
		{ after(grammarAccess.getExceptionsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstructorBody
entryRuleConstructorBody
:
{ before(grammarAccess.getConstructorBodyRule()); }
	 ruleConstructorBody
{ after(grammarAccess.getConstructorBodyRule()); } 
	 EOF 
;

// Rule ConstructorBody
ruleConstructorBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstructorBodyAccess().getGroup()); }
		(rule__ConstructorBody__Group__0)
		{ after(grammarAccess.getConstructorBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExplicitConstructorInvocation
entryRuleExplicitConstructorInvocation
:
{ before(grammarAccess.getExplicitConstructorInvocationRule()); }
	 ruleExplicitConstructorInvocation
{ after(grammarAccess.getExplicitConstructorInvocationRule()); } 
	 EOF 
;

// Rule ExplicitConstructorInvocation
ruleExplicitConstructorInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getAlternatives()); }
		(rule__ExplicitConstructorInvocation__Alternatives)
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldDeclaration
entryRuleFieldDeclaration
:
{ before(grammarAccess.getFieldDeclarationRule()); }
	 ruleFieldDeclaration
{ after(grammarAccess.getFieldDeclarationRule()); } 
	 EOF 
;

// Rule FieldDeclaration
ruleFieldDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getGroup()); }
		(rule__FieldDeclaration__Group__0)
		{ after(grammarAccess.getFieldDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldModifier
entryRuleFieldModifier
:
{ before(grammarAccess.getFieldModifierRule()); }
	 ruleFieldModifier
{ after(grammarAccess.getFieldModifierRule()); } 
	 EOF 
;

// Rule FieldModifier
ruleFieldModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldModifierAccess().getAlternatives()); }
		(rule__FieldModifier__Alternatives)
		{ after(grammarAccess.getFieldModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclarator
entryRuleVariableDeclarator
:
{ before(grammarAccess.getVariableDeclaratorRule()); }
	 ruleVariableDeclarator
{ after(grammarAccess.getVariableDeclaratorRule()); } 
	 EOF 
;

// Rule VariableDeclarator
ruleVariableDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
		(rule__VariableDeclarator__Group__0)
		{ after(grammarAccess.getVariableDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDeclaratorId
entryRuleVariableDeclaratorId
:
{ before(grammarAccess.getVariableDeclaratorIdRule()); }
	 ruleVariableDeclaratorId
{ after(grammarAccess.getVariableDeclaratorIdRule()); } 
	 EOF 
;

// Rule VariableDeclaratorId
ruleVariableDeclaratorId 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclaratorIdAccess().getGroup()); }
		(rule__VariableDeclaratorId__Group__0)
		{ after(grammarAccess.getVariableDeclaratorIdAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableInitializer
entryRuleVariableInitializer
:
{ before(grammarAccess.getVariableInitializerRule()); }
	 ruleVariableInitializer
{ after(grammarAccess.getVariableInitializerRule()); } 
	 EOF 
;

// Rule VariableInitializer
ruleVariableInitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
		(rule__VariableInitializer__Alternatives)
		{ after(grammarAccess.getVariableInitializerAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDeclaration
entryRuleMethodDeclaration
:
{ before(grammarAccess.getMethodDeclarationRule()); }
	 ruleMethodDeclaration
{ after(grammarAccess.getMethodDeclarationRule()); } 
	 EOF 
;

// Rule MethodDeclaration
ruleMethodDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getGroup()); }
		(rule__MethodDeclaration__Group__0)
		{ after(grammarAccess.getMethodDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodHeader
entryRuleMethodHeader
:
{ before(grammarAccess.getMethodHeaderRule()); }
	 ruleMethodHeader
{ after(grammarAccess.getMethodHeaderRule()); } 
	 EOF 
;

// Rule MethodHeader
ruleMethodHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodHeaderAccess().getGroup()); }
		(rule__MethodHeader__Group__0)
		{ after(grammarAccess.getMethodHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResultType
entryRuleResultType
:
{ before(grammarAccess.getResultTypeRule()); }
	 ruleResultType
{ after(grammarAccess.getResultTypeRule()); } 
	 EOF 
;

// Rule ResultType
ruleResultType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultTypeAccess().getAlternatives()); }
		(rule__ResultType__Alternatives)
		{ after(grammarAccess.getResultTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodModifier
entryRuleMethodModifier
:
{ before(grammarAccess.getMethodModifierRule()); }
	 ruleMethodModifier
{ after(grammarAccess.getMethodModifierRule()); } 
	 EOF 
;

// Rule MethodModifier
ruleMethodModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodModifierAccess().getAlternatives()); }
		(rule__MethodModifier__Alternatives)
		{ after(grammarAccess.getMethodModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDeclarator
entryRuleMethodDeclarator
:
{ before(grammarAccess.getMethodDeclaratorRule()); }
	 ruleMethodDeclarator
{ after(grammarAccess.getMethodDeclaratorRule()); } 
	 EOF 
;

// Rule MethodDeclarator
ruleMethodDeclarator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclaratorAccess().getGroup()); }
		(rule__MethodDeclarator__Group__0)
		{ after(grammarAccess.getMethodDeclaratorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
		(rule__InterfaceDeclaration__Group__0)
		{ after(grammarAccess.getInterfaceDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceModifier
entryRuleInterfaceModifier
:
{ before(grammarAccess.getInterfaceModifierRule()); }
	 ruleInterfaceModifier
{ after(grammarAccess.getInterfaceModifierRule()); } 
	 EOF 
;

// Rule InterfaceModifier
ruleInterfaceModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceModifierAccess().getAlternatives()); }
		(rule__InterfaceModifier__Alternatives)
		{ after(grammarAccess.getInterfaceModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtendsInterfaces
entryRuleExtendsInterfaces
:
{ before(grammarAccess.getExtendsInterfacesRule()); }
	 ruleExtendsInterfaces
{ after(grammarAccess.getExtendsInterfacesRule()); } 
	 EOF 
;

// Rule ExtendsInterfaces
ruleExtendsInterfaces 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtendsInterfacesAccess().getGroup()); }
		(rule__ExtendsInterfaces__Group__0)
		{ after(grammarAccess.getExtendsInterfacesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceBody
entryRuleInterfaceBody
:
{ before(grammarAccess.getInterfaceBodyRule()); }
	 ruleInterfaceBody
{ after(grammarAccess.getInterfaceBodyRule()); } 
	 EOF 
;

// Rule InterfaceBody
ruleInterfaceBody 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceBodyAccess().getGroup()); }
		(rule__InterfaceBody__Group__0)
		{ after(grammarAccess.getInterfaceBodyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceMemberDeclaration
entryRuleInterfaceMemberDeclaration
:
{ before(grammarAccess.getInterfaceMemberDeclarationRule()); }
	 ruleInterfaceMemberDeclaration
{ after(grammarAccess.getInterfaceMemberDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceMemberDeclaration
ruleInterfaceMemberDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives()); }
		(rule__InterfaceMemberDeclaration__Alternatives)
		{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantDeclaration
entryRuleConstantDeclaration
:
{ before(grammarAccess.getConstantDeclarationRule()); }
	 ruleConstantDeclaration
{ after(grammarAccess.getConstantDeclarationRule()); } 
	 EOF 
;

// Rule ConstantDeclaration
ruleConstantDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantDeclarationAccess().getGroup()); }
		(rule__ConstantDeclaration__Group__0)
		{ after(grammarAccess.getConstantDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantModifiers
entryRuleConstantModifiers
:
{ before(grammarAccess.getConstantModifiersRule()); }
	 ruleConstantModifiers
{ after(grammarAccess.getConstantModifiersRule()); } 
	 EOF 
;

// Rule ConstantModifiers
ruleConstantModifiers 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantModifiersAccess().getAlternatives()); }
		(rule__ConstantModifiers__Alternatives)
		{ after(grammarAccess.getConstantModifiersAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractMethodDeclaration
entryRuleAbstractMethodDeclaration
:
{ before(grammarAccess.getAbstractMethodDeclarationRule()); }
	 ruleAbstractMethodDeclaration
{ after(grammarAccess.getAbstractMethodDeclarationRule()); } 
	 EOF 
;

// Rule AbstractMethodDeclaration
ruleAbstractMethodDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractMethodDeclarationAccess().getGroup()); }
		(rule__AbstractMethodDeclaration__Group__0)
		{ after(grammarAccess.getAbstractMethodDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractMethodModifier
entryRuleAbstractMethodModifier
:
{ before(grammarAccess.getAbstractMethodModifierRule()); }
	 ruleAbstractMethodModifier
{ after(grammarAccess.getAbstractMethodModifierRule()); } 
	 EOF 
;

// Rule AbstractMethodModifier
ruleAbstractMethodModifier 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractMethodModifierAccess().getAlternatives()); }
		(rule__AbstractMethodModifier__Alternatives)
		{ after(grammarAccess.getAbstractMethodModifierAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayInitializer
entryRuleArrayInitializer
:
{ before(grammarAccess.getArrayInitializerRule()); }
	 ruleArrayInitializer
{ after(grammarAccess.getArrayInitializerRule()); } 
	 EOF 
;

// Rule ArrayInitializer
ruleArrayInitializer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayInitializerAccess().getGroup()); }
		(rule__ArrayInitializer__Group__0)
		{ after(grammarAccess.getArrayInitializerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getGroup()); }
		(rule__Type__Group__0)
		{ after(grammarAccess.getTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitiveType
entryRulePrimitiveType
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
		(rule__PrimitiveType__Alternatives)
		{ after(grammarAccess.getPrimitiveTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumericType
entryRuleNumericType
:
{ before(grammarAccess.getNumericTypeRule()); }
	 ruleNumericType
{ after(grammarAccess.getNumericTypeRule()); } 
	 EOF 
;

// Rule NumericType
ruleNumericType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypeAccess().getAlternatives()); }
		(rule__NumericType__Alternatives)
		{ after(grammarAccess.getNumericTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegralType
entryRuleIntegralType
:
{ before(grammarAccess.getIntegralTypeRule()); }
	 ruleIntegralType
{ after(grammarAccess.getIntegralTypeRule()); } 
	 EOF 
;

// Rule IntegralType
ruleIntegralType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
		(rule__IntegralType__Alternatives)
		{ after(grammarAccess.getIntegralTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingType
entryRuleFloatingType
:
{ before(grammarAccess.getFloatingTypeRule()); }
	 ruleFloatingType
{ after(grammarAccess.getFloatingTypeRule()); } 
	 EOF 
;

// Rule FloatingType
ruleFloatingType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingTypeAccess().getAlternatives()); }
		(rule__FloatingType__Alternatives)
		{ after(grammarAccess.getFloatingTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReferenceType
entryRuleReferenceType
:
{ before(grammarAccess.getReferenceTypeRule()); }
	 ruleReferenceType
{ after(grammarAccess.getReferenceTypeRule()); } 
	 EOF 
;

// Rule ReferenceType
ruleReferenceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceTypeAccess().getTypeNameParserRuleCall()); }
		ruleTypeName
		{ after(grammarAccess.getReferenceTypeAccess().getTypeNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassType
entryRuleClassType
:
{ before(grammarAccess.getClassTypeRule()); }
	 ruleClassType
{ after(grammarAccess.getClassTypeRule()); } 
	 EOF 
;

// Rule ClassType
ruleClassType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassTypeAccess().getTypeNameParserRuleCall()); }
		ruleTypeName
		{ after(grammarAccess.getClassTypeAccess().getTypeNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInterfaceType
entryRuleInterfaceType
:
{ before(grammarAccess.getInterfaceTypeRule()); }
	 ruleInterfaceType
{ after(grammarAccess.getInterfaceTypeRule()); } 
	 EOF 
;

// Rule InterfaceType
ruleInterfaceType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInterfaceTypeAccess().getTypeNameParserRuleCall()); }
		ruleTypeName
		{ after(grammarAccess.getInterfaceTypeAccess().getTypeNameParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayType
entryRuleArrayType
:
{ before(grammarAccess.getArrayTypeRule()); }
	 ruleArrayType
{ after(grammarAccess.getArrayTypeRule()); } 
	 EOF 
;

// Rule ArrayType
ruleArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayTypeAccess().getLeftSquareBracketRightSquareBracketKeyword()); }
		'[]'
		{ after(grammarAccess.getArrayTypeAccess().getLeftSquareBracketRightSquareBracketKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlock
entryRuleBlock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockStatement
entryRuleBlockStatement
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockStatementAccess().getAlternatives()); }
		(rule__BlockStatement__Alternatives)
		{ after(grammarAccess.getBlockStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLocalVariableDeclaration
entryRuleLocalVariableDeclaration
:
{ before(grammarAccess.getLocalVariableDeclarationRule()); }
	 ruleLocalVariableDeclaration
{ after(grammarAccess.getLocalVariableDeclarationRule()); } 
	 EOF 
;

// Rule LocalVariableDeclaration
ruleLocalVariableDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
		(rule__LocalVariableDeclaration__Group__0)
		{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement
:
{ before(grammarAccess.getEmptyStatementRule()); }
	 ruleEmptyStatement
{ after(grammarAccess.getEmptyStatementRule()); } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword()); }
		';'
		{ after(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabeledStatement
entryRuleLabeledStatement
:
{ before(grammarAccess.getLabeledStatementRule()); }
	 ruleLabeledStatement
{ after(grammarAccess.getLabeledStatementRule()); } 
	 EOF 
;

// Rule LabeledStatement
ruleLabeledStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getGroup()); }
		(rule__LabeledStatement__Group__0)
		{ after(grammarAccess.getLabeledStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatementExpression
entryRuleStatementExpression
:
{ before(grammarAccess.getStatementExpressionRule()); }
	 ruleStatementExpression
{ after(grammarAccess.getStatementExpressionRule()); } 
	 EOF 
;

// Rule StatementExpression
ruleStatementExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
		(rule__StatementExpression__Alternatives)
		{ after(grammarAccess.getStatementExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatement
entryRuleIfStatement
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementAccess().getGroup()); }
		(rule__IfStatement__Group__0)
		{ after(grammarAccess.getIfStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
		(rule__SwitchStatement__Group__0)
		{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatement
entryRuleWhileStatement
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
		(rule__WhileStatement__Group__0)
		{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoStatement
entryRuleDoStatement
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoStatementAccess().getGroup()); }
		(rule__DoStatement__Group__0)
		{ after(grammarAccess.getDoStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForStatement
entryRuleForStatement
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForStatementAccess().getGroup()); }
		(rule__ForStatement__Group__0)
		{ after(grammarAccess.getForStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForInit
entryRuleForInit
:
{ before(grammarAccess.getForInitRule()); }
	 ruleForInit
{ after(grammarAccess.getForInitRule()); } 
	 EOF 
;

// Rule ForInit
ruleForInit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForInitAccess().getAlternatives()); }
		(rule__ForInit__Alternatives)
		{ after(grammarAccess.getForInitAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForUpdate
entryRuleForUpdate
:
{ before(grammarAccess.getForUpdateRule()); }
	 ruleForUpdate
{ after(grammarAccess.getForUpdateRule()); } 
	 EOF 
;

// Rule ForUpdate
ruleForUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForUpdateAccess().getGroup()); }
		(rule__ForUpdate__Group__0)
		{ after(grammarAccess.getForUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBreakStatement
entryRuleBreakStatement
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
		(rule__BreakStatement__Group__0)
		{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContinueStatement
entryRuleContinueStatement
:
{ before(grammarAccess.getContinueStatementRule()); }
	 ruleContinueStatement
{ after(grammarAccess.getContinueStatementRule()); } 
	 EOF 
;

// Rule ContinueStatement
ruleContinueStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContinueStatementAccess().getGroup()); }
		(rule__ContinueStatement__Group__0)
		{ after(grammarAccess.getContinueStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatement
entryRuleReturnStatement
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
		(rule__ReturnStatement__Group__0)
		{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleThrowsStatement
entryRuleThrowsStatement
:
{ before(grammarAccess.getThrowsStatementRule()); }
	 ruleThrowsStatement
{ after(grammarAccess.getThrowsStatementRule()); } 
	 EOF 
;

// Rule ThrowsStatement
ruleThrowsStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getThrowsStatementAccess().getGroup()); }
		(rule__ThrowsStatement__Group__0)
		{ after(grammarAccess.getThrowsStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSynchronizedStatement
entryRuleSynchronizedStatement
:
{ before(grammarAccess.getSynchronizedStatementRule()); }
	 ruleSynchronizedStatement
{ after(grammarAccess.getSynchronizedStatementRule()); } 
	 EOF 
;

// Rule SynchronizedStatement
ruleSynchronizedStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSynchronizedStatementAccess().getGroup()); }
		(rule__SynchronizedStatement__Group__0)
		{ after(grammarAccess.getSynchronizedStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTryStatement
entryRuleTryStatement
:
{ before(grammarAccess.getTryStatementRule()); }
	 ruleTryStatement
{ after(grammarAccess.getTryStatementRule()); } 
	 EOF 
;

// Rule TryStatement
ruleTryStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTryStatementAccess().getGroup()); }
		(rule__TryStatement__Group__0)
		{ after(grammarAccess.getTryStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantExpression
entryRuleConstantExpression
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantExpressionAccess().getExpressionParserRuleCall()); }
		ruleExpression
		{ after(grammarAccess.getConstantExpressionAccess().getExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
		(rule__AssignmentExpression__Alternatives)
		{ after(grammarAccess.getAssignmentExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignment
entryRuleAssignment
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentAccess().getGroup()); }
		(rule__Assignment__Group__0)
		{ after(grammarAccess.getAssignmentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLeftHandSide
entryRuleLeftHandSide
:
{ before(grammarAccess.getLeftHandSideRule()); }
	 ruleLeftHandSide
{ after(grammarAccess.getLeftHandSideRule()); } 
	 EOF 
;

// Rule LeftHandSide
ruleLeftHandSide 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLeftHandSideAccess().getAlternatives()); }
		(rule__LeftHandSide__Alternatives)
		{ after(grammarAccess.getLeftHandSideAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleAssignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
		(rule__AssignmentOperator__Alternatives)
		{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
		(rule__ConditionalExpression__Group__0)
		{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleConditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
		(rule__ConditionalOrExpression__Group__0)
		{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
		(rule__ConditionalAndExpression__Group__0)
		{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression
:
{ before(grammarAccess.getInclusiveOrExpressionRule()); }
	 ruleInclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
		(rule__InclusiveOrExpression__Group__0)
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression
:
{ before(grammarAccess.getExclusiveOrExpressionRule()); }
	 ruleExclusiveOrExpression
{ after(grammarAccess.getExclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
		(rule__ExclusiveOrExpression__Group__0)
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndExpression
entryRuleAndExpression
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
		(rule__AndExpression__Group__0)
		{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
		(rule__EqualityExpression__Group__0)
		{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
		(rule__RelationalExpression__Group__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShiftExpression
entryRuleShiftExpression
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
		(rule__ShiftExpression__Group__0)
		{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
		(rule__AdditiveExpression__Group__0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
		(rule__MultiplicativeExpression__Group__0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCastExpression
entryRuleCastExpression
:
{ before(grammarAccess.getCastExpressionRule()); }
	 ruleCastExpression
{ after(grammarAccess.getCastExpressionRule()); } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCastExpressionAccess().getAlternatives()); }
		(rule__CastExpression__Alternatives)
		{ after(grammarAccess.getCastExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoArrayExpression
entryRuleNoArrayExpression
:
{ before(grammarAccess.getNoArrayExpressionRule()); }
	 ruleNoArrayExpression
{ after(grammarAccess.getNoArrayExpressionRule()); } 
	 EOF 
;

// Rule NoArrayExpression
ruleNoArrayExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getAlternatives()); }
		(rule__NoArrayExpression__Alternatives)
		{ after(grammarAccess.getNoArrayExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreDecrementExpression
entryRulePreDecrementExpression
:
{ before(grammarAccess.getPreDecrementExpressionRule()); }
	 rulePreDecrementExpression
{ after(grammarAccess.getPreDecrementExpressionRule()); } 
	 EOF 
;

// Rule PreDecrementExpression
rulePreDecrementExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreDecrementExpressionAccess().getGroup()); }
		(rule__PreDecrementExpression__Group__0)
		{ after(grammarAccess.getPreDecrementExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePreIncrementExpression
entryRulePreIncrementExpression
:
{ before(grammarAccess.getPreIncrementExpressionRule()); }
	 rulePreIncrementExpression
{ after(grammarAccess.getPreIncrementExpressionRule()); } 
	 EOF 
;

// Rule PreIncrementExpression
rulePreIncrementExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPreIncrementExpressionAccess().getGroup()); }
		(rule__PreIncrementExpression__Group__0)
		{ after(grammarAccess.getPreIncrementExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNoArrayExpressionWithoutMinus
entryRuleNoArrayExpressionWithoutMinus
:
{ before(grammarAccess.getNoArrayExpressionWithoutMinusRule()); }
	 ruleNoArrayExpressionWithoutMinus
{ after(grammarAccess.getNoArrayExpressionWithoutMinusRule()); } 
	 EOF 
;

// Rule NoArrayExpressionWithoutMinus
ruleNoArrayExpressionWithoutMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getAlternatives()); }
		(rule__NoArrayExpressionWithoutMinus__Alternatives)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePostfixExpression
entryRulePostfixExpression
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
		(rule__PostfixExpression__Group__0)
		{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodInvocation
entryRuleMethodInvocation
:
{ before(grammarAccess.getMethodInvocationRule()); }
	 ruleMethodInvocation
{ after(grammarAccess.getMethodInvocationRule()); } 
	 EOF 
;

// Rule MethodInvocation
ruleMethodInvocation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getAlternatives()); }
		(rule__MethodInvocation__Alternatives)
		{ after(grammarAccess.getMethodInvocationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldAccess
entryRuleFieldAccess
:
{ before(grammarAccess.getFieldAccessRule()); }
	 ruleFieldAccess
{ after(grammarAccess.getFieldAccessRule()); } 
	 EOF 
;

// Rule FieldAccess
ruleFieldAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccessAccess().getAlternatives()); }
		(rule__FieldAccess__Alternatives)
		{ after(grammarAccess.getFieldAccessAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryNoNewArray
entryRulePrimaryNoNewArray
:
{ before(grammarAccess.getPrimaryNoNewArrayRule()); }
	 rulePrimaryNoNewArray
{ after(grammarAccess.getPrimaryNoNewArrayRule()); } 
	 EOF 
;

// Rule PrimaryNoNewArray
rulePrimaryNoNewArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup()); }
		(rule__PrimaryNoNewArray__Group__0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimaryNewArray
entryRulePrimaryNewArray
:
{ before(grammarAccess.getPrimaryNewArrayRule()); }
	 rulePrimaryNewArray
{ after(grammarAccess.getPrimaryNewArrayRule()); } 
	 EOF 
;

// Rule PrimaryNewArray
rulePrimaryNewArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getGroup()); }
		(rule__PrimaryNewArray__Group__0)
		{ after(grammarAccess.getPrimaryNewArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassInstanceCreationExpression
entryRuleClassInstanceCreationExpression
:
{ before(grammarAccess.getClassInstanceCreationExpressionRule()); }
	 ruleClassInstanceCreationExpression
{ after(grammarAccess.getClassInstanceCreationExpressionRule()); } 
	 EOF 
;

// Rule ClassInstanceCreationExpression
ruleClassInstanceCreationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup()); }
		(rule__ClassInstanceCreationExpression__Group__0)
		{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgumentList
entryRuleArgumentList
:
{ before(grammarAccess.getArgumentListRule()); }
	 ruleArgumentList
{ after(grammarAccess.getArgumentListRule()); } 
	 EOF 
;

// Rule ArgumentList
ruleArgumentList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentListAccess().getGroup()); }
		(rule__ArgumentList__Group__0)
		{ after(grammarAccess.getArgumentListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayCreationExpression
entryRuleArrayCreationExpression
:
{ before(grammarAccess.getArrayCreationExpressionRule()); }
	 ruleArrayCreationExpression
{ after(grammarAccess.getArrayCreationExpressionRule()); } 
	 EOF 
;

// Rule ArrayCreationExpression
ruleArrayCreationExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getGroup()); }
		(rule__ArrayCreationExpression__Group__0)
		{ after(grammarAccess.getArrayCreationExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayExpression
entryRuleArrayExpression
:
{ before(grammarAccess.getArrayExpressionRule()); }
	 ruleArrayExpression
{ after(grammarAccess.getArrayExpressionRule()); } 
	 EOF 
;

// Rule ArrayExpression
ruleArrayExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayExpressionAccess().getGroup()); }
		(rule__ArrayExpression__Group__0)
		{ after(grammarAccess.getArrayExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayAccess
entryRuleArrayAccess
:
{ before(grammarAccess.getArrayAccessRule()); }
	 ruleArrayAccess
{ after(grammarAccess.getArrayAccessRule()); } 
	 EOF 
;

// Rule ArrayAccess
ruleArrayAccess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccessAccess().getGroup()); }
		(rule__ArrayAccess__Group__0)
		{ after(grammarAccess.getArrayAccessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageName
entryRulePackageName
:
{ before(grammarAccess.getPackageNameRule()); }
	 rulePackageName
{ after(grammarAccess.getPackageNameRule()); } 
	 EOF 
;

// Rule PackageName
rulePackageName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageNameAccess().getGroup()); }
		(rule__PackageName__Group__0)
		{ after(grammarAccess.getPackageNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getGroup()); }
		(rule__TypeName__Group__0)
		{ after(grammarAccess.getTypeNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSimpleTypeName
entryRuleSimpleTypeName
:
{ before(grammarAccess.getSimpleTypeNameRule()); }
	 ruleSimpleTypeName
{ after(grammarAccess.getSimpleTypeNameRule()); } 
	 EOF 
;

// Rule SimpleTypeName
ruleSimpleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimpleTypeNameAccess().getIDTerminalRuleCall()); }
		RULE_ID
		{ after(grammarAccess.getSimpleTypeNameAccess().getIDTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpressionName
entryRuleExpressionName
:
{ before(grammarAccess.getExpressionNameRule()); }
	 ruleExpressionName
{ after(grammarAccess.getExpressionNameRule()); } 
	 EOF 
;

// Rule ExpressionName
ruleExpressionName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionNameAccess().getGroup()); }
		(rule__ExpressionName__Group__0)
		{ after(grammarAccess.getExpressionNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodName
entryRuleMethodName
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodNameAccess().getGroup()); }
		(rule__MethodName__Group__0)
		{ after(grammarAccess.getMethodNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntegerLiteral
entryRuleIntegerLiteral
:
{ before(grammarAccess.getIntegerLiteralRule()); }
	 ruleIntegerLiteral
{ after(grammarAccess.getIntegerLiteralRule()); } 
	 EOF 
;

// Rule IntegerLiteral
ruleIntegerLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getGroup()); }
		(rule__IntegerLiteral__Group__0)
		{ after(grammarAccess.getIntegerLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatingLiteral
entryRuleFloatingLiteral
:
{ before(grammarAccess.getFloatingLiteralRule()); }
	 ruleFloatingLiteral
{ after(grammarAccess.getFloatingLiteralRule()); } 
	 EOF 
;

// Rule FloatingLiteral
ruleFloatingLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatingLiteralAccess().getGroup()); }
		(rule__FloatingLiteral__Group__0)
		{ after(grammarAccess.getFloatingLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
		(rule__BooleanLiteral__Alternatives)
		{ after(grammarAccess.getBooleanLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getGroup_1_0()); }
		(rule__ImportStatement__Group_1_0__0)
		{ after(grammarAccess.getImportStatementAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportStatementAccess().getObjectAssignment_1_1()); }
		(rule__ImportStatement__ObjectAssignment_1_1)
		{ after(grammarAccess.getImportStatementAccess().getObjectAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_0()); }
		(rule__TypeDeclaration__NameAssignment_1_0)
		{ after(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_1()); }
		(rule__TypeDeclaration__NameAssignment_1_1)
		{ after(grammarAccess.getTypeDeclarationAccess().getNameAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getClassModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassModifierAccess().getABSTRACTTerminalRuleCall_1()); }
		RULE_ABSTRACT
		{ after(grammarAccess.getClassModifierAccess().getABSTRACTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassModifierAccess().getFINALTerminalRuleCall_2()); }
		RULE_FINAL
		{ after(grammarAccess.getClassModifierAccess().getFINALTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getClassModifierAccess().getPRIVATETerminalRuleCall_3()); }
		RULE_PRIVATE
		{ after(grammarAccess.getClassModifierAccess().getPRIVATETerminalRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBodyDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyDeclarationAccess().getMemberAssignment_0()); }
		(rule__ClassBodyDeclaration__MemberAssignment_0)
		{ after(grammarAccess.getClassBodyDeclarationAccess().getMemberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassBodyDeclarationAccess().getStaticInitializerParserRuleCall_1()); }
		ruleStaticInitializer
		{ after(grammarAccess.getClassBodyDeclarationAccess().getStaticInitializerParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getClassBodyDeclarationAccess().getConstructorDeclarationParserRuleCall_2()); }
		ruleConstructorDeclaration
		{ after(grammarAccess.getClassBodyDeclarationAccess().getConstructorDeclarationParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassMemberDeclarationAccess().getFieldAssignment_0()); }
		(rule__ClassMemberDeclaration__FieldAssignment_0)
		{ after(grammarAccess.getClassMemberDeclarationAccess().getFieldAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getClassMemberDeclarationAccess().getMethodAssignment_1()); }
		(rule__ClassMemberDeclaration__MethodAssignment_1)
		{ after(grammarAccess.getClassMemberDeclarationAccess().getMethodAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getConstructorModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstructorModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
		RULE_PROTECTED
		{ after(grammarAccess.getConstructorModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstructorModifierAccess().getPRIVATETerminalRuleCall_2()); }
		RULE_PRIVATE
		{ after(grammarAccess.getConstructorModifierAccess().getPRIVATETerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_0()); }
		(rule__ExplicitConstructorInvocation__Group_0__0)
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_1()); }
		(rule__ExplicitConstructorInvocation__Group_1__0)
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getFieldModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
		RULE_PROTECTED
		{ after(grammarAccess.getFieldModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getPRIVATETerminalRuleCall_2()); }
		RULE_PRIVATE
		{ after(grammarAccess.getFieldModifierAccess().getPRIVATETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getSTATICTerminalRuleCall_3()); }
		RULE_STATIC
		{ after(grammarAccess.getFieldModifierAccess().getSTATICTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getFINALTerminalRuleCall_4()); }
		RULE_FINAL
		{ after(grammarAccess.getFieldModifierAccess().getFINALTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getTRANSIENTTerminalRuleCall_5()); }
		RULE_TRANSIENT
		{ after(grammarAccess.getFieldModifierAccess().getTRANSIENTTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getFieldModifierAccess().getVOLATILETerminalRuleCall_6()); }
		RULE_VOLATILE
		{ after(grammarAccess.getFieldModifierAccess().getVOLATILETerminalRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableInitializerAccess().getExpAssignment_0()); }
		(rule__VariableInitializer__ExpAssignment_0)
		{ after(grammarAccess.getVariableInitializerAccess().getExpAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1()); }
		ruleArrayInitializer
		{ after(grammarAccess.getVariableInitializerAccess().getArrayInitializerParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getBodyAssignment_1_0()); }
		(rule__MethodDeclaration__BodyAssignment_1_0)
		{ after(grammarAccess.getMethodDeclarationAccess().getBodyAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_1_1()); }
		';'
		{ after(grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultTypeAccess().getTypeAssignment_0()); }
		(rule__ResultType__TypeAssignment_0)
		{ after(grammarAccess.getResultTypeAccess().getTypeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultTypeAccess().getVOIDTerminalRuleCall_1()); }
		RULE_VOID
		{ after(grammarAccess.getResultTypeAccess().getVOIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getMethodModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
		RULE_PROTECTED
		{ after(grammarAccess.getMethodModifierAccess().getPROTECTEDTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getPRIVATETerminalRuleCall_2()); }
		RULE_PRIVATE
		{ after(grammarAccess.getMethodModifierAccess().getPRIVATETerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getSTATICTerminalRuleCall_3()); }
		RULE_STATIC
		{ after(grammarAccess.getMethodModifierAccess().getSTATICTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getABSTRACTTerminalRuleCall_4()); }
		RULE_ABSTRACT
		{ after(grammarAccess.getMethodModifierAccess().getABSTRACTTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getFINALTerminalRuleCall_5()); }
		RULE_FINAL
		{ after(grammarAccess.getMethodModifierAccess().getFINALTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getSYNCHRONIZEDTerminalRuleCall_6()); }
		RULE_SYNCHRONIZED
		{ after(grammarAccess.getMethodModifierAccess().getSYNCHRONIZEDTerminalRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getMethodModifierAccess().getNATIVETerminalRuleCall_7()); }
		RULE_NATIVE
		{ after(grammarAccess.getMethodModifierAccess().getNATIVETerminalRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getInterfaceModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceModifierAccess().getABSTRACTTerminalRuleCall_1()); }
		RULE_ABSTRACT
		{ after(grammarAccess.getInterfaceModifierAccess().getABSTRACTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceMemberDeclaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0()); }
		ruleConstantDeclaration
		{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getConstantDeclarationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInterfaceMemberDeclarationAccess().getAbstractMethodDeclarationParserRuleCall_1()); }
		ruleAbstractMethodDeclaration
		{ after(grammarAccess.getInterfaceMemberDeclarationAccess().getAbstractMethodDeclarationParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantModifiers__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantModifiersAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getConstantModifiersAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantModifiersAccess().getSTATICTerminalRuleCall_1()); }
		RULE_STATIC
		{ after(grammarAccess.getConstantModifiersAccess().getSTATICTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantModifiersAccess().getFINALTerminalRuleCall_2()); }
		RULE_FINAL
		{ after(grammarAccess.getConstantModifiersAccess().getFINALTerminalRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodModifier__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMethodModifierAccess().getPUBLICTerminalRuleCall_0()); }
		RULE_PUBLIC
		{ after(grammarAccess.getAbstractMethodModifierAccess().getPUBLICTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMethodModifierAccess().getABSTRACTTerminalRuleCall_1()); }
		RULE_ABSTRACT
		{ after(grammarAccess.getAbstractMethodModifierAccess().getABSTRACTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment_0_0()); }
		(rule__Type__NameAssignment_0_0)
		{ after(grammarAccess.getTypeAccess().getNameAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment_0_1()); }
		(rule__Type__NameAssignment_0_1)
		{ after(grammarAccess.getTypeAccess().getNameAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0()); }
		ruleNumericType
		{ after(grammarAccess.getPrimitiveTypeAccess().getNumericTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveTypeAccess().getBOOLEANTerminalRuleCall_1()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getPrimitiveTypeAccess().getBOOLEANTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0()); }
		ruleIntegralType
		{ after(grammarAccess.getNumericTypeAccess().getIntegralTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypeAccess().getFloatingTypeParserRuleCall_1()); }
		ruleFloatingType
		{ after(grammarAccess.getNumericTypeAccess().getFloatingTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegralType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegralTypeAccess().getBYTETerminalRuleCall_0()); }
		RULE_BYTE
		{ after(grammarAccess.getIntegralTypeAccess().getBYTETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegralTypeAccess().getSHORTTerminalRuleCall_1()); }
		RULE_SHORT
		{ after(grammarAccess.getIntegralTypeAccess().getSHORTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntegralTypeAccess().getINTTerminalRuleCall_2()); }
		RULE_INT
		{ after(grammarAccess.getIntegralTypeAccess().getINTTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getIntegralTypeAccess().getLONGTerminalRuleCall_3()); }
		RULE_LONG
		{ after(grammarAccess.getIntegralTypeAccess().getLONGTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getIntegralTypeAccess().getCHARTerminalRuleCall_4()); }
		RULE_CHAR
		{ after(grammarAccess.getIntegralTypeAccess().getCHARTerminalRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingTypeAccess().getFLOATTerminalRuleCall_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getFloatingTypeAccess().getFLOATTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatingTypeAccess().getDOUBLETerminalRuleCall_1()); }
		RULE_DOUBLE
		{ after(grammarAccess.getFloatingTypeAccess().getDOUBLETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockStatementAccess().getGroup_0()); }
		(rule__BlockStatement__Group_0__0)
		{ after(grammarAccess.getBlockStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_1()); }
		ruleStatement
		{ after(grammarAccess.getBlockStatementAccess().getStatementParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_0()); }
		ruleEmptyStatement
		{ after(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getLabeledStatementParserRuleCall_1()); }
		ruleLabeledStatement
		{ after(grammarAccess.getStatementAccess().getLabeledStatementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
		ruleIfStatement
		{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
		ruleWhileStatement
		{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
		ruleForStatement
		{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBlockParserRuleCall_5()); }
		ruleBlock
		{ after(grammarAccess.getStatementAccess().getBlockParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_6()); }
		(rule__Statement__Group_6__0)
		{ after(grammarAccess.getStatementAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7()); }
		ruleSwitchStatement
		{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8()); }
		ruleDoStatement
		{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_9()); }
		ruleBreakStatement
		{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_10()); }
		ruleContinueStatement
		{ after(grammarAccess.getStatementAccess().getContinueStatementParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11()); }
		ruleReturnStatement
		{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSynchronizedStatementParserRuleCall_12()); }
		ruleSynchronizedStatement
		{ after(grammarAccess.getStatementAccess().getSynchronizedStatementParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getThrowsStatementParserRuleCall_13()); }
		ruleThrowsStatement
		{ after(grammarAccess.getStatementAccess().getThrowsStatementParserRuleCall_13()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_14()); }
		ruleTryStatement
		{ after(grammarAccess.getStatementAccess().getTryStatementParserRuleCall_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StatementExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementExpressionAccess().getAssignmentParserRuleCall_0()); }
		(ruleAssignment)
		{ after(grammarAccess.getStatementExpressionAccess().getAssignmentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementExpressionAccess().getPreIncrementExpressionParserRuleCall_1()); }
		rulePreIncrementExpression
		{ after(grammarAccess.getStatementExpressionAccess().getPreIncrementExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementExpressionAccess().getPreDecrementExpressionParserRuleCall_2()); }
		rulePreDecrementExpression
		{ after(grammarAccess.getStatementExpressionAccess().getPreDecrementExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementExpressionAccess().getPostfixExpressionParserRuleCall_3()); }
		(rulePostfixExpression)
		{ after(grammarAccess.getStatementExpressionAccess().getPostfixExpressionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementExpressionAccess().getMethodInvocationParserRuleCall_4()); }
		(ruleMethodInvocation)
		{ after(grammarAccess.getStatementExpressionAccess().getMethodInvocationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_5()); }
		(ruleClassInstanceCreationExpression)
		{ after(grammarAccess.getStatementExpressionAccess().getClassInstanceCreationExpressionParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getGroup_5_0()); }
		(rule__SwitchStatement__Group_5_0__0)
		{ after(grammarAccess.getSwitchStatementAccess().getGroup_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStatementAccess().getGroup_5_1()); }
		(rule__SwitchStatement__Group_5_1__0)
		{ after(grammarAccess.getSwitchStatementAccess().getGroup_5_1()); }
	)
	|
	(
		{ before(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_5_2()); }
		(rule__SwitchStatement__StatementsAssignment_5_2)
		{ after(grammarAccess.getSwitchStatementAccess().getStatementsAssignment_5_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForInitAccess().getGroup_0()); }
		(rule__ForInit__Group_0__0)
		{ after(grammarAccess.getForInitAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getForInitAccess().getLocalVariableAssignment_1()); }
		(rule__ForInit__LocalVariableAssignment_1)
		{ after(grammarAccess.getForInitAccess().getLocalVariableAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
		(ruleConditionalExpression)
		{ after(grammarAccess.getAssignmentExpressionAccess().getConditionalExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentExpressionAccess().getAssignmentParserRuleCall_1()); }
		ruleAssignment
		{ after(grammarAccess.getAssignmentExpressionAccess().getAssignmentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LeftHandSide__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLeftHandSideAccess().getExpressionNameParserRuleCall_0()); }
		(ruleExpressionName)
		{ after(grammarAccess.getLeftHandSideAccess().getExpressionNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLeftHandSideAccess().getFieldAccessParserRuleCall_1()); }
		(ruleFieldAccess)
		{ after(grammarAccess.getLeftHandSideAccess().getFieldAccessParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLeftHandSideAccess().getArrayAccessParserRuleCall_2()); }
		(ruleArrayAccess)
		{ after(grammarAccess.getLeftHandSideAccess().getArrayAccessParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }
		'='
		{ after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1()); }
		'*='
		{ after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2()); }
		'/='
		{ after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3()); }
		'%='
		{ after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4()); }
		'+='
		{ after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); }
		'-='
		{ after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }
		'<<='
		{ after(grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }
		'>>='
		{ after(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_8()); }
		'>>>='
		{ after(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_9()); }
		'&='
		{ after(grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_10()); }
		'^='
		{ after(grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_11()); }
		'|='
		{ after(grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_11()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperatorsEqualsSignEqualsSignKeyword_1_0_0_0()); }
		'=='
		{ after(grammarAccess.getEqualityExpressionAccess().getOperatorsEqualsSignEqualsSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperatorsExclamationMarkEqualsSignKeyword_1_0_0_1()); }
		'!='
		{ after(grammarAccess.getEqualityExpressionAccess().getOperatorsExclamationMarkEqualsSignKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
		(rule__RelationalExpression__Group_1_0__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1()); }
		(rule__RelationalExpression__Group_1_1__0)
		{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorsAlternatives_1_0_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignKeyword_1_0_0_0_0_0()); }
		'<'
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignKeyword_1_0_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignKeyword_1_0_0_0_0_1()); }
		'>'
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignKeyword_1_0_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignEqualsSignKeyword_1_0_0_0_0_2()); }
		'<='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsLessThanSignEqualsSignKeyword_1_0_0_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignEqualsSignKeyword_1_0_0_0_0_3()); }
		'>='
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsGreaterThanSignEqualsSignKeyword_1_0_0_0_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OperatorsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperatorsLessThanSignLessThanSignKeyword_1_0_0_0()); }
		'<<'
		{ after(grammarAccess.getShiftExpressionAccess().getOperatorsLessThanSignLessThanSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignKeyword_1_0_0_1()); }
		'>>'
		{ after(grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_0_2()); }
		'>>>'
		{ after(grammarAccess.getShiftExpressionAccess().getOperatorsGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }
		'+'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsPlusSignKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }
		'-'
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsHyphenMinusKeyword_1_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAsteriskKeyword_1_0_0_0()); }
		'*'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAsteriskKeyword_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsSolidusKeyword_1_0_0_1()); }
		'/'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsSolidusKeyword_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsPercentSignKeyword_1_0_0_2()); }
		'%'
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsPercentSignKeyword_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getGroup_0()); }
		(rule__CastExpression__Group_0__0)
		{ after(grammarAccess.getCastExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getCastExpressionAccess().getGroup_1()); }
		(rule__CastExpression__Group_1__0)
		{ after(grammarAccess.getCastExpressionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getPreIncrementExpressionParserRuleCall_0()); }
		rulePreIncrementExpression
		{ after(grammarAccess.getNoArrayExpressionAccess().getPreIncrementExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getPreDecrementExpressionParserRuleCall_1()); }
		rulePreDecrementExpression
		{ after(grammarAccess.getNoArrayExpressionAccess().getPreDecrementExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getGroup_2()); }
		(rule__NoArrayExpression__Group_2__0)
		{ after(grammarAccess.getNoArrayExpressionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getGroup_3()); }
		(rule__NoArrayExpression__Group_3__0)
		{ after(grammarAccess.getNoArrayExpressionAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getNoArrayExpressionWithoutMinusParserRuleCall_4()); }
		ruleNoArrayExpressionWithoutMinus
		{ after(grammarAccess.getNoArrayExpressionAccess().getNoArrayExpressionWithoutMinusParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getPostfixExpressionParserRuleCall_0()); }
		(rulePostfixExpression)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getPostfixExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_1()); }
		(rule__NoArrayExpressionWithoutMinus__Group_1__0)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_2()); }
		(rule__NoArrayExpressionWithoutMinus__Group_2__0)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getCastExpressionParserRuleCall_3()); }
		ruleCastExpression
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getCastExpressionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getObjectAssignment_0_0()); }
		(rule__PostfixExpression__ObjectAssignment_0_0)
		{ after(grammarAccess.getPostfixExpressionAccess().getObjectAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getReferenceAssignment_0_1()); }
		(rule__PostfixExpression__ReferenceAssignment_0_1)
		{ after(grammarAccess.getPostfixExpressionAccess().getReferenceAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__OperatorsAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getOperatorsHyphenMinusHyphenMinusKeyword_1_0_0()); }
		'--'
		{ after(grammarAccess.getPostfixExpressionAccess().getOperatorsHyphenMinusHyphenMinusKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getOperatorsPlusSignPlusSignKeyword_1_0_1()); }
		'++'
		{ after(grammarAccess.getPostfixExpressionAccess().getOperatorsPlusSignPlusSignKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getGroup_0()); }
		(rule__MethodInvocation__Group_0__0)
		{ after(grammarAccess.getMethodInvocationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodInvocationAccess().getGroup_1()); }
		(rule__MethodInvocation__Group_1__0)
		{ after(grammarAccess.getMethodInvocationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodInvocationAccess().getGroup_2()); }
		(rule__MethodInvocation__Group_2__0)
		{ after(grammarAccess.getMethodInvocationAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessAccess().getGroup_0()); }
		(rule__FieldAccess__Group_0__0)
		{ after(grammarAccess.getFieldAccessAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccessAccess().getGroup_1()); }
		(rule__FieldAccess__Group_1__0)
		{ after(grammarAccess.getFieldAccessAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimaryNoNewArrayParserRuleCall_0()); }
		(rulePrimaryNoNewArray)
		{ after(grammarAccess.getPrimaryAccess().getPrimaryNoNewArrayParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getPrimaryNewArrayParserRuleCall_1()); }
		rulePrimaryNewArray
		{ after(grammarAccess.getPrimaryAccess().getPrimaryNewArrayParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralAssignment_0_0()); }
		(rule__PrimaryNoNewArray__LiteralAssignment_0_0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_1()); }
		(rule__PrimaryNoNewArray__KeywordAssignment_0_1)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_2()); }
		(rule__PrimaryNoNewArray__Group_0_2__0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getClassAssignment_0_3()); }
		(rule__PrimaryNoNewArray__ClassAssignment_0_3)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getClassAssignment_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_4()); }
		(rule__PrimaryNoNewArray__KeywordAssignment_0_4)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordAssignment_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_5()); }
		(rule__PrimaryNoNewArray__Group_0_5__0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_6()); }
		(rule__PrimaryNoNewArray__Group_0_6__0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0()); }
		(rule__PrimaryNoNewArray__Group_1_0_0__0)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_1_0_1()); }
		(rule__PrimaryNoNewArray__DimensionsAssignment_1_0_1)
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0()); }
		(rule__PrimaryNewArray__Group_1_0_0__0)
		{ after(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getDimensionsAssignment_1_0_1()); }
		(rule__PrimaryNewArray__DimensionsAssignment_1_0_1)
		{ after(grammarAccess.getPrimaryNewArrayAccess().getDimensionsAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_0()); }
		(rule__ArrayCreationExpression__TypeAssignment_1_0)
		{ after(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_1()); }
		(rule__ArrayCreationExpression__TypeAssignment_1_1)
		{ after(grammarAccess.getArrayCreationExpressionAccess().getTypeAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccessAccess().getReferenceAssignment_0_0()); }
		(rule__ArrayAccess__ReferenceAssignment_0_0)
		{ after(grammarAccess.getArrayAccessAccess().getReferenceAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArrayAccessAccess().getArrayAssignment_0_1()); }
		(rule__ArrayAccess__ArrayAssignment_0_1)
		{ after(grammarAccess.getArrayAccessAccess().getArrayAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
		ruleIntegerLiteral
		{ after(grammarAccess.getLiteralAccess().getIntegerLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFloatingLiteralParserRuleCall_1()); }
		ruleFloatingLiteral
		{ after(grammarAccess.getLiteralAccess().getFloatingLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
		ruleBooleanLiteral
		{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getCHARACTER_LITERALTerminalRuleCall_3()); }
		RULE_CHARACTER_LITERAL
		{ after(grammarAccess.getLiteralAccess().getCHARACTER_LITERALTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getSTRING_LITERALTerminalRuleCall_4()); }
		RULE_STRING_LITERAL
		{ after(grammarAccess.getLiteralAccess().getSTRING_LITERALTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_5()); }
		RULE_NULL
		{ after(grammarAccess.getLiteralAccess().getNULLTerminalRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0()); }
		RULE_DECIMAL_NUMERAL
		{ after(grammarAccess.getIntegerLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getHEX_NUMERALTerminalRuleCall_0_1()); }
		RULE_HEX_NUMERAL
		{ after(grammarAccess.getIntegerLiteralAccess().getHEX_NUMERALTerminalRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getOCTAL_NUMERALTerminalRuleCall_0_2()); }
		RULE_OCTAL_NUMERAL
		{ after(grammarAccess.getIntegerLiteralAccess().getOCTAL_NUMERALTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getLKeyword_1_0()); }
		'l'
		{ after(grammarAccess.getIntegerLiteralAccess().getLKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getIntegerLiteralAccess().getLKeyword_1_1()); }
		'L'
		{ after(grammarAccess.getIntegerLiteralAccess().getLKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatingLiteralAccess().getGroup_0_0()); }
		(rule__FloatingLiteral__Group_0_0__0)
		{ after(grammarAccess.getFloatingLiteralAccess().getGroup_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatingLiteralAccess().getGroup_0_1()); }
		(rule__FloatingLiteral__Group_0_1__0)
		{ after(grammarAccess.getFloatingLiteralAccess().getGroup_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_2()); }
		RULE_DECIMAL_NUMERAL
		{ after(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getTRUETerminalRuleCall_0()); }
		RULE_TRUE
		{ after(grammarAccess.getBooleanLiteralAccess().getTRUETerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanLiteralAccess().getFALSETerminalRuleCall_1()); }
		RULE_FALSE
		{ after(grammarAccess.getBooleanLiteralAccess().getFALSETerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompilationUnit__Group__0__Impl
	rule__CompilationUnit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilationUnitAccess().getPackageAssignment_0()); }
	(rule__CompilationUnit__PackageAssignment_0)?
	{ after(grammarAccess.getCompilationUnitAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompilationUnit__Group__1__Impl
	rule__CompilationUnit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilationUnitAccess().getImportsAssignment_1()); }
	(rule__CompilationUnit__ImportsAssignment_1)*
	{ after(grammarAccess.getCompilationUnitAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompilationUnit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsAssignment_2()); }
	(rule__CompilationUnit__TypeDeclarationsAssignment_2)*
	{ after(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageStatement__Group__0__Impl
	rule__PackageStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageStatementAccess().getPACKAGETerminalRuleCall_0()); }
	(RULE_PACKAGE)
	{ after(grammarAccess.getPackageStatementAccess().getPACKAGETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageStatement__Group__1__Impl
	rule__PackageStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageStatementAccess().getNameAssignment_1()); }
	(rule__PackageStatement__NameAssignment_1)
	{ after(grammarAccess.getPackageStatementAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getPackageStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__0__Impl
	rule__ImportStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getIMPORTTerminalRuleCall_0()); }
	(RULE_IMPORT)
	{ after(grammarAccess.getImportStatementAccess().getIMPORTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__1__Impl
	rule__ImportStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getAlternatives_1()); }
	(rule__ImportStatement__Alternatives_1)
	{ after(grammarAccess.getImportStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getImportStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportStatement__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_1_0__0__Impl
	rule__ImportStatement__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getPackageAssignment_1_0_0()); }
	(rule__ImportStatement__PackageAssignment_1_0_0)
	{ after(grammarAccess.getImportStatementAccess().getPackageAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportStatement__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportStatementAccess().getFullStopAsteriskKeyword_1_0_1()); }
	'.*'
	{ after(grammarAccess.getImportStatementAccess().getFullStopAsteriskKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__0__Impl
	rule__TypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getDocAssignment_0()); }
	(rule__TypeDeclaration__DocAssignment_0)?
	{ after(grammarAccess.getTypeDeclarationAccess().getDocAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__1__Impl
	rule__TypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getAlternatives_1()); }
	(rule__TypeDeclaration__Alternatives_1)
	{ after(grammarAccess.getTypeDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getModifiersAssignment_0()); }
	(rule__ClassDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getClassDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
	RULE_CLASS
	{ after(grammarAccess.getClassDeclarationAccess().getCLASSTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_2()); }
	(rule__ClassDeclaration__ClassNameAssignment_2)
	{ after(grammarAccess.getClassDeclarationAccess().getClassNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
	(rule__ClassDeclaration__Group_3__0)?
	{ after(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__4__Impl
	rule__ClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getImplementsAssignment_4()); }
	(rule__ClassDeclaration__ImplementsAssignment_4)?
	{ after(grammarAccess.getClassDeclarationAccess().getImplementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getBodyAssignment_5()); }
	(rule__ClassDeclaration__BodyAssignment_5)
	{ after(grammarAccess.getClassDeclarationAccess().getBodyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_3__0__Impl
	rule__ClassDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
	RULE_EXTENDS
	{ after(grammarAccess.getClassDeclarationAccess().getEXTENDSTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclarationAccess().getExtendAssignment_3_1()); }
	(rule__ClassDeclaration__ExtendAssignment_3_1)
	{ after(grammarAccess.getClassDeclarationAccess().getExtendAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interfaces__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfaces__Group__0__Impl
	rule__Interfaces__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAccess().getKeywordAssignment_0()); }
	(rule__Interfaces__KeywordAssignment_0)
	{ after(grammarAccess.getInterfacesAccess().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfaces__Group__1__Impl
	rule__Interfaces__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAccess().getInterfacesAssignment_1()); }
	(rule__Interfaces__InterfacesAssignment_1)
	{ after(grammarAccess.getInterfacesAccess().getInterfacesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfaces__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAccess().getGroup_2()); }
	(rule__Interfaces__Group_2__0)*
	{ after(grammarAccess.getInterfacesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Interfaces__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfaces__Group_2__0__Impl
	rule__Interfaces__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAccess().getCommaKeyword_2_0()); }
	(',')
	{ after(grammarAccess.getInterfacesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Interfaces__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfacesAccess().getInterfacesAssignment_2_1()); }
	(rule__Interfaces__InterfacesAssignment_2_1)
	{ after(grammarAccess.getInterfacesAccess().getInterfacesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__0__Impl
	rule__ClassBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getClassBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__1__Impl
	rule__ClassBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getDeclarationsAssignment_1()); }
	(rule__ClassBody__DeclarationsAssignment_1)*
	{ after(grammarAccess.getClassBodyAccess().getDeclarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getClassBodyAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StaticInitializer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticInitializer__Group__0__Impl
	rule__StaticInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticInitializerAccess().getSTATICTerminalRuleCall_0()); }
	RULE_STATIC
	{ after(grammarAccess.getStaticInitializerAccess().getSTATICTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StaticInitializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStaticInitializerAccess().getCodeAssignment_1()); }
	(rule__StaticInitializer__CodeAssignment_1)
	{ after(grammarAccess.getStaticInitializerAccess().getCodeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclaration__Group__0__Impl
	rule__ConstructorDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclarationAccess().getModifiersAssignment_0()); }
	(rule__ConstructorDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getConstructorDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclaration__Group__1__Impl
	rule__ConstructorDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclarationAccess().getHeaderAssignment_1()); }
	(rule__ConstructorDeclaration__HeaderAssignment_1)
	{ after(grammarAccess.getConstructorDeclarationAccess().getHeaderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclaration__Group__2__Impl
	rule__ConstructorDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclarationAccess().getThrowsAssignment_2()); }
	(rule__ConstructorDeclaration__ThrowsAssignment_2)?
	{ after(grammarAccess.getConstructorDeclarationAccess().getThrowsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclarationAccess().getBodyAssignment_3()); }
	(rule__ConstructorDeclaration__BodyAssignment_3)
	{ after(grammarAccess.getConstructorDeclarationAccess().getBodyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group__0__Impl
	rule__ConstructorDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getNameAssignment_0()); }
	(rule__ConstructorDeclarator__NameAssignment_0)
	{ after(grammarAccess.getConstructorDeclaratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group__1__Impl
	rule__ConstructorDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getConstructorDeclaratorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group__2__Impl
	rule__ConstructorDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getGroup_2()); }
	(rule__ConstructorDeclarator__Group_2__0)?
	{ after(grammarAccess.getConstructorDeclaratorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getConstructorDeclaratorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group_2__0__Impl
	rule__ConstructorDeclarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_0()); }
	(rule__ConstructorDeclarator__ParamsAssignment_2_0)
	{ after(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getGroup_2_1()); }
	(rule__ConstructorDeclarator__Group_2_1__0)*
	{ after(grammarAccess.getConstructorDeclaratorAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorDeclarator__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group_2_1__0__Impl
	rule__ConstructorDeclarator__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getCommaKeyword_2_1_0()); }
	(',')
	{ after(grammarAccess.getConstructorDeclaratorAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorDeclarator__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_1_1()); }
	(rule__ConstructorDeclarator__ParamsAssignment_2_1_1)
	{ after(grammarAccess.getConstructorDeclaratorAccess().getParamsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalParameter__Group__0__Impl
	rule__FormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalParameterAccess().getTypeAssignment_0()); }
	(rule__FormalParameter__TypeAssignment_0)
	{ after(grammarAccess.getFormalParameterAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormalParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormalParameterAccess().getVariableAssignment_1()); }
	(rule__FormalParameter__VariableAssignment_1)
	{ after(grammarAccess.getFormalParameterAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exceptions__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exceptions__Group__0__Impl
	rule__Exceptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionsAccess().getTHROWSTerminalRuleCall_0()); }
	RULE_THROWS
	{ after(grammarAccess.getExceptionsAccess().getTHROWSTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exceptions__Group__1__Impl
	rule__Exceptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionsAccess().getExceptionsAssignment_1()); }
	(rule__Exceptions__ExceptionsAssignment_1)
	{ after(grammarAccess.getExceptionsAccess().getExceptionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exceptions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionsAccess().getGroup_2()); }
	(rule__Exceptions__Group_2__0)*
	{ after(grammarAccess.getExceptionsAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exceptions__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exceptions__Group_2__0__Impl
	rule__Exceptions__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionsAccess().getCommaKeyword_2_0()); }
	(',')
	{ after(grammarAccess.getExceptionsAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exceptions__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExceptionsAccess().getExceptionsAssignment_2_1()); }
	(rule__Exceptions__ExceptionsAssignment_2_1)
	{ after(grammarAccess.getExceptionsAccess().getExceptionsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorBody__Group__0__Impl
	rule__ConstructorBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getConstructorBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorBody__Group__1__Impl
	rule__ConstructorBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorBodyAccess().getInvocationAssignment_1()); }
	(rule__ConstructorBody__InvocationAssignment_1)?
	{ after(grammarAccess.getConstructorBodyAccess().getInvocationAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorBody__Group__2__Impl
	rule__ConstructorBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorBodyAccess().getDeclarationsAssignment_2()); }
	(rule__ConstructorBody__DeclarationsAssignment_2)*
	{ after(grammarAccess.getConstructorBodyAccess().getDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstructorBody__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstructorBodyAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getConstructorBodyAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitConstructorInvocation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_0__0__Impl
	rule__ExplicitConstructorInvocation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_0_0()); }
	(rule__ExplicitConstructorInvocation__KeywordAssignment_0_0)
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_0__1__Impl
	rule__ExplicitConstructorInvocation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_0__2__Impl
	rule__ExplicitConstructorInvocation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_0_2()); }
	(rule__ExplicitConstructorInvocation__ArgsAssignment_0_2)?
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExplicitConstructorInvocation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_1__0__Impl
	rule__ExplicitConstructorInvocation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_1_0()); }
	(rule__ExplicitConstructorInvocation__KeywordAssignment_1_0)
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_1__1__Impl
	rule__ExplicitConstructorInvocation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_1__2__Impl
	rule__ExplicitConstructorInvocation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_1_2()); }
	(rule__ExplicitConstructorInvocation__ArgsAssignment_1_2)?
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getArgsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExplicitConstructorInvocation__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getExplicitConstructorInvocationAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__0__Impl
	rule__FieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getModifiersAssignment_0()); }
	(rule__FieldDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getFieldDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__1__Impl
	rule__FieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_1()); }
	(rule__FieldDeclaration__TypeAssignment_1)
	{ after(grammarAccess.getFieldDeclarationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__2__Impl
	rule__FieldDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_2()); }
	(rule__FieldDeclaration__VariablesAssignment_2)
	{ after(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__3__Impl
	rule__FieldDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getGroup_3()); }
	(rule__FieldDeclaration__Group_3__0)*
	{ after(grammarAccess.getFieldDeclarationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getFieldDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldDeclaration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group_3__0__Impl
	rule__FieldDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_3_0()); }
	(',')
	{ after(grammarAccess.getFieldDeclarationAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_3_1()); }
	(rule__FieldDeclaration__VariablesAssignment_3_1)
	{ after(grammarAccess.getFieldDeclarationAccess().getVariablesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarator__Group__0__Impl
	rule__VariableDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0()); }
	(rule__VariableDeclarator__NameAssignment_0)
	{ after(grammarAccess.getVariableDeclaratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorAccess().getGroup_1()); }
	(rule__VariableDeclarator__Group_1__0)?
	{ after(grammarAccess.getVariableDeclaratorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclarator__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarator__Group_1__0__Impl
	rule__VariableDeclarator__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0()); }
	'='
	{ after(grammarAccess.getVariableDeclaratorAccess().getEqualsSignKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclarator__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorAccess().getValueAssignment_1_1()); }
	(rule__VariableDeclarator__ValueAssignment_1_1)
	{ after(grammarAccess.getVariableDeclaratorAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaratorId__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaratorId__Group__0__Impl
	rule__VariableDeclaratorId__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaratorId__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorIdAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getVariableDeclaratorIdAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaratorId__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDeclaratorId__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaratorId__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclaratorIdAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }
	('[]')*
	{ after(grammarAccess.getVariableDeclaratorIdAccess().getLeftSquareBracketRightSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__0__Impl
	rule__MethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getSignatureAssignment_0()); }
	(rule__MethodDeclaration__SignatureAssignment_0)
	{ after(grammarAccess.getMethodDeclarationAccess().getSignatureAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclarationAccess().getAlternatives_1()); }
	(rule__MethodDeclaration__Alternatives_1)
	{ after(grammarAccess.getMethodDeclarationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodHeader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodHeader__Group__0__Impl
	rule__MethodHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodHeaderAccess().getModifiersAssignment_0()); }
	(rule__MethodHeader__ModifiersAssignment_0)*
	{ after(grammarAccess.getMethodHeaderAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodHeader__Group__1__Impl
	rule__MethodHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodHeaderAccess().getReturnTypeAssignment_1()); }
	(rule__MethodHeader__ReturnTypeAssignment_1)
	{ after(grammarAccess.getMethodHeaderAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodHeader__Group__2__Impl
	rule__MethodHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodHeaderAccess().getHeaderAssignment_2()); }
	(rule__MethodHeader__HeaderAssignment_2)
	{ after(grammarAccess.getMethodHeaderAccess().getHeaderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodHeader__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodHeaderAccess().getThrowsAssignment_3()); }
	(rule__MethodHeader__ThrowsAssignment_3)?
	{ after(grammarAccess.getMethodHeaderAccess().getThrowsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclarator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group__0__Impl
	rule__MethodDeclarator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getNameAssignment_0()); }
	(rule__MethodDeclarator__NameAssignment_0)
	{ after(grammarAccess.getMethodDeclaratorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group__1__Impl
	rule__MethodDeclarator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMethodDeclaratorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group__2__Impl
	rule__MethodDeclarator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getGroup_2()); }
	(rule__MethodDeclarator__Group_2__0)?
	{ after(grammarAccess.getMethodDeclaratorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMethodDeclaratorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclarator__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group_2__0__Impl
	rule__MethodDeclarator__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_0()); }
	(rule__MethodDeclarator__ParamsAssignment_2_0)
	{ after(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getGroup_2_1()); }
	(rule__MethodDeclarator__Group_2_1__0)*
	{ after(grammarAccess.getMethodDeclaratorAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDeclarator__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group_2_1__0__Impl
	rule__MethodDeclarator__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getCommaKeyword_2_1_0()); }
	(',')
	{ after(grammarAccess.getMethodDeclaratorAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDeclarator__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_1_1()); }
	(rule__MethodDeclarator__ParamsAssignment_2_1_1)
	{ after(grammarAccess.getMethodDeclaratorAccess().getParamsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__0__Impl
	rule__InterfaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getModifiersAssignment_0()); }
	(rule__InterfaceDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getInterfaceDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__1__Impl
	rule__InterfaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getINTERFACETerminalRuleCall_1()); }
	RULE_INTERFACE
	{ after(grammarAccess.getInterfaceDeclarationAccess().getINTERFACETerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__2__Impl
	rule__InterfaceDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_2()); }
	(rule__InterfaceDeclaration__NameAssignment_2)
	{ after(grammarAccess.getInterfaceDeclarationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__3__Impl
	rule__InterfaceDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getExtendsAssignment_3()); }
	(rule__InterfaceDeclaration__ExtendsAssignment_3)?
	{ after(grammarAccess.getInterfaceDeclarationAccess().getExtendsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceDeclarationAccess().getBodyAssignment_4()); }
	(rule__InterfaceDeclaration__BodyAssignment_4)
	{ after(grammarAccess.getInterfaceDeclarationAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendsInterfaces__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsInterfaces__Group__0__Impl
	rule__ExtendsInterfaces__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsInterfacesAccess().getKeywordAssignment_0()); }
	(rule__ExtendsInterfaces__KeywordAssignment_0)
	{ after(grammarAccess.getExtendsInterfacesAccess().getKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsInterfaces__Group__1__Impl
	rule__ExtendsInterfaces__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_1()); }
	(rule__ExtendsInterfaces__InterfacesAssignment_1)
	{ after(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsInterfaces__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsInterfacesAccess().getGroup_2()); }
	(rule__ExtendsInterfaces__Group_2__0)*
	{ after(grammarAccess.getExtendsInterfacesAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendsInterfaces__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsInterfaces__Group_2__0__Impl
	rule__ExtendsInterfaces__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsInterfacesAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getExtendsInterfacesAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtendsInterfaces__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_2_1()); }
	(rule__ExtendsInterfaces__InterfacesAssignment_2_1)
	{ after(grammarAccess.getExtendsInterfacesAccess().getInterfacesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceBody__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceBody__Group__0__Impl
	rule__InterfaceBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getInterfaceBodyAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceBody__Group__1__Impl
	rule__InterfaceBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceBodyAccess().getDeclarationsAssignment_1()); }
	(rule__InterfaceBody__DeclarationsAssignment_1)*
	{ after(grammarAccess.getInterfaceBodyAccess().getDeclarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InterfaceBody__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getInterfaceBodyAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDeclaration__Group__0__Impl
	rule__ConstantDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclarationAccess().getModifiersAssignment_0()); }
	(rule__ConstantDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getConstantDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDeclaration__Group__1__Impl
	rule__ConstantDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
	(rule__ConstantDeclaration__TypeAssignment_1)
	{ after(grammarAccess.getConstantDeclarationAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConstantDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantDeclarationAccess().getConstantAssignment_2()); }
	(rule__ConstantDeclaration__ConstantAssignment_2)
	{ after(grammarAccess.getConstantDeclarationAccess().getConstantAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AbstractMethodDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractMethodDeclaration__Group__0__Impl
	rule__AbstractMethodDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAssignment_0()); }
	(rule__AbstractMethodDeclaration__ModifiersAssignment_0)*
	{ after(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractMethodDeclaration__Group__1__Impl
	rule__AbstractMethodDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeAssignment_1()); }
	(rule__AbstractMethodDeclaration__ReturnTypeAssignment_1)
	{ after(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractMethodDeclaration__Group__2__Impl
	rule__AbstractMethodDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderAssignment_2()); }
	(rule__AbstractMethodDeclaration__HeaderAssignment_2)
	{ after(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractMethodDeclaration__Group__3__Impl
	rule__AbstractMethodDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsAssignment_3()); }
	(rule__AbstractMethodDeclaration__ThrowsAssignment_3)?
	{ after(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AbstractMethodDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbstractMethodDeclarationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getAbstractMethodDeclarationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group__0__Impl
	rule__ArrayInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getArrayInitializerAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group__1__Impl
	rule__ArrayInitializer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getGroup_1()); }
	(rule__ArrayInitializer__Group_1__0)?
	{ after(grammarAccess.getArrayInitializerAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group__2__Impl
	rule__ArrayInitializer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getCommaKeyword_2()); }
	(',')?
	{ after(grammarAccess.getArrayInitializerAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getArrayInitializerAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group_1__0__Impl
	rule__ArrayInitializer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_0()); }
	(rule__ArrayInitializer__ValuesAssignment_1_0)
	{ after(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
	(rule__ArrayInitializer__Group_1_1__0)*
	{ after(grammarAccess.getArrayInitializerAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayInitializer__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group_1_1__0__Impl
	rule__ArrayInitializer__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_0()); }
	(',')
	{ after(grammarAccess.getArrayInitializerAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayInitializer__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_1_1()); }
	(rule__ArrayInitializer__ValuesAssignment_1_1_1)
	{ after(grammarAccess.getArrayInitializerAccess().getValuesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getAlternatives_0()); }
	(rule__Type__Alternatives_0)
	{ after(grammarAccess.getTypeAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_1()); }
	(ruleArrayType)*
	{ after(grammarAccess.getTypeAccess().getArrayTypeParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getDeclarationsAssignment_1()); }
	(rule__Block__DeclarationsAssignment_1)*
	{ after(grammarAccess.getBlockAccess().getDeclarationsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockStatement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_0__0__Impl
	rule__BlockStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationParserRuleCall_0_0()); }
	ruleLocalVariableDeclaration
	{ after(grammarAccess.getBlockStatementAccess().getLocalVariableDeclarationParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_0_1()); }
	';'
	{ after(grammarAccess.getBlockStatementAccess().getSemicolonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariableDeclaration__Group__0__Impl
	rule__LocalVariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
	(rule__LocalVariableDeclaration__TypeAssignment_0)
	{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariableDeclaration__Group__1__Impl
	rule__LocalVariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_1()); }
	(rule__LocalVariableDeclaration__VariablesAssignment_1)
	{ after(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableDeclarationAccess().getGroup_2()); }
	(rule__LocalVariableDeclaration__Group_2__0)*
	{ after(grammarAccess.getLocalVariableDeclarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariableDeclaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariableDeclaration__Group_2__0__Impl
	rule__LocalVariableDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_2_0()); }
	(',')
	{ after(grammarAccess.getLocalVariableDeclarationAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LocalVariableDeclaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_2_1()); }
	(rule__LocalVariableDeclaration__VariablesAssignment_2_1)
	{ after(grammarAccess.getLocalVariableDeclarationAccess().getVariablesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__0__Impl
	rule__Statement__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getStatementExpressionParserRuleCall_6_0()); }
	ruleStatementExpression
	{ after(grammarAccess.getStatementAccess().getStatementExpressionParserRuleCall_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
	';'
	{ after(grammarAccess.getStatementAccess().getSemicolonKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LabeledStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group__0__Impl
	rule__LabeledStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getLabelAssignment_0()); }
	(rule__LabeledStatement__LabelAssignment_0)
	{ after(grammarAccess.getLabeledStatementAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group__1__Impl
	rule__LabeledStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabeledStatementAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LabeledStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabeledStatementAccess().getStatementAssignment_2()); }
	(rule__LabeledStatement__StatementAssignment_2)
	{ after(grammarAccess.getLabeledStatementAccess().getStatementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0()); }
	RULE_IF
	{ after(grammarAccess.getIfStatementAccess().getIFTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
	(rule__IfStatement__ConditionAssignment_2)
	{ after(grammarAccess.getIfStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__3__Impl
	rule__IfStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__4__Impl
	rule__IfStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getThenAssignment_4()); }
	(rule__IfStatement__ThenAssignment_4)
	{ after(grammarAccess.getIfStatementAccess().getThenAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getGroup_5()); }
	(rule__IfStatement__Group_5__0)?
	{ after(grammarAccess.getIfStatementAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__0__Impl
	rule__IfStatement__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getELSETerminalRuleCall_5_0()); }
	(RULE_ELSE)
	{ after(grammarAccess.getIfStatementAccess().getELSETerminalRuleCall_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatement__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementAccess().getElseAssignment_5_1()); }
	(rule__IfStatement__ElseAssignment_5_1)
	{ after(grammarAccess.getIfStatementAccess().getElseAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getSWITCHTerminalRuleCall_0()); }
	RULE_SWITCH
	{ after(grammarAccess.getSwitchStatementAccess().getSWITCHTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
	(rule__SwitchStatement__ExpressionAssignment_2)
	{ after(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getAlternatives_5()); }
	(rule__SwitchStatement__Alternatives_5)*
	{ after(grammarAccess.getSwitchStatementAccess().getAlternatives_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_5_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group_5_0__0__Impl
	rule__SwitchStatement__Group_5_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getCASETerminalRuleCall_5_0_0()); }
	RULE_CASE
	{ after(grammarAccess.getSwitchStatementAccess().getCASETerminalRuleCall_5_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group_5_0__1__Impl
	rule__SwitchStatement__Group_5_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getConstantsAssignment_5_0_1()); }
	(rule__SwitchStatement__ConstantsAssignment_5_0_1)
	{ after(grammarAccess.getSwitchStatementAccess().getConstantsAssignment_5_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group_5_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_0_2()); }
	':'
	{ after(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group_5_1__0__Impl
	rule__SwitchStatement__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getDEFAULTTerminalRuleCall_5_1_0()); }
	RULE_DEFAULT
	{ after(grammarAccess.getSwitchStatementAccess().getDEFAULTTerminalRuleCall_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SwitchStatement__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_1_1()); }
	':'
	{ after(grammarAccess.getSwitchStatementAccess().getColonKeyword_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0()); }
	RULE_WHILE
	{ after(grammarAccess.getWhileStatementAccess().getWHILETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
	(rule__WhileStatement__ConditionAssignment_2)
	{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementAccess().getStatementAssignment_4()); }
	(rule__WhileStatement__StatementAssignment_4)
	{ after(grammarAccess.getWhileStatementAccess().getStatementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getDOTerminalRuleCall_0()); }
	RULE_DO
	{ after(grammarAccess.getDoStatementAccess().getDOTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
	(rule__DoStatement__StatementAssignment_1)
	{ after(grammarAccess.getDoStatementAccess().getStatementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getWHILETerminalRuleCall_2()); }
	RULE_WHILE
	{ after(grammarAccess.getDoStatementAccess().getWHILETerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getConditionAssignment_4()); }
	(rule__DoStatement__ConditionAssignment_4)
	{ after(grammarAccess.getDoStatementAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0()); }
	RULE_FOR
	{ after(grammarAccess.getForStatementAccess().getFORTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getInitExprAssignment_2()); }
	(rule__ForStatement__InitExprAssignment_2)?
	{ after(grammarAccess.getForStatementAccess().getInitExprAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getConditionAssignment_4()); }
	(rule__ForStatement__ConditionAssignment_4)?
	{ after(grammarAccess.getForStatementAccess().getConditionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__5__Impl
	rule__ForStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getForStatementAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__6__Impl
	rule__ForStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getUpdateExprAssignment_6()); }
	(rule__ForStatement__UpdateExprAssignment_6)?
	{ after(grammarAccess.getForStatementAccess().getUpdateExprAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__7__Impl
	rule__ForStatement__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForStatement__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForStatementAccess().getStatementAssignment_8()); }
	(rule__ForStatement__StatementAssignment_8)
	{ after(grammarAccess.getForStatementAccess().getStatementAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForInit__Group_0__0__Impl
	rule__ForInit__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0()); }
	(rule__ForInit__ExpressionsAssignment_0_0)
	{ after(grammarAccess.getForInitAccess().getExpressionsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForInit__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForInitAccess().getGroup_0_1()); }
	(rule__ForInit__Group_0_1__0)*
	{ after(grammarAccess.getForInitAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForInit__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForInit__Group_0_1__0__Impl
	rule__ForInit__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForInitAccess().getCommaKeyword_0_1_0()); }
	(',')
	{ after(grammarAccess.getForInitAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForInit__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1()); }
	(rule__ForInit__ExpressionsAssignment_0_1_1)
	{ after(grammarAccess.getForInitAccess().getExpressionsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForUpdate__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForUpdate__Group__0__Impl
	rule__ForUpdate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForUpdateAccess().getExpressionsAssignment_0()); }
	(rule__ForUpdate__ExpressionsAssignment_0)
	{ after(grammarAccess.getForUpdateAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForUpdate__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForUpdateAccess().getGroup_1()); }
	(rule__ForUpdate__Group_1__0)*
	{ after(grammarAccess.getForUpdateAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ForUpdate__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForUpdate__Group_1__0__Impl
	rule__ForUpdate__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForUpdateAccess().getCommaKeyword_1_0()); }
	(',')
	{ after(grammarAccess.getForUpdateAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ForUpdate__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForUpdateAccess().getExpressionsAssignment_1_1()); }
	(rule__ForUpdate__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getForUpdateAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getBREAKTerminalRuleCall_0()); }
	RULE_BREAK
	{ after(grammarAccess.getBreakStatementAccess().getBREAKTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getReferenceAssignment_1()); }
	(rule__BreakStatement__ReferenceAssignment_1)?
	{ after(grammarAccess.getBreakStatementAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContinueStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__0__Impl
	rule__ContinueStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getCONTINUETerminalRuleCall_0()); }
	RULE_CONTINUE
	{ after(grammarAccess.getContinueStatementAccess().getCONTINUETerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__1__Impl
	rule__ContinueStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getReferenceAssignment_1()); }
	(rule__ContinueStatement__ReferenceAssignment_1)?
	{ after(grammarAccess.getContinueStatementAccess().getReferenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContinueStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getContinueStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0()); }
	RULE_RETURN
	{ after(grammarAccess.getReturnStatementAccess().getRETURNTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
	(rule__ReturnStatement__ExpressionAssignment_1)?
	{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ThrowsStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowsStatement__Group__0__Impl
	rule__ThrowsStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowsStatementAccess().getTHROWTerminalRuleCall_0()); }
	RULE_THROW
	{ after(grammarAccess.getThrowsStatementAccess().getTHROWTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowsStatement__Group__1__Impl
	rule__ThrowsStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowsStatementAccess().getExpressionAssignment_1()); }
	(rule__ThrowsStatement__ExpressionAssignment_1)
	{ after(grammarAccess.getThrowsStatementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ThrowsStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getThrowsStatementAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getThrowsStatementAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SynchronizedStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedStatement__Group__0__Impl
	rule__SynchronizedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedStatementAccess().getSYNCHRONIZEDTerminalRuleCall_0()); }
	RULE_SYNCHRONIZED
	{ after(grammarAccess.getSynchronizedStatementAccess().getSYNCHRONIZEDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedStatement__Group__1__Impl
	rule__SynchronizedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedStatementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSynchronizedStatementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedStatement__Group__2__Impl
	rule__SynchronizedStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedStatementAccess().getExpressionAssignment_2()); }
	(rule__SynchronizedStatement__ExpressionAssignment_2)
	{ after(grammarAccess.getSynchronizedStatementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedStatement__Group__3__Impl
	rule__SynchronizedStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedStatementAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSynchronizedStatementAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SynchronizedStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSynchronizedStatementAccess().getBodyAssignment_4()); }
	(rule__SynchronizedStatement__BodyAssignment_4)
	{ after(grammarAccess.getSynchronizedStatementAccess().getBodyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group__0__Impl
	rule__TryStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getTRYTerminalRuleCall_0()); }
	RULE_TRY
	{ after(grammarAccess.getTryStatementAccess().getTRYTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group__1__Impl
	rule__TryStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getTryBodyAssignment_1()); }
	(rule__TryStatement__TryBodyAssignment_1)
	{ after(grammarAccess.getTryStatementAccess().getTryBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group__2__Impl
	rule__TryStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getGroup_2()); }
	(rule__TryStatement__Group_2__0)*
	{ after(grammarAccess.getTryStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getGroup_3()); }
	(rule__TryStatement__Group_3__0)?
	{ after(grammarAccess.getTryStatementAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_2__0__Impl
	rule__TryStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getCATCHTerminalRuleCall_2_0()); }
	(RULE_CATCH)
	{ after(grammarAccess.getTryStatementAccess().getCATCHTerminalRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_2__1__Impl
	rule__TryStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getTryStatementAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_2__2__Impl
	rule__TryStatement__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getParamsAssignment_2_2()); }
	(rule__TryStatement__ParamsAssignment_2_2)
	{ after(grammarAccess.getTryStatementAccess().getParamsAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_2__3__Impl
	rule__TryStatement__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getTryStatementAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getCatchesBodyAssignment_2_4()); }
	(rule__TryStatement__CatchesBodyAssignment_2_4)
	{ after(grammarAccess.getTryStatementAccess().getCatchesBodyAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TryStatement__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_3__0__Impl
	rule__TryStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getFINALLYTerminalRuleCall_3_0()); }
	(RULE_FINALLY)
	{ after(grammarAccess.getTryStatementAccess().getFINALLYTerminalRuleCall_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TryStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTryStatementAccess().getFinallyBodyAssignment_3_1()); }
	(rule__TryStatement__FinallyBodyAssignment_3_1)
	{ after(grammarAccess.getTryStatementAccess().getFinallyBodyAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getObjectAssignment_0()); }
	(rule__Assignment__ObjectAssignment_0)
	{ after(grammarAccess.getAssignmentAccess().getObjectAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getOperatorAssignment_1()); }
	(rule__Assignment__OperatorAssignment_1)
	{ after(grammarAccess.getAssignmentAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
	(rule__Assignment__ValueAssignment_2)
	{ after(grammarAccess.getAssignmentAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_0()); }
	(rule__ConditionalExpression__ConditionAssignment_0)
	{ after(grammarAccess.getConditionalExpressionAccess().getConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
	(rule__ConditionalExpression__Group_1__0)?
	{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0()); }
	('?')
	{ after(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getThenAssignment_1_1()); }
	(rule__ConditionalExpression__ThenAssignment_1_1)
	{ after(grammarAccess.getConditionalExpressionAccess().getThenAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
	':'
	{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalExpressionAccess().getElseAssignment_1_3()); }
	(rule__ConditionalExpression__ElseAssignment_1_3)
	{ after(grammarAccess.getConditionalExpressionAccess().getElseAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_0()); }
	(rule__ConditionalOrExpression__OperandsAssignment_0)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
	(rule__ConditionalOrExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__ConditionalOrExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__ConditionalOrExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_0()); }
	(rule__ConditionalAndExpression__OperandsAssignment_0)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
	(rule__ConditionalAndExpression__Group_1__0)*
	{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__ConditionalAndExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionalAndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__ConditionalAndExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group__0__Impl
	rule__InclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_0()); }
	(rule__InclusiveOrExpression__OperandsAssignment_0)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
	(rule__InclusiveOrExpression__Group_1__0)*
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1__0__Impl
	rule__InclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__InclusiveOrExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InclusiveOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__InclusiveOrExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group__0__Impl
	rule__ExclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_0()); }
	(rule__ExclusiveOrExpression__OperandsAssignment_0)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
	(rule__ExclusiveOrExpression__Group_1__0)*
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1__0__Impl
	rule__ExclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__ExclusiveOrExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExclusiveOrExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__ExclusiveOrExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperandsAssignment_0()); }
	(rule__AndExpression__OperandsAssignment_0)
	{ after(grammarAccess.getAndExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
	(rule__AndExpression__Group_1__0)*
	{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__AndExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getAndExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__AndExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getAndExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_0()); }
	(rule__EqualityExpression__OperandsAssignment_0)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
	(rule__EqualityExpression__Group_1__0)*
	{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__EqualityExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EqualityExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__EqualityExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getEqualityExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_0()); }
	(rule__RelationalExpression__OperandsAssignment_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getAlternatives_1()); }
	(rule__RelationalExpression__Alternatives_1)*
	{ after(grammarAccess.getRelationalExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
	(rule__RelationalExpression__Group_1_0_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__0__Impl
	rule__RelationalExpression__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_0_0_0()); }
	(rule__RelationalExpression__OperatorsAssignment_1_0_0_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_1_0_0_1()); }
	(rule__RelationalExpression__OperandsAssignment_1_0_0_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperandsAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
	(rule__RelationalExpression__Group_1_1_0__0)
	{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_1_0__0__Impl
	rule__RelationalExpression__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_1_0_0()); }
	(rule__RelationalExpression__OperatorsAssignment_1_1_0_0)
	{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsAssignment_1_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationalExpression__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationalExpressionAccess().getClassesAssignment_1_1_0_1()); }
	(rule__RelationalExpression__ClassesAssignment_1_1_0_1)
	{ after(grammarAccess.getRelationalExpressionAccess().getClassesAssignment_1_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_0()); }
	(rule__ShiftExpression__OperandsAssignment_0)
	{ after(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
	(rule__ShiftExpression__Group_1__0)*
	{ after(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__0__Impl
	rule__ShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__ShiftExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getShiftExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShiftExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__ShiftExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getShiftExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0()); }
	(rule__AdditiveExpression__OperandsAssignment_0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
	(rule__AdditiveExpression__Group_1__0)*
	{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__AdditiveExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AdditiveExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__AdditiveExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0()); }
	(rule__MultiplicativeExpression__OperandsAssignment_0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
	(rule__MultiplicativeExpression__Group_1__0)*
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0()); }
	(rule__MultiplicativeExpression__OperatorsAssignment_1_0)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultiplicativeExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1()); }
	(rule__MultiplicativeExpression__OperandsAssignment_1_1)
	{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_0__0__Impl
	rule__CastExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0_0()); }
	('(')
	{ after(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_0__1__Impl
	rule__CastExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getTypeAssignment_0_1()); }
	(rule__CastExpression__TypeAssignment_0_1)
	{ after(grammarAccess.getCastExpressionAccess().getTypeAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_0__2__Impl
	rule__CastExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getOperandAssignment_0_3()); }
	(rule__CastExpression__OperandAssignment_0_3)
	{ after(grammarAccess.getCastExpressionAccess().getOperandAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__0__Impl
	rule__CastExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); }
	('(')
	{ after(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__1__Impl
	rule__CastExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
	(rule__CastExpression__TypeAssignment_1_1)
	{ after(grammarAccess.getCastExpressionAccess().getTypeAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__2__Impl
	rule__CastExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CastExpression__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCastExpressionAccess().getOperandAssignment_1_3()); }
	(rule__CastExpression__OperandAssignment_1_3)
	{ after(grammarAccess.getCastExpressionAccess().getOperandAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoArrayExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpression__Group_2__0__Impl
	rule__NoArrayExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_2_0()); }
	(rule__NoArrayExpression__OperatorAssignment_2_0)
	{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_2_1()); }
	(rule__NoArrayExpression__OperandAssignment_2_1)
	{ after(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoArrayExpression__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpression__Group_3__0__Impl
	rule__NoArrayExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_3_0()); }
	(rule__NoArrayExpression__OperatorAssignment_3_0)
	{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_3_1()); }
	(rule__NoArrayExpression__OperandAssignment_3_1)
	{ after(grammarAccess.getNoArrayExpressionAccess().getOperandAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreDecrementExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDecrementExpression__Group__0__Impl
	rule__PreDecrementExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDecrementExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDecrementExpressionAccess().getOperatorAssignment_0()); }
	(rule__PreDecrementExpression__OperatorAssignment_0)
	{ after(grammarAccess.getPreDecrementExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDecrementExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreDecrementExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDecrementExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreDecrementExpressionAccess().getOperandAssignment_1()); }
	(rule__PreDecrementExpression__OperandAssignment_1)
	{ after(grammarAccess.getPreDecrementExpressionAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PreIncrementExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreIncrementExpression__Group__0__Impl
	rule__PreIncrementExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreIncrementExpressionAccess().getOperatorAssignment_0()); }
	(rule__PreIncrementExpression__OperatorAssignment_0)
	{ after(grammarAccess.getPreIncrementExpressionAccess().getOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PreIncrementExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPreIncrementExpressionAccess().getOperandAssignment_1()); }
	(rule__PreIncrementExpression__OperandAssignment_1)
	{ after(grammarAccess.getPreIncrementExpressionAccess().getOperandAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoArrayExpressionWithoutMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpressionWithoutMinus__Group_1__0__Impl
	rule__NoArrayExpressionWithoutMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_1_0()); }
	(rule__NoArrayExpressionWithoutMinus__OperatorAssignment_1_0)
	{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpressionWithoutMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_1_1()); }
	(rule__NoArrayExpressionWithoutMinus__OperandAssignment_1_1)
	{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NoArrayExpressionWithoutMinus__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpressionWithoutMinus__Group_2__0__Impl
	rule__NoArrayExpressionWithoutMinus__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_2_0()); }
	(rule__NoArrayExpressionWithoutMinus__OperatorAssignment_2_0)
	{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NoArrayExpressionWithoutMinus__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_2_1()); }
	(rule__NoArrayExpressionWithoutMinus__OperandAssignment_2_1)
	{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getAlternatives_0()); }
	(rule__PostfixExpression__Alternatives_0)
	{ after(grammarAccess.getPostfixExpressionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPostfixExpressionAccess().getOperatorsAssignment_1()); }
	(rule__PostfixExpression__OperatorsAssignment_1)*
	{ after(grammarAccess.getPostfixExpressionAccess().getOperatorsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_0__0__Impl
	rule__MethodInvocation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0_0()); }
	(rule__MethodInvocation__MethodAssignment_0_0)
	{ after(grammarAccess.getMethodInvocationAccess().getMethodAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_0__1__Impl
	rule__MethodInvocation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_0_1()); }
	'('
	{ after(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_0__2__Impl
	rule__MethodInvocation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getArgsAssignment_0_2()); }
	(rule__MethodInvocation__ArgsAssignment_0_2)?
	{ after(grammarAccess.getMethodInvocationAccess().getArgsAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_0_3()); }
	')'
	{ after(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getGroup_1_0()); }
	(rule__MethodInvocation__Group_1_0__0)
	{ after(grammarAccess.getMethodInvocationAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__0__Impl
	rule__MethodInvocation__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getObjectAssignment_1_0_0()); }
	(rule__MethodInvocation__ObjectAssignment_1_0_0)
	{ after(grammarAccess.getMethodInvocationAccess().getObjectAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__1__Impl
	rule__MethodInvocation__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getMethodInvocationAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__2__Impl
	rule__MethodInvocation__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getMethodAssignment_1_0_2()); }
	(rule__MethodInvocation__MethodAssignment_1_0_2)
	{ after(grammarAccess.getMethodInvocationAccess().getMethodAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__3__Impl
	rule__MethodInvocation__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1_0_3()); }
	'('
	{ after(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_1_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__4__Impl
	rule__MethodInvocation__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getArgsAssignment_1_0_4()); }
	(rule__MethodInvocation__ArgsAssignment_1_0_4)?
	{ after(grammarAccess.getMethodInvocationAccess().getArgsAssignment_1_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_1_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_1_0_5()); }
	')'
	{ after(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_1_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getGroup_2_0()); }
	(rule__MethodInvocation__Group_2_0__0)
	{ after(grammarAccess.getMethodInvocationAccess().getGroup_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodInvocation__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__0__Impl
	rule__MethodInvocation__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getKeywordAssignment_2_0_0()); }
	(rule__MethodInvocation__KeywordAssignment_2_0_0)
	{ after(grammarAccess.getMethodInvocationAccess().getKeywordAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__1__Impl
	rule__MethodInvocation__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getFullStopKeyword_2_0_1()); }
	'.'
	{ after(grammarAccess.getMethodInvocationAccess().getFullStopKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__2__Impl
	rule__MethodInvocation__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getMethodAssignment_2_0_2()); }
	(rule__MethodInvocation__MethodAssignment_2_0_2)
	{ after(grammarAccess.getMethodInvocationAccess().getMethodAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__3__Impl
	rule__MethodInvocation__Group_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_2_0_3()); }
	'('
	{ after(grammarAccess.getMethodInvocationAccess().getLeftParenthesisKeyword_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__4__Impl
	rule__MethodInvocation__Group_2_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getArgsAssignment_2_0_4()); }
	(rule__MethodInvocation__ArgsAssignment_2_0_4)?
	{ after(grammarAccess.getMethodInvocationAccess().getArgsAssignment_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodInvocation__Group_2_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__Group_2_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_2_0_5()); }
	')'
	{ after(grammarAccess.getMethodInvocationAccess().getRightParenthesisKeyword_2_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccess__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_0__0__Impl
	rule__FieldAccess__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getObjectAssignment_0_0()); }
	(rule__FieldAccess__ObjectAssignment_0_0)
	{ after(grammarAccess.getFieldAccessAccess().getObjectAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_0__1__Impl
	rule__FieldAccess__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getFieldAccessAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getFieldAssignment_0_2()); }
	(rule__FieldAccess__FieldAssignment_0_2)
	{ after(grammarAccess.getFieldAccessAccess().getFieldAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccess__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getGroup_1_0()); }
	(rule__FieldAccess__Group_1_0__0)
	{ after(grammarAccess.getFieldAccessAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldAccess__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_1_0__0__Impl
	rule__FieldAccess__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getKeywordAssignment_1_0_0()); }
	(rule__FieldAccess__KeywordAssignment_1_0_0)
	{ after(grammarAccess.getFieldAccessAccess().getKeywordAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_1_0__1__Impl
	rule__FieldAccess__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getFullStopKeyword_1_0_1()); }
	'.'
	{ after(grammarAccess.getFieldAccessAccess().getFullStopKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldAccess__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldAccessAccess().getFieldAssignment_1_0_2()); }
	(rule__FieldAccess__FieldAssignment_1_0_2)
	{ after(grammarAccess.getFieldAccessAccess().getFieldAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group__0__Impl
	rule__PrimaryNoNewArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_0()); }
	(rule__PrimaryNoNewArray__Alternatives_0)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1()); }
	(rule__PrimaryNoNewArray__Group_1__0)*
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_2__0__Impl
	rule__PrimaryNoNewArray__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_2__1__Impl
	rule__PrimaryNoNewArray__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getExpressionParserRuleCall_0_2_1()); }
	ruleExpression
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getExpressionParserRuleCall_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_0_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_5__0__Impl
	rule__PrimaryNoNewArray__Group_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getMethodAssignment_0_5_0()); }
	(rule__PrimaryNoNewArray__MethodAssignment_0_5_0)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getMethodAssignment_0_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_5__1__Impl
	rule__PrimaryNoNewArray__Group_0_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_5_1()); }
	'('
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_0_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_5__2__Impl
	rule__PrimaryNoNewArray__Group_0_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_0_5_2()); }
	(rule__PrimaryNoNewArray__ArgsAssignment_0_5_2)?
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_0_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_5_3()); }
	')'
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_0_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_0_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_6__0__Impl
	rule__PrimaryNoNewArray__Group_0_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceAssignment_0_6_0()); }
	(rule__PrimaryNoNewArray__ReferenceAssignment_0_6_0)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceAssignment_0_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_0_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_0_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_0_6_1()); }
	(rule__PrimaryNoNewArray__DimensionsAssignment_0_6_1)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsAssignment_0_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_1_0()); }
	(rule__PrimaryNoNewArray__Alternatives_1_0)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0__0__Impl
	rule__PrimaryNoNewArray__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getFullStopKeyword_1_0_0_0()); }
	'.'
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getFullStopKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0__1__Impl
	rule__PrimaryNoNewArray__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getFieldsAssignment_1_0_0_1()); }
	(rule__PrimaryNoNewArray__FieldsAssignment_1_0_0_1)
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getFieldsAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0_2()); }
	(rule__PrimaryNoNewArray__Group_1_0_0_2__0)?
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getGroup_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNoNewArray__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0_2__0__Impl
	rule__PrimaryNoNewArray__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0_2__1__Impl
	rule__PrimaryNoNewArray__Group_1_0_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_1_0_0_2_1()); }
	(rule__PrimaryNoNewArray__ArgsAssignment_1_0_0_2_1)?
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getArgsAssignment_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNoNewArray__Group_1_0_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__Group_1_0_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryNoNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNewArray__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group__0__Impl
	rule__PrimaryNewArray__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getArrayAssignment_0()); }
	(rule__PrimaryNewArray__ArrayAssignment_0)
	{ after(grammarAccess.getPrimaryNewArrayAccess().getArrayAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getGroup_1()); }
	(rule__PrimaryNewArray__Group_1__0)*
	{ after(grammarAccess.getPrimaryNewArrayAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNewArray__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getAlternatives_1_0()); }
	(rule__PrimaryNewArray__Alternatives_1_0)
	{ after(grammarAccess.getPrimaryNewArrayAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNewArray__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0__0__Impl
	rule__PrimaryNewArray__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getFullStopKeyword_1_0_0_0()); }
	'.'
	{ after(grammarAccess.getPrimaryNewArrayAccess().getFullStopKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0__1__Impl
	rule__PrimaryNewArray__Group_1_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getFieldsAssignment_1_0_0_1()); }
	(rule__PrimaryNewArray__FieldsAssignment_1_0_0_1)
	{ after(grammarAccess.getPrimaryNewArrayAccess().getFieldsAssignment_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0_2()); }
	(rule__PrimaryNewArray__Group_1_0_0_2__0)?
	{ after(grammarAccess.getPrimaryNewArrayAccess().getGroup_1_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryNewArray__Group_1_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0_2__0__Impl
	rule__PrimaryNewArray__Group_1_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0()); }
	'('
	{ after(grammarAccess.getPrimaryNewArrayAccess().getLeftParenthesisKeyword_1_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0_2__1__Impl
	rule__PrimaryNewArray__Group_1_0_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getArgsAssignment_1_0_0_2_1()); }
	(rule__PrimaryNewArray__ArgsAssignment_1_0_0_2_1)?
	{ after(grammarAccess.getPrimaryNewArrayAccess().getArgsAssignment_1_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrimaryNewArray__Group_1_0_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__Group_1_0_0_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimaryNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2()); }
	')'
	{ after(grammarAccess.getPrimaryNewArrayAccess().getRightParenthesisKeyword_1_0_0_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassInstanceCreationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassInstanceCreationExpression__Group__0__Impl
	rule__ClassInstanceCreationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getNEWTerminalRuleCall_0()); }
	RULE_NEW
	{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getNEWTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassInstanceCreationExpression__Group__1__Impl
	rule__ClassInstanceCreationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1()); }
	(rule__ClassInstanceCreationExpression__TypeAssignment_1)
	{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassInstanceCreationExpression__Group__2__Impl
	rule__ClassInstanceCreationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassInstanceCreationExpression__Group__3__Impl
	rule__ClassInstanceCreationExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsAssignment_3()); }
	(rule__ClassInstanceCreationExpression__ArgsAssignment_3)?
	{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassInstanceCreationExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__0__Impl
	rule__ArgumentList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_0()); }
	(rule__ArgumentList__DeclarationsAssignment_0)
	{ after(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getGroup_1()); }
	(rule__ArgumentList__Group_1__0)*
	{ after(grammarAccess.getArgumentListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArgumentList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__0__Impl
	rule__ArgumentList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
	(',')
	{ after(grammarAccess.getArgumentListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArgumentList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_1_1()); }
	(rule__ArgumentList__DeclarationsAssignment_1_1)
	{ after(grammarAccess.getArgumentListAccess().getDeclarationsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayCreationExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCreationExpression__Group__0__Impl
	rule__ArrayCreationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCreationExpressionAccess().getNEWTerminalRuleCall_0()); }
	RULE_NEW
	{ after(grammarAccess.getArrayCreationExpressionAccess().getNEWTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCreationExpression__Group__1__Impl
	rule__ArrayCreationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCreationExpressionAccess().getAlternatives_1()); }
	(rule__ArrayCreationExpression__Alternatives_1)
	{ after(grammarAccess.getArrayCreationExpressionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCreationExpression__Group__2__Impl
	rule__ArrayCreationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getDimensionsAssignment_2()); }
		(rule__ArrayCreationExpression__DimensionsAssignment_2)
		{ after(grammarAccess.getArrayCreationExpressionAccess().getDimensionsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getDimensionsAssignment_2()); }
		(rule__ArrayCreationExpression__DimensionsAssignment_2)*
		{ after(grammarAccess.getArrayCreationExpressionAccess().getDimensionsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayCreationExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCreationExpressionAccess().getLayersAssignment_3()); }
	(rule__ArrayCreationExpression__LayersAssignment_3)*
	{ after(grammarAccess.getArrayCreationExpressionAccess().getLayersAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayExpression__Group__0__Impl
	rule__ArrayExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayExpressionAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayExpressionAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayExpression__Group__1__Impl
	rule__ArrayExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayExpressionAccess().getIndexAssignment_1()); }
	(rule__ArrayExpression__IndexAssignment_1)
	{ after(grammarAccess.getArrayExpressionAccess().getIndexAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayExpressionAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayExpressionAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayAccess__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayAccess__Group__0__Impl
	rule__ArrayAccess__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccessAccess().getAlternatives_0()); }
	(rule__ArrayAccess__Alternatives_0)
	{ after(grammarAccess.getArrayAccessAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayAccess__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccessAccess().getFieldAssignment_1()); }
	(rule__ArrayAccess__FieldAssignment_1)
	{ after(grammarAccess.getArrayAccessAccess().getFieldAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageName__Group__0__Impl
	rule__PackageName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageNameAccess().getGroup_1()); }
	(rule__PackageName__Group_1__0)*
	{ after(grammarAccess.getPackageNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageName__Group_1__0__Impl
	rule__PackageName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageNameAccess().getFullStopKeyword_1_0()); }
	('.')
	{ after(grammarAccess.getPackageNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getPackageNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__0__Impl
	rule__TypeName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getGroup_1()); }
	(rule__TypeName__Group_1__0)*
	{ after(grammarAccess.getTypeNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__0__Impl
	rule__TypeName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getFullStopKeyword_1_0()); }
	('.')
	{ after(grammarAccess.getTypeNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getTypeNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionName__Group__0__Impl
	rule__ExpressionName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNameAccess().getGroup_1()); }
	(rule__ExpressionName__Group_1__0)*
	{ after(grammarAccess.getExpressionNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionName__Group_1__0__Impl
	rule__ExpressionName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNameAccess().getFullStopKeyword_1_0()); }
	('.')
	{ after(grammarAccess.getExpressionNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExpressionName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getExpressionNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodName__Group__0__Impl
	rule__MethodName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodNameAccess().getGroup_1()); }
	(rule__MethodName__Group_1__0)*
	{ after(grammarAccess.getMethodNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodName__Group_1__0__Impl
	rule__MethodName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodNameAccess().getFullStopKeyword_1_0()); }
	('.')
	{ after(grammarAccess.getMethodNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getMethodNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__0__Impl
	rule__IntegerLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives_0()); }
	(rule__IntegerLiteral__Alternatives_0)
	{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntegerLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntegerLiteralAccess().getAlternatives_1()); }
	(rule__IntegerLiteral__Alternatives_1)?
	{ after(grammarAccess.getIntegerLiteralAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group__0__Impl
	rule__FloatingLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getAlternatives_0()); }
	(rule__FloatingLiteral__Alternatives_0)
	{ after(grammarAccess.getFloatingLiteralAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getFLOAT_PART_COMPLEMENTTerminalRuleCall_1()); }
	RULE_FLOAT_PART_COMPLEMENT
	{ after(grammarAccess.getFloatingLiteralAccess().getFLOAT_PART_COMPLEMENTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingLiteral__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group_0_0__0__Impl
	rule__FloatingLiteral__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_0()); }
	RULE_DECIMAL_NUMERAL
	{ after(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group_0_0__1__Impl
	rule__FloatingLiteral__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_0_1()); }
	'.'
	{ after(grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_2()); }
	(RULE_DECIMAL_NUMERAL)*
	{ after(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatingLiteral__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group_0_1__0__Impl
	rule__FloatingLiteral__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_1_0()); }
	'.'
	{ after(grammarAccess.getFloatingLiteralAccess().getFullStopKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatingLiteral__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatingLiteral__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_1_1()); }
	RULE_DECIMAL_NUMERAL
	{ after(grammarAccess.getFloatingLiteralAccess().getDECIMAL_NUMERALTerminalRuleCall_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Head__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeadAccess().getProgramCompilationUnitParserRuleCall_0()); }
		ruleCompilationUnit
		{ after(grammarAccess.getHeadAccess().getProgramCompilationUnitParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilationUnitAccess().getPackagePackageStatementParserRuleCall_0_0()); }
		rulePackageStatement
		{ after(grammarAccess.getCompilationUnitAccess().getPackagePackageStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilationUnitAccess().getImportsImportStatementParserRuleCall_1_0()); }
		ruleImportStatement
		{ after(grammarAccess.getCompilationUnitAccess().getImportsImportStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompilationUnit__TypeDeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsTypeDeclarationParserRuleCall_2_0()); }
		ruleTypeDeclaration
		{ after(grammarAccess.getCompilationUnitAccess().getTypeDeclarationsTypeDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageStatementAccess().getNamePackageNameParserRuleCall_1_0()); }
		rulePackageName
		{ after(grammarAccess.getPackageStatementAccess().getNamePackageNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__PackageAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getPackagePackageNameParserRuleCall_1_0_0_0()); }
		rulePackageName
		{ after(grammarAccess.getImportStatementAccess().getPackagePackageNameParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportStatement__ObjectAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportStatementAccess().getObjectTypeNameParserRuleCall_1_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getImportStatementAccess().getObjectTypeNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__DocAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0()); }
		RULE_DOC_COMMENT
		{ after(grammarAccess.getTypeDeclarationAccess().getDocDOC_COMMENTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__NameAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameClassDeclarationParserRuleCall_1_0_0()); }
		ruleClassDeclaration
		{ after(grammarAccess.getTypeDeclarationAccess().getNameClassDeclarationParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDeclaration__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDeclarationAccess().getNameInterfaceDeclarationParserRuleCall_1_1_0()); }
		ruleInterfaceDeclaration
		{ after(grammarAccess.getTypeDeclarationAccess().getNameInterfaceDeclarationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getModifiersClassModifierParserRuleCall_0_0()); }
		ruleClassModifier
		{ after(grammarAccess.getClassDeclarationAccess().getModifiersClassModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ClassNameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getClassDeclarationAccess().getClassNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ExtendAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getExtendClassTypeParserRuleCall_3_1_0()); }
		ruleClassType
		{ after(grammarAccess.getClassDeclarationAccess().getExtendClassTypeParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__ImplementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getImplementsInterfacesParserRuleCall_4_0()); }
		ruleInterfaces
		{ after(grammarAccess.getClassDeclarationAccess().getImplementsInterfacesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__BodyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclarationAccess().getBodyClassBodyParserRuleCall_5_0()); }
		ruleClassBody
		{ after(grammarAccess.getClassDeclarationAccess().getBodyClassBodyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAccess().getKeywordIMPLEMENTSTerminalRuleCall_0_0()); }
		RULE_IMPLEMENTS
		{ after(grammarAccess.getInterfacesAccess().getKeywordIMPLEMENTSTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__InterfacesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0()); }
		ruleInterfaceType
		{ after(grammarAccess.getInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Interfaces__InterfacesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfacesAccess().getInterfacesIntegralTypeParserRuleCall_2_1_0()); }
		ruleIntegralType
		{ after(grammarAccess.getInterfacesAccess().getInterfacesIntegralTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBody__DeclarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyAccess().getDeclarationsClassBodyDeclarationParserRuleCall_1_0()); }
		ruleClassBodyDeclaration
		{ after(grammarAccess.getClassBodyAccess().getDeclarationsClassBodyDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassBodyDeclaration__MemberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassBodyDeclarationAccess().getMemberClassMemberDeclarationParserRuleCall_0_0()); }
		ruleClassMemberDeclaration
		{ after(grammarAccess.getClassBodyDeclarationAccess().getMemberClassMemberDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__FieldAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassMemberDeclarationAccess().getFieldFieldDeclarationParserRuleCall_0_0()); }
		ruleFieldDeclaration
		{ after(grammarAccess.getClassMemberDeclarationAccess().getFieldFieldDeclarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDeclaration__MethodAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassMemberDeclarationAccess().getMethodMethodDeclarationParserRuleCall_1_0()); }
		ruleMethodDeclaration
		{ after(grammarAccess.getClassMemberDeclarationAccess().getMethodMethodDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StaticInitializer__CodeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStaticInitializerAccess().getCodeBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getStaticInitializerAccess().getCodeBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclarationAccess().getModifiersConstructorModifierParserRuleCall_0_0()); }
		ruleConstructorModifier
		{ after(grammarAccess.getConstructorDeclarationAccess().getModifiersConstructorModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__HeaderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclarationAccess().getHeaderConstructorDeclaratorParserRuleCall_1_0()); }
		ruleConstructorDeclarator
		{ after(grammarAccess.getConstructorDeclarationAccess().getHeaderConstructorDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__ThrowsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclarationAccess().getThrowsExceptionsParserRuleCall_2_0()); }
		ruleExceptions
		{ after(grammarAccess.getConstructorDeclarationAccess().getThrowsExceptionsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclaration__BodyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclarationAccess().getBodyConstructorBodyParserRuleCall_3_0()); }
		ruleConstructorBody
		{ after(grammarAccess.getConstructorDeclarationAccess().getBodyConstructorBodyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclaratorAccess().getNameSimpleTypeNameParserRuleCall_0_0()); }
		ruleSimpleTypeName
		{ after(grammarAccess.getConstructorDeclaratorAccess().getNameSimpleTypeNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__ParamsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0()); }
		ruleFormalParameter
		{ after(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorDeclarator__ParamsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0()); }
		ruleFormalParameter
		{ after(grammarAccess.getConstructorDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalParameterAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getFormalParameterAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormalParameterAccess().getVariableVariableDeclaratorIdParserRuleCall_1_0()); }
		ruleVariableDeclaratorId
		{ after(grammarAccess.getFormalParameterAccess().getVariableVariableDeclaratorIdParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__ExceptionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_1_0()); }
		ruleClassType
		{ after(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exceptions__ExceptionsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_2_1_0()); }
		ruleClassType
		{ after(grammarAccess.getExceptionsAccess().getExceptionsClassTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__InvocationAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorBodyAccess().getInvocationExplicitConstructorInvocationParserRuleCall_1_0()); }
		ruleExplicitConstructorInvocation
		{ after(grammarAccess.getConstructorBodyAccess().getInvocationExplicitConstructorInvocationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorBody__DeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstructorBodyAccess().getDeclarationsBlockStatementParserRuleCall_2_0()); }
		ruleBlockStatement
		{ after(grammarAccess.getConstructorBodyAccess().getDeclarationsBlockStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__KeywordAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordTHISTerminalRuleCall_0_0_0()); }
		RULE_THIS
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordTHISTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__ArgsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__KeywordAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordSUPERTerminalRuleCall_1_0_0()); }
		RULE_SUPER
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getKeywordSUPERTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExplicitConstructorInvocation__ArgsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_1_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getExplicitConstructorInvocationAccess().getArgsArgumentListParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getModifiersFieldModifierParserRuleCall_0_0()); }
		ruleFieldModifier
		{ after(grammarAccess.getFieldDeclarationAccess().getModifiersFieldModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getFieldDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__VariablesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_0()); }
		ruleVariableDeclarator
		{ after(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldDeclaration__VariablesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_3_1_0()); }
		ruleVariableDeclarator
		{ after(grammarAccess.getFieldDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclaratorAccess().getNameVariableDeclaratorIdParserRuleCall_0_0()); }
		ruleVariableDeclaratorId
		{ after(grammarAccess.getVariableDeclaratorAccess().getNameVariableDeclaratorIdParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclarator__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclaratorAccess().getValueVariableInitializerParserRuleCall_1_1_0()); }
		ruleVariableInitializer
		{ after(grammarAccess.getVariableDeclaratorAccess().getValueVariableInitializerParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableInitializer__ExpAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableInitializerAccess().getExpExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getVariableInitializerAccess().getExpExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__SignatureAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getSignatureMethodHeaderParserRuleCall_0_0()); }
		ruleMethodHeader
		{ after(grammarAccess.getMethodDeclarationAccess().getSignatureMethodHeaderParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclaration__BodyAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclarationAccess().getBodyBlockParserRuleCall_1_0_0()); }
		ruleBlock
		{ after(grammarAccess.getMethodDeclarationAccess().getBodyBlockParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodHeaderAccess().getModifiersMethodModifierParserRuleCall_0_0()); }
		ruleMethodModifier
		{ after(grammarAccess.getMethodHeaderAccess().getModifiersMethodModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodHeaderAccess().getReturnTypeResultTypeParserRuleCall_1_0()); }
		ruleResultType
		{ after(grammarAccess.getMethodHeaderAccess().getReturnTypeResultTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__HeaderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodHeaderAccess().getHeaderMethodDeclaratorParserRuleCall_2_0()); }
		ruleMethodDeclarator
		{ after(grammarAccess.getMethodHeaderAccess().getHeaderMethodDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodHeader__ThrowsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodHeaderAccess().getThrowsExceptionsParserRuleCall_3_0()); }
		ruleExceptions
		{ after(grammarAccess.getMethodHeaderAccess().getThrowsExceptionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultTypeAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getResultTypeAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclaratorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodDeclaratorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__ParamsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0()); }
		ruleFormalParameter
		{ after(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDeclarator__ParamsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0()); }
		ruleFormalParameter
		{ after(grammarAccess.getMethodDeclaratorAccess().getParamsFormalParameterParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getModifiersInterfaceModifierParserRuleCall_0_0()); }
		ruleInterfaceModifier
		{ after(grammarAccess.getInterfaceDeclarationAccess().getModifiersInterfaceModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInterfaceDeclarationAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__ExtendsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getExtendsExtendsInterfacesParserRuleCall_3_0()); }
		ruleExtendsInterfaces
		{ after(grammarAccess.getInterfaceDeclarationAccess().getExtendsExtendsInterfacesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceDeclarationAccess().getBodyInterfaceBodyParserRuleCall_4_0()); }
		ruleInterfaceBody
		{ after(grammarAccess.getInterfaceDeclarationAccess().getBodyInterfaceBodyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__KeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsInterfacesAccess().getKeywordEXTENDSTerminalRuleCall_0_0()); }
		RULE_EXTENDS
		{ after(grammarAccess.getExtendsInterfacesAccess().getKeywordEXTENDSTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__InterfacesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0()); }
		ruleInterfaceType
		{ after(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendsInterfaces__InterfacesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_2_1_0()); }
		ruleInterfaceType
		{ after(grammarAccess.getExtendsInterfacesAccess().getInterfacesInterfaceTypeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceBody__DeclarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInterfaceBodyAccess().getDeclarationsInterfaceMemberDeclarationParserRuleCall_1_0()); }
		ruleInterfaceMemberDeclaration
		{ after(grammarAccess.getInterfaceBodyAccess().getDeclarationsInterfaceMemberDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclarationAccess().getModifiersConstantModifiersParserRuleCall_0_0()); }
		ruleConstantModifiers
		{ after(grammarAccess.getConstantDeclarationAccess().getModifiersConstantModifiersParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getConstantDeclarationAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDeclaration__ConstantAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantDeclarationAccess().getConstantVariableDeclaratorParserRuleCall_2_0()); }
		ruleVariableDeclarator
		{ after(grammarAccess.getConstantDeclarationAccess().getConstantVariableDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__ModifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAbstractMethodModifierParserRuleCall_0_0()); }
		ruleAbstractMethodModifier
		{ after(grammarAccess.getAbstractMethodDeclarationAccess().getModifiersAbstractMethodModifierParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__ReturnTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeResultTypeParserRuleCall_1_0()); }
		ruleResultType
		{ after(grammarAccess.getAbstractMethodDeclarationAccess().getReturnTypeResultTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__HeaderAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderMethodDeclaratorParserRuleCall_2_0()); }
		ruleMethodDeclarator
		{ after(grammarAccess.getAbstractMethodDeclarationAccess().getHeaderMethodDeclaratorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMethodDeclaration__ThrowsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsExceptionsParserRuleCall_3_0()); }
		ruleExceptions
		{ after(grammarAccess.getAbstractMethodDeclarationAccess().getThrowsExceptionsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__ValuesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_0_0()); }
		ruleVariableInitializer
		{ after(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayInitializer__ValuesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_1_1_0()); }
		ruleVariableInitializer
		{ after(grammarAccess.getArrayInitializerAccess().getValuesVariableInitializerParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNamePrimitiveTypeParserRuleCall_0_0_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getTypeAccess().getNamePrimitiveTypeParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameReferenceTypeParserRuleCall_0_1_0()); }
		ruleReferenceType
		{ after(grammarAccess.getTypeAccess().getNameReferenceTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__DeclarationsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getDeclarationsBlockStatementParserRuleCall_1_0()); }
		ruleBlockStatement
		{ after(grammarAccess.getBlockAccess().getDeclarationsBlockStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getLocalVariableDeclarationAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__VariablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_1_0()); }
		ruleVariableDeclarator
		{ after(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariableDeclaration__VariablesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_1_0()); }
		ruleVariableDeclarator
		{ after(grammarAccess.getLocalVariableDeclarationAccess().getVariablesVariableDeclaratorParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getLabelIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLabeledStatementAccess().getLabelIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LabeledStatement__StatementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabeledStatementAccess().getStatementStatementParserRuleCall_2_0()); }
		ruleStatement
		{ after(grammarAccess.getLabeledStatementAccess().getStatementStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getIfStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ThenAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getThenStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__ElseAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementAccess().getElseStatementParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__ConstantsAssignment_5_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getConstantsConstantExpressionParserRuleCall_5_0_1_0()); }
		ruleConstantExpression
		{ after(grammarAccess.getSwitchStatementAccess().getConstantsConstantExpressionParserRuleCall_5_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__StatementsAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSwitchStatementAccess().getStatementsBlockStatementParserRuleCall_5_2_0()); }
		ruleBlockStatement
		{ after(grammarAccess.getSwitchStatementAccess().getStatementsBlockStatementParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__StatementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementAccess().getStatementStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__StatementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
		ruleStatement
		{ after(grammarAccess.getDoStatementAccess().getStatementStatementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__InitExprAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getInitExprForInitParserRuleCall_2_0()); }
		ruleForInit
		{ after(grammarAccess.getForStatementAccess().getInitExprForInitParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__ConditionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getForStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__UpdateExprAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getUpdateExprForUpdateParserRuleCall_6_0()); }
		ruleForUpdate
		{ after(grammarAccess.getForStatementAccess().getUpdateExprForUpdateParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__StatementAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getForStatementAccess().getStatementStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__ExpressionsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_0_0()); }
		ruleStatementExpression
		{ after(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__ExpressionsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_1_1_0()); }
		ruleStatementExpression
		{ after(grammarAccess.getForInitAccess().getExpressionsStatementExpressionParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForInit__LocalVariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForInitAccess().getLocalVariableLocalVariableDeclarationParserRuleCall_1_0()); }
		ruleLocalVariableDeclaration
		{ after(grammarAccess.getForInitAccess().getLocalVariableLocalVariableDeclarationParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_0_0()); }
		ruleStatementExpression
		{ after(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ForUpdate__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_1_1_0()); }
		ruleStatementExpression
		{ after(grammarAccess.getForUpdateAccess().getExpressionsStatementExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBreakStatementAccess().getReferenceIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBreakStatementAccess().getReferenceIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContinueStatement__ReferenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContinueStatementAccess().getReferenceIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContinueStatementAccess().getReferenceIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ThrowsStatement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getThrowsStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getThrowsStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSynchronizedStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getSynchronizedStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SynchronizedStatement__BodyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSynchronizedStatementAccess().getBodyBlockParserRuleCall_4_0()); }
		ruleBlock
		{ after(grammarAccess.getSynchronizedStatementAccess().getBodyBlockParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__TryBodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTryStatementAccess().getTryBodyBlockParserRuleCall_1_0()); }
		ruleBlock
		{ after(grammarAccess.getTryStatementAccess().getTryBodyBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__ParamsAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTryStatementAccess().getParamsFormalParameterParserRuleCall_2_2_0()); }
		ruleFormalParameter
		{ after(grammarAccess.getTryStatementAccess().getParamsFormalParameterParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__CatchesBodyAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTryStatementAccess().getCatchesBodyBlockParserRuleCall_2_4_0()); }
		ruleBlock
		{ after(grammarAccess.getTryStatementAccess().getCatchesBodyBlockParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TryStatement__FinallyBodyAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTryStatementAccess().getFinallyBodyBlockParserRuleCall_3_1_0()); }
		ruleBlock
		{ after(grammarAccess.getTryStatementAccess().getFinallyBodyBlockParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ObjectAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getObjectLeftHandSideParserRuleCall_0_0()); }
		ruleLeftHandSide
		{ after(grammarAccess.getAssignmentAccess().getObjectLeftHandSideParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getOperatorAssignmentOperatorParserRuleCall_1_0()); }
		ruleAssignmentOperator
		{ after(grammarAccess.getAssignmentAccess().getOperatorAssignmentOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentAccess().getValueAssignmentExpressionParserRuleCall_2_0()); }
		ruleAssignmentExpression
		{ after(grammarAccess.getAssignmentAccess().getValueAssignmentExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getConditionConditionalOrExpressionParserRuleCall_0_0()); }
		ruleConditionalOrExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getConditionConditionalOrExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ThenAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getThenExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getThenExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__ElseAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalExpressionAccess().getElseConditionalExpressionParserRuleCall_1_3_0()); }
		ruleConditionalExpression
		{ after(grammarAccess.getConditionalExpressionAccess().getElseConditionalExpressionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_0_0()); }
		ruleConditionalAndExpression
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorsVerticalLineVerticalLineKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorsVerticalLineVerticalLineKeyword_1_0_0()); }
			'||'
			{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorsVerticalLineVerticalLineKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorsVerticalLineVerticalLineKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_1_1_0()); }
		ruleConditionalAndExpression
		{ after(grammarAccess.getConditionalOrExpressionAccess().getOperandsConditionalAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_0_0()); }
		ruleInclusiveOrExpression
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAmpersandAmpersandKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAmpersandAmpersandKeyword_1_0_0()); }
			'&&'
			{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAmpersandAmpersandKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorsAmpersandAmpersandKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_1_1_0()); }
		ruleInclusiveOrExpression
		{ after(grammarAccess.getConditionalAndExpressionAccess().getOperandsInclusiveOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_0_0()); }
		ruleExclusiveOrExpression
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsVerticalLineKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsVerticalLineKeyword_1_0_0()); }
			'|'
			{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsVerticalLineKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorsVerticalLineKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_1_1_0()); }
		ruleExclusiveOrExpression
		{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperandsExclusiveOrExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_0_0()); }
		ruleAndExpression
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsCircumflexAccentKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsCircumflexAccentKeyword_1_0_0()); }
			'^'
			{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsCircumflexAccentKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorsCircumflexAccentKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_1_1_0()); }
		ruleAndExpression
		{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperandsAndExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_0_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperatorsAmpersandKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getAndExpressionAccess().getOperatorsAmpersandKeyword_1_0_0()); }
			'&'
			{ after(grammarAccess.getAndExpressionAccess().getOperatorsAmpersandKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getAndExpressionAccess().getOperatorsAmpersandKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_1_1_0()); }
		ruleEqualityExpression
		{ after(grammarAccess.getAndExpressionAccess().getOperandsEqualityExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_0_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperatorsAlternatives_1_0_0()); }
		(rule__EqualityExpression__OperatorsAlternatives_1_0_0)
		{ after(grammarAccess.getEqualityExpressionAccess().getOperatorsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_1_1_0()); }
		ruleRelationalExpression
		{ after(grammarAccess.getEqualityExpressionAccess().getOperandsRelationalExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_0_0()); }
		ruleShiftExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorsAssignment_1_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsAlternatives_1_0_0_0_0()); }
		(rule__RelationalExpression__OperatorsAlternatives_1_0_0_0_0)
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsAlternatives_1_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperandsAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_1_0_0_1_0()); }
		ruleShiftExpression
		{ after(grammarAccess.getRelationalExpressionAccess().getOperandsShiftExpressionParserRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorsAssignment_1_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getOperatorsINSTANCEOFTerminalRuleCall_1_1_0_0_0()); }
		RULE_INSTANCEOF
		{ after(grammarAccess.getRelationalExpressionAccess().getOperatorsINSTANCEOFTerminalRuleCall_1_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__ClassesAssignment_1_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalExpressionAccess().getClassesReferenceTypeParserRuleCall_1_1_0_1_0()); }
		ruleReferenceType
		{ after(grammarAccess.getRelationalExpressionAccess().getClassesReferenceTypeParserRuleCall_1_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_0_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperatorsAlternatives_1_0_0()); }
		(rule__ShiftExpression__OperatorsAlternatives_1_0_0)
		{ after(grammarAccess.getShiftExpressionAccess().getOperatorsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_1_1_0()); }
		ruleAdditiveExpression
		{ after(grammarAccess.getShiftExpressionAccess().getOperandsAdditiveExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_0_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorsAlternatives_1_0_0()); }
		(rule__AdditiveExpression__OperatorsAlternatives_1_0_0)
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_1_1_0()); }
		ruleMultiplicativeExpression
		{ after(grammarAccess.getAdditiveExpressionAccess().getOperandsMultiplicativeExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperandsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_0_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAlternatives_1_0_0()); }
		(rule__MultiplicativeExpression__OperatorsAlternatives_1_0_0)
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperandsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_1_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperandsNoArrayExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getTypePrimitiveTypeParserRuleCall_0_1_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getCastExpressionAccess().getTypePrimitiveTypeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__OperandAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionParserRuleCall_0_3_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getTypeReferenceTypeParserRuleCall_1_1_0()); }
		ruleReferenceType
		{ after(grammarAccess.getCastExpressionAccess().getTypeReferenceTypeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__OperandAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionWithoutMinusParserRuleCall_1_3_0()); }
		ruleNoArrayExpressionWithoutMinus
		{ after(grammarAccess.getCastExpressionAccess().getOperandNoArrayExpressionWithoutMinusParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__OperatorAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorPlusSignKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorPlusSignKeyword_2_0_0()); }
			'+'
			{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorPlusSignKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorPlusSignKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__OperandAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__OperatorAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorHyphenMinusKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getNoArrayExpressionAccess().getOperatorHyphenMinusKeyword_3_0_0()); }
			'-'
			{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorHyphenMinusKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getNoArrayExpressionAccess().getOperatorHyphenMinusKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpression__OperandAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_3_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getNoArrayExpressionAccess().getOperandNoArrayExpressionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDecrementExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDecrementExpressionAccess().getOperatorHyphenMinusHyphenMinusKeyword_0_0()); }
		(
			{ before(grammarAccess.getPreDecrementExpressionAccess().getOperatorHyphenMinusHyphenMinusKeyword_0_0()); }
			'--'
			{ after(grammarAccess.getPreDecrementExpressionAccess().getOperatorHyphenMinusHyphenMinusKeyword_0_0()); }
		)
		{ after(grammarAccess.getPreDecrementExpressionAccess().getOperatorHyphenMinusHyphenMinusKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreDecrementExpression__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreDecrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getPreDecrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementExpression__OperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreIncrementExpressionAccess().getOperatorPlusSignPlusSignKeyword_0_0()); }
		(
			{ before(grammarAccess.getPreIncrementExpressionAccess().getOperatorPlusSignPlusSignKeyword_0_0()); }
			'++'
			{ after(grammarAccess.getPreIncrementExpressionAccess().getOperatorPlusSignPlusSignKeyword_0_0()); }
		)
		{ after(grammarAccess.getPreIncrementExpressionAccess().getOperatorPlusSignPlusSignKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PreIncrementExpression__OperandAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPreIncrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getPreIncrementExpressionAccess().getOperandNoArrayExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__OperatorAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorTildeKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorTildeKeyword_1_0_0()); }
			'~'
			{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorTildeKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorTildeKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__OperandAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_1_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__OperatorAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorExclamationMarkKeyword_2_0_0()); }
		(
			{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorExclamationMarkKeyword_2_0_0()); }
			'!'
			{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorExclamationMarkKeyword_2_0_0()); }
		)
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperatorExclamationMarkKeyword_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NoArrayExpressionWithoutMinus__OperandAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0()); }
		ruleNoArrayExpression
		{ after(grammarAccess.getNoArrayExpressionWithoutMinusAccess().getOperandNoArrayExpressionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ObjectAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getObjectPrimaryParserRuleCall_0_0_0()); }
		rulePrimary
		{ after(grammarAccess.getPostfixExpressionAccess().getObjectPrimaryParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__ReferenceAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getReferenceExpressionNameParserRuleCall_0_1_0()); }
		ruleExpressionName
		{ after(grammarAccess.getPostfixExpressionAccess().getReferenceExpressionNameParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__OperatorsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPostfixExpressionAccess().getOperatorsAlternatives_1_0()); }
		(rule__PostfixExpression__OperatorsAlternatives_1_0)
		{ after(grammarAccess.getPostfixExpressionAccess().getOperatorsAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__MethodAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getMethodMethodNameParserRuleCall_0_0_0()); }
		ruleMethodName
		{ after(grammarAccess.getMethodInvocationAccess().getMethodMethodNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgsAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ObjectAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getObjectPrimaryParserRuleCall_1_0_0_0()); }
		rulePrimary
		{ after(grammarAccess.getMethodInvocationAccess().getObjectPrimaryParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__MethodAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_1_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgsAssignment_1_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_1_0_4_0()); }
		ruleArgumentList
		{ after(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_1_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__KeywordAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getKeywordSUPERTerminalRuleCall_2_0_0_0()); }
		RULE_SUPER
		{ after(grammarAccess.getMethodInvocationAccess().getKeywordSUPERTerminalRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__MethodAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_2_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodInvocationAccess().getMethodIDTerminalRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodInvocation__ArgsAssignment_2_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_2_0_4_0()); }
		ruleArgumentList
		{ after(grammarAccess.getMethodInvocationAccess().getArgsArgumentListParserRuleCall_2_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__ObjectAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessAccess().getObjectPrimaryParserRuleCall_0_0_0()); }
		rulePrimary
		{ after(grammarAccess.getFieldAccessAccess().getObjectPrimaryParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__FieldAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__KeywordAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessAccess().getKeywordSUPERTerminalRuleCall_1_0_0_0()); }
		RULE_SUPER
		{ after(grammarAccess.getFieldAccessAccess().getKeywordSUPERTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldAccess__FieldAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_1_0_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldAccessAccess().getFieldIDTerminalRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__LiteralAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralLiteralParserRuleCall_0_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getLiteralLiteralParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__KeywordAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordTHISTerminalRuleCall_0_1_0()); }
		RULE_THIS
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordTHISTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__ClassAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getClassClassInstanceCreationExpressionParserRuleCall_0_3_0()); }
		ruleClassInstanceCreationExpression
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getClassClassInstanceCreationExpressionParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__KeywordAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordSUPERTerminalRuleCall_0_4_0()); }
		RULE_SUPER
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getKeywordSUPERTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__MethodAssignment_0_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getMethodMethodNameParserRuleCall_0_5_0_0()); }
		ruleMethodName
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getMethodMethodNameParserRuleCall_0_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__ArgsAssignment_0_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_0_5_2_0()); }
		ruleArgumentList
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_0_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__ReferenceAssignment_0_6_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceExpressionNameParserRuleCall_0_6_0_0()); }
		ruleExpressionName
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getReferenceExpressionNameParserRuleCall_0_6_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__DimensionsAssignment_0_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_0_6_1_0()); }
		ruleArrayExpression
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_0_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__FieldsAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__ArgsAssignment_1_0_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0()); }
		ruleArgumentList
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNoNewArray__DimensionsAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0()); }
		ruleArrayExpression
		{ after(grammarAccess.getPrimaryNoNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__ArrayAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getArrayArrayCreationExpressionParserRuleCall_0_0()); }
		ruleArrayCreationExpression
		{ after(grammarAccess.getPrimaryNewArrayAccess().getArrayArrayCreationExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__FieldsAssignment_1_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPrimaryNewArrayAccess().getFieldsIDTerminalRuleCall_1_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__ArgsAssignment_1_0_0_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0()); }
		ruleArgumentList
		{ after(grammarAccess.getPrimaryNewArrayAccess().getArgsArgumentListParserRuleCall_1_0_0_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryNewArray__DimensionsAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0()); }
		ruleArrayExpression
		{ after(grammarAccess.getPrimaryNewArrayAccess().getDimensionsArrayExpressionParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeClassTypeParserRuleCall_1_0()); }
		ruleClassType
		{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getTypeClassTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassInstanceCreationExpression__ArgsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsArgumentListParserRuleCall_3_0()); }
		ruleArgumentList
		{ after(grammarAccess.getClassInstanceCreationExpressionAccess().getArgsArgumentListParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__DeclarationsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_0_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArgumentList__DeclarationsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_1_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArgumentListAccess().getDeclarationsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__TypeAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getTypePrimitiveTypeParserRuleCall_1_0_0()); }
		rulePrimitiveType
		{ after(grammarAccess.getArrayCreationExpressionAccess().getTypePrimitiveTypeParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__TypeAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getTypeTypeNameParserRuleCall_1_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getArrayCreationExpressionAccess().getTypeTypeNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__DimensionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getDimensionsArrayExpressionParserRuleCall_2_0()); }
		ruleArrayExpression
		{ after(grammarAccess.getArrayCreationExpressionAccess().getDimensionsArrayExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayCreationExpression__LayersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCreationExpressionAccess().getLayersArrayTypeParserRuleCall_3_0()); }
		ruleArrayType
		{ after(grammarAccess.getArrayCreationExpressionAccess().getLayersArrayTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayExpression__IndexAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayExpressionAccess().getIndexExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getArrayExpressionAccess().getIndexExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__ReferenceAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccessAccess().getReferenceExpressionNameParserRuleCall_0_0_0()); }
		ruleExpressionName
		{ after(grammarAccess.getArrayAccessAccess().getReferenceExpressionNameParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__ArrayAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccessAccess().getArrayPrimaryNoNewArrayParserRuleCall_0_1_0()); }
		rulePrimaryNoNewArray
		{ after(grammarAccess.getArrayAccessAccess().getArrayPrimaryNoNewArrayParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayAccess__FieldAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccessAccess().getFieldArrayExpressionParserRuleCall_1_0()); }
		ruleArrayExpression
		{ after(grammarAccess.getArrayAccessAccess().getFieldArrayExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_DOC_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ABSTRACT : 'abstract';

RULE_AMPERSAND : 'ampersand';

RULE_BOOLEAN : 'boolean';

RULE_BREAK : 'break';

RULE_BYTE : 'byte';

RULE_CASE : 'case';

RULE_CATCH : 'catch';

RULE_CHAR : 'char';

RULE_CLASS : 'class';

RULE_CONST : 'const';

RULE_CONTINUE : 'continue';

RULE_DEFAULT : 'default';

RULE_DO : 'do';

RULE_DOUBLE : 'double';

RULE_ELSE : 'else';

RULE_EXTENDS : 'extends';

RULE_FALSE : 'false';

RULE_FINAL : 'final';

RULE_FINALLY : 'finally';

RULE_FLOAT : 'float';

RULE_FOR : 'for';

RULE_GOTO : 'goto';

RULE_IF : 'if';

RULE_IMPLEMENTS : 'implements';

RULE_IMPORT : 'import';

RULE_INSTANCEOF : 'instanceof';

RULE_INT : 'int';

RULE_INTERFACE : 'interface';

RULE_LONG : 'long';

RULE_NATIVE : 'native';

RULE_NEW : 'new';

RULE_NULL : 'null';

RULE_PACKAGE : 'package';

RULE_PRIVATE : 'private';

RULE_PROTECTED : 'protected';

RULE_PUBLIC : 'public';

RULE_RETURN : 'return';

RULE_SHORT : 'short';

RULE_STATIC : 'static';

RULE_SUPER : 'super';

RULE_SWITCH : 'switch';

RULE_SYNCHRONIZED : 'synchronized';

RULE_THIS : 'this';

RULE_THREADSAFE : 'threadsafe';

RULE_THROW : 'throw';

RULE_THROWS : 'throws';

RULE_TRANSIENT : 'transient';

RULE_TRY : 'try';

RULE_TRUE : 'true';

RULE_VOID : 'void';

RULE_VOLATILE : 'volatile';

RULE_WHILE : 'while';

RULE_ID : ('a'..'z'|'A'..'Z'|'_'|'$') ('a'..'z'|'A'..'Z'|'_'|'$'|'0'..'9')*;

RULE_DECIMAL_NUMERAL : ('0'|RULE_NON_ZERO_DIGIT RULE_DIGIT*);

fragment RULE_DIGIT : ('0'|RULE_NON_ZERO_DIGIT);

fragment RULE_NON_ZERO_DIGIT : '1'..'9';

RULE_HEX_NUMERAL : ('0x'|'0X') RULE_HEX_DIGIT+;

fragment RULE_HEX_DIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_OCTAL_NUMERAL : '0' RULE_OCTAL_DIGIT+;

fragment RULE_OCTAL_DIGIT : '0'..'7';

RULE_FLOAT_PART_COMPLEMENT : RULE_EXPONENT_PART? RULE_FLOAT_TYPE_SUFFIX?;

fragment RULE_EXPONENT_PART : RULE_EXPONENT_INDICATOR RULE_SIGNED_INTEGER;

fragment RULE_EXPONENT_INDICATOR : ('e'|'E');

fragment RULE_SIGNED_INTEGER : ('+'|'-') RULE_DIGIT+;

fragment RULE_FLOAT_TYPE_SUFFIX : ('f'|'F'|'d'|'D');

RULE_CHARACTER_LITERAL : ('\'' .|~(('\\'|'\'')) '\'');

RULE_STRING_LITERAL : '"' ('\\' .|~(('\\'|'"')))* '"';
